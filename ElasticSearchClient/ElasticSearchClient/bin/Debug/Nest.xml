<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nest</name>
    </assembly>
    <members>
        <member name="T:Nest.IAggregate">
            <summary>
            Represents the result of an aggregation on the response
            </summary>
        </member>
        <member name="T:Nest.IAggregation">
            <summary>
            Represents an aggregation on the request
            </summary>
        </member>
        <member name="M:Nest.AggregationContainerDescriptor`1._SetInnerAggregation``2(System.String,System.Func{``0,``1},System.Action{Nest.IAggregationContainer,``1})">
            <summary>
            Fluent methods do not assign to properties on `this` directly but on IAggregationContainers inside `this.Aggregations[string, IContainer]
            </summary>
        </member>
        <member name="P:Nest.FiltersAggregation.OtherBucket">
            <summary>
            Gets or sets whether to add a bucket to the response which will contain all documents
            that do not match any of the given filters.
            When set to <c>true</c>, the other bucket will be returned either in a bucket
            (named "_other_" by default) if named filters are being used,
             or as the last bucket if anonymous filters are being used
            When set to <c>false</c>, does not compute
            the other bucket.
            </summary>
        </member>
        <member name="P:Nest.FiltersAggregation.OtherBucketKey">
            <summary>
            Gets or sets the key for the other bucket to a value other than the default "_other_".
            Setting this parameter will implicitly set the <see cref="P:Nest.FiltersAggregation.OtherBucket"/> parameter to true
            </summary>
        </member>
        <member name="M:Nest.FiltersAggregationDescriptor`1.OtherBucket(System.Boolean)">
            <summary>
            Adds a bucket to the response which will contain all documents
            that do not match any of the given filters.
            When set to <c>true</c>, the other bucket will be returned either in a bucket
            (named "_other_" by default) if named filters are being used,
             or as the last bucket if anonymous filters are being used
            When set to <c>false</c>, does not compute
            the other bucket.
            </summary>
            <param name="otherBucket">whether to set the other bucket</param>
            <returns>the <see cref="T:Nest.FiltersAggregationDescriptor`1"/></returns>
        </member>
        <member name="M:Nest.FiltersAggregationDescriptor`1.OtherBucketKey(System.String)">
            <summary>
            Sets the key for the other bucket to a value other than the default "_other_".
            Setting this parameter will implicitly set the <see cref="M:Nest.FiltersAggregationDescriptor`1.OtherBucket(System.Boolean)"/> parameter to true
            </summary>
            <param name="otherBucketKey">the name for the other bucket</param>
            <returns>the <see cref="T:Nest.FiltersAggregationDescriptor`1"/></returns>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision1">
            <summary>
            5,009.4km x 4,992.6km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision2">
            <summary>
            1,252.3km x 624.1km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision3">
            <summary>
            156.5km x 156km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision4">
            <summary>
            39.1km x 19.5km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision5">
            <summary>
            4.9km x 4.9km
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision6">
            <summary>
            1.2km x 609.4m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision7">
            <summary>
            152.9m x 152.4m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision8">
            <summary>
            38.2m x 19m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision9">
            <summary>
            4.8m x 4.8m
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision10">
            <summary>
            1.2m x 59.5cm
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision11">
            <summary>
            14.9cm x 14.9cm
            </summary>
        </member>
        <member name="F:Nest.GeoHashPrecision.Precision12">
            <summary>
            3.7cm x 1.9cm
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.Field">
            <summary>
            The field on which to run the aggregation
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.Size">
            <summary>
            Defines how many term buckets should be returned out of the overall
            terms list
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.ShardSize">
            <summary>
            Controls the number of candidate terms produced by each shard from which
            the <see cref="P:Nest.ISignificantTermsAggregation.Size"/> of terms is selected.
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.MinimumDocumentCount">
            <summary>
            Return only terms that match equal to or more than a configurable
            number of hits
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.ExecutionHint">
            <summary>
            Determines the mechanism by which aggregations are executed
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.IncludeTerms">
            <summary>
            Include term values for which buckets will be created.
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.ExcludeTerms">
            <summary>
            Exclude term values for which buckets will be created.
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.MutualInformation">
            <summary>
            Use mutual information to calculate significance score
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.ChiSquare">
            <summary>
            Use chi square to calculate significance score
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.GoogleNormalizedDistance">
            <summary>
            Use Google normalized distance to calculate significance score
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.PercentageScore">
            <summary>
            Use percentage to calculate significance score.
            <para>A simple calculation of the number of documents in the foreground
            sample with a term divided by the number of documents in the background
            with the term. By default this produces a score greater than zero
             and less than one.</para>
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.Script">
            <summary>
            Use a script to calculate a custom significance score.
            </summary>
        </member>
        <member name="P:Nest.ISignificantTermsAggregation.BackgroundFilter">
            <summary>
            The default source of statistical information for background term
            frequencies is the entire index. This scope can be narrowed
            through the use of a background filter to focus in on significant
            terms within a narrower context
            </summary>
        </member>
        <member name="P:Nest.SignificantTermsAggregation.Field">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.Size">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.ShardSize">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.MinimumDocumentCount">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.ExecutionHint">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.IncludeTerms">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.ExcludeTerms">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.MutualInformation">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.ChiSquare">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.GoogleNormalizedDistance">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.PercentageScore">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.Script">
            <inheritdoc />
        </member>
        <member name="P:Nest.SignificantTermsAggregation.BackgroundFilter">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Field(Nest.Field)">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Size(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ExecutionHint(System.Nullable{Nest.TermsAggregationExecutionHint})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Include(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Include(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Exclude(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Exclude(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ShardSize(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.MinimumDocumentCount(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.MutualInformation(System.Func{Nest.MutualInformationHeuristicDescriptor,Nest.IMutualInformationHeuristic})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.ChiSquare(System.Func{Nest.ChiSquareHeuristicDescriptor,Nest.IChiSquareHeuristic})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.GoogleNormalizedDistance(System.Func{Nest.GoogleNormalizedDistanceHeuristicDescriptor,Nest.IGoogleNormalizedDistanceHeuristic})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.PercentageScore(System.Func{Nest.PercentageScoreHeuristicDescriptor,Nest.IPercentageScoreHeuristic})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.Script(System.Func{Nest.ScriptedHeuristicDescriptor,Nest.IScriptedHeuristic})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SignificantTermsAggregationDescriptor`1.BackgroundFilter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <inheritdoc />
        </member>
        <member name="T:Nest.TermsAggregationCollectMode">
            <summary>
            Determines how the terms aggregation is executed
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationCollectMode.DepthFirst">
            <summary>
            Order by using field values directly in order to aggregate data per-bucket 
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationCollectMode.BreadthFirst">
            <summary>
            Order by using ordinals of the field values instead of the values themselves
            </summary>
        </member>
        <member name="T:Nest.TermsAggregationExecutionHint">
            <summary>
            Determines how the terms aggregation is executed
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.Map">
            <summary>
            Order by using field values directly in order to aggregate data per-bucket 
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinals">
            <summary>
            Order by using ordinals of the field and preemptively allocating one bucket per ordinal value
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinalsHash">
            <summary>
            Order by using ordinals of the field and dynamically allocating one bucket per ordinal value
            </summary>
        </member>
        <member name="F:Nest.TermsAggregationExecutionHint.GlobalOrdinalsLowCardinality">
            <summary>
            Order by using per-segment ordinals to compute counts and remap these counts to global counts using global ordinals
            </summary>
        </member>
        <member name="P:Nest.TermsIncludeExclude.Partition">
            <summary>
            The current partition of terms we are interested in
            <para>IMPORTANT: Only valid on terms include</para>
            </summary>
        </member>
        <member name="P:Nest.TermsIncludeExclude.NumberOfPartitions">
            <summary>
            The total number of paritions we are interested in
            <para>IMPORTANT: Only valid on terms include</para>
            </summary>
        </member>
        <member name="T:Nest.MatrixStatsMode">
            <summary>
            The matrix_stats aggregation treats each document field as an independent sample.
            The mode parameter controls what array value the aggregation will use for array or
            multi-valued fields.
            </summary>
        </member>
        <member name="F:Nest.MatrixStatsMode.Avg">
            <summary>
            (default) Use the average of all values.
            </summary>
        </member>
        <member name="F:Nest.MatrixStatsMode.Min">
            <summary>
            Pick the lowest value.
            </summary>
        </member>
        <member name="F:Nest.MatrixStatsMode.Max">
            <summary>
            Pick the highest value.
            </summary>
        </member>
        <member name="F:Nest.MatrixStatsMode.Sum">
            <summary>
            Use the sum of all values.
            </summary>
        </member>
        <member name="F:Nest.MatrixStatsMode.Median">
            <summary>
            Use the median of all values.
            </summary>
        </member>
        <member name="M:Nest.ScriptedMetricAggregate.Value``1">
            <summary>
            Get the result of the scripted metric aggregation as T
            </summary>
            <typeparam name="T">The type that best represents the result of your scripted metric aggrgation</typeparam>
        </member>
        <member name="P:Nest.IAggregationVisitor.Depth">
            <summary>
            The current depth of the node being visited
            </summary>
        </member>
        <member name="P:Nest.IAggregationVisitor.Scope">
            <summary>
            Hints the relation with the parent, i.e aggregations contained inside a bucket aggregation will have AggregationVisitorScope.Bucket set.
            </summary>
        </member>
        <member name="M:Nest.IAggregationVisitor.Visit(Nest.IAggregationContainer)">
            <summary>
            Visit the aggregation container just before we dispatch into the aggregation it holds
            </summary>
            <param name="aggregationContainer"></param>
        </member>
        <member name="M:Nest.IAggregationVisitor.Visit(Nest.IAggregation)">
            <summary>
            Visit every aggregation item just before they are visited by their specialized Visit() implementation
            </summary>
            <param name="aggregation">The IAggregation object that will be visited</param>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Custom(System.String,System.Func{Nest.CustomAnalyzerDescriptor,Nest.ICustomAnalyzer})">
            <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters,
            and zero or more Char Filters.
            <para>The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of
            logical/registered names of token filters.</para>
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Keyword(System.String,System.Func{Nest.KeywordAnalyzerDescriptor,Nest.IKeywordAnalyzer})">
            <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on.
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para>
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Language(System.String,System.Func{Nest.LanguageAnalyzerDescriptor,Nest.ILanguageAnalyzer})">
            <summary>
            A set of analyzers aimed at analyzing specific language text.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Pattern(System.String,System.Func{Nest.PatternAnalyzerDescriptor,Nest.IPatternAnalyzer})">
            <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Simple(System.String,System.Func{Nest.SimpleAnalyzerDescriptor,Nest.ISimpleAnalyzer})">
            <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Snowball(System.String,System.Func{Nest.SnowballAnalyzerDescriptor,Nest.ISnowballAnalyzer})">
            <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para> The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from snowball.tartarus.org.</para>
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Standard(System.String,System.Func{Nest.StandardAnalyzerDescriptor,Nest.IStandardAnalyzer})">
            <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token Filter.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Stop(System.String,System.Func{Nest.StopAnalyzerDescriptor,Nest.IStopAnalyzer})">
            <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Whitespace(System.String,System.Func{Nest.WhitespaceAnalyzerDescriptor,Nest.IWhitespaceAnalyzer})">
            <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Fingerprint(System.String,System.Func{Nest.FingerprintAnalyzerDescriptor,Nest.IFingerprintAnalyzer})">
            <summary>
            An analyzer of type fingerprint that implements a fingerprinting algorithm which
            is used by the OpenRefine project to assist in clustering.
            </summary>
        </member>
        <member name="M:Nest.AnalyzersDescriptor.Kuromoji(System.String,System.Func{Nest.KuromojiAnalyzerDescriptor,Nest.IKuromojiAnalyzer})">
            <summary>
            An analyzer tailored for japanese that is bootstrapped with defaults.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="T:Nest.ICustomAnalyzer">
            <summary>
            An analyzer of type custom that allows to combine a Tokenizer with zero or more Token Filters,
            and zero or more Char Filters.
            <para>The custom analyzer accepts a logical/registered name of the tokenizer to use, and a list of
            logical/registered names of token filters.</para>
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.CharFilter">
            <summary>
            The logical / registered name of the tokenizer to use.
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.Filter">
            <summary>
            An optional list of logical / registered name of token filters.
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.Tokenizer">
            <summary>
            An optional list of logical / registered name of char filters.
            </summary>
        </member>
        <member name="P:Nest.ICustomAnalyzer.PositionOffsetGap">
            <summary>
            An optional number of positions to increment between each field value of a
            field using this analyzer.
            </summary>
        </member>
        <member name="P:Nest.CustomAnalyzer.Tokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomAnalyzer.Filter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomAnalyzer.CharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomAnalyzer.PositionOffsetGap">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.Filters(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.CharFilters(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.CharFilters(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.Tokenizer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomAnalyzerDescriptor.PositionOffsetGap(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IFingerprintAnalyzer">
            <summary>
            The fingerprint analyzer implements a fingerprinting algorithm which
            is used by the OpenRefine project to assist in clustering.
            </summary>
        </member>
        <member name="P:Nest.IFingerprintAnalyzer.Separator">
            <summary>
            The character that separates the tokens after concatenation. Defaults to a space.
            </summary>
        </member>
        <member name="P:Nest.IFingerprintAnalyzer.MaxOutputSize">
            <summary>
            The maximum token size to emit. Defaults to 255.
            </summary>
        </member>
        <member name="P:Nest.IFingerprintAnalyzer.PreserveOriginal">
            <summary>
            If true, emits both the original and folded version of tokens
            that contain extended characters. Defaults to false
            </summary>
        </member>
        <member name="P:Nest.IFingerprintAnalyzer.StopWords">
            <summary>
            A list of stop words to use. Defaults to an empty list
            </summary>
        </member>
        <member name="P:Nest.IFingerprintAnalyzer.StopWordsPath">
            <summary>
            A path(either relative to config location, or absolute) to a stopwords
            file configuration.Each stop word should be in its own "line"
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
        </member>
        <member name="T:Nest.FingerprintAnalyzer">
            <inheritdoc />
        </member>
        <member name="T:Nest.FingerprintAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeywordAnalyzer">
            <summary>
            An analyzer of type keyword that “tokenizes” an entire stream as a single token. This is useful for data like zip codes, ids and so on.
            <para>Note, when using mapping definitions, it make more sense to simply mark the field as not_analyzed.</para>
            </summary>
        </member>
        <member name="T:Nest.KeywordAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeywordAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILanguageAnalyzer">
            <summary>
            A set of analyzers aimed at analyzing specific language text.
            </summary>
        </member>
        <member name="P:Nest.ILanguageAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.ILanguageAnalyzer.StemExclusionList">
            <summary>
            The stem_exclusion parameter allows you to specify an array of lowercase words that should not be stemmed.
            </summary>
        </member>
        <member name="P:Nest.ILanguageAnalyzer.StopwordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
        </member>
        <member name="T:Nest.LanguageAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StemExclusionList">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.Language">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LanguageAnalyzer.StopwordsPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LanguageAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternAnalyzer">
            <summary>
            An analyzer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
        </member>
        <member name="P:Nest.IPatternAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to an empty list
            </summary>
        </member>
        <member name="T:Nest.PatternAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISimpleAnalyzer">
            <summary>
            An analyzer of type simple that is built using a Lower Case Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.SimpleAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SimpleAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISnowballAnalyzer">
            <summary>
            An analyzer of type snowball that uses the standard tokenizer, with standard filter, lowercase filter, stop filter, and snowball filter.
            <para> The Snowball Analyzer is a stemming analyzer from Lucene that is originally based on the snowball project from snowball.tartarus.org.</para>
            </summary>
        </member>
        <member name="T:Nest.SnowballAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SnowballAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStandardAnalyzer">
            <summary>
            An analyzer of type standard that is built of using Standard Tokenizer, with Standard Token Filter, Lower Case Token Filter, and Stop Token Filter.
            </summary>
        </member>
        <member name="P:Nest.IStandardAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.IStandardAnalyzer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.StandardAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StandardAnalyzer.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StandardAnalyzer.MaxTokenLength">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StandardAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStopAnalyzer">
            <summary>
            An analyzer of type stop that is built using a Lower Case Tokenizer, with Stop Token Filter.
            </summary>
        </member>
        <member name="P:Nest.IStopAnalyzer.StopWords">
            <summary>
            A list of stopword to initialize the stop filter with. Defaults to the english stop words.
            </summary>
        </member>
        <member name="P:Nest.IStopAnalyzer.StopwordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords file configuration.
            </summary>
        </member>
        <member name="T:Nest.StopAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopAnalyzer.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopAnalyzer.StopwordsPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StopAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWhitespaceAnalyzer">
            <summary>
            An analyzer of type whitespace that is built using a Whitespace Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.WhitespaceAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WhitespaceAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.PatternReplace(System.String,System.Func{Nest.PatternReplaceCharFilterDescriptor,Nest.IPatternReplaceCharFilter})">
            <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis.
            </summary>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.HtmlStrip(System.String,System.Func{Nest.HtmlStripCharFilterDescriptor,Nest.IHtmlStripCharFilter})">
            <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.Mapping(System.String,System.Func{Nest.MappingCharFilterDescriptor,Nest.IMappingCharFilter})">
            <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.KuromojiIterationMark(System.String,System.Func{Nest.KuromojiIterationMarkCharFilterDescriptor,Nest.IKuromojiIterationMarkCharFilter})">
            <summary>
            The kuromoji_iteration_mark normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="M:Nest.CharFiltersDescriptor.IcuNormalization(System.String,System.Func{Nest.IcuNormalizationCharFilterDescriptor,Nest.IIcuNormalizationCharFilter})">
            <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="T:Nest.IHtmlStripCharFilter">
            <summary>
            A char filter of type html_strip stripping out HTML elements from an analyzed text.
            </summary>
        </member>
        <member name="T:Nest.HtmlStripCharFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.HtmlStripCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IMappingCharFilter">
            <summary>
            A char filter of type mapping replacing characters of an analyzed text with given mapping.
            </summary>
        </member>
        <member name="T:Nest.MappingCharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MappingCharFilter.Mappings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MappingCharFilter.MappingsPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.MappingCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MappingCharFilterDescriptor.Mappings(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MappingCharFilterDescriptor.Mappings(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MappingCharFilterDescriptor.MappingsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternReplaceCharFilter">
            <summary>
            The pattern_replace char filter allows the use of a regex to manipulate the characters in a string before analysis. 
            </summary>
        </member>
        <member name="T:Nest.PatternReplaceCharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceCharFilter.Pattern">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceCharFilter.Replacement">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternReplaceCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceCharFilterDescriptor.Pattern(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceCharFilterDescriptor.Replacement(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.Language">
            <summary>
            Language types used for language analyzers
            </summary>
        </member>
        <member name="T:Nest.SnowballLanguage">
            <summary>
            Snowball compatible languages 
            </summary>
        </member>
        <member name="T:Nest.ICustomNormalizer">
            <summary>
            Normalizers are similar to analyzers except that they may only emit a single token.
            As a consequence, they do not have a tokenizer and only accept a subset of the available
            char filters and token filters. Only the filters that work on a per-character basis are
            allowed. For instance a lowercasing filter would be allowed, but not a stemming filter,
            which needs to look at the keyword as a whole.
            <para>Elasticsearch does not ship with built-in normalizers so far, so the only way to create one is through composing a custom one</para>
            </summary>
        </member>
        <member name="P:Nest.ICustomNormalizer.CharFilter">
            <summary>
            Char filters to normalize the keyword
            </summary>
        </member>
        <member name="P:Nest.ICustomNormalizer.Filter">
            <summary>
            An optional list of logical / registered name of token filters.
            </summary>
        </member>
        <member name="T:Nest.CustomNormalizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomNormalizer.Filter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CustomNormalizer.CharFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CustomNormalizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomNormalizerDescriptor.Filters(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomNormalizerDescriptor.Filters(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomNormalizerDescriptor.CharFilters(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CustomNormalizerDescriptor.CharFilters(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NormalizersDescriptor.Custom(System.String,System.Func{Nest.CustomNormalizerDescriptor,Nest.ICustomNormalizer})">
            <summary>
            Elasticsearch does not ship with built-in normalizers so far, so the only way to
            get one is by building a custom one. Custom normalizers take a list of char character
            filters and a list of token filters.
            </summary>
        </member>
        <member name="T:Nest.IcuCollationAlternate">
            <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
        </member>
        <member name="T:Nest.IcuCollationCaseFirst">
            <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
        </member>
        <member name="T:Nest.IcuCollationDecomposition">
            <summary>
            Setting this decomposition property to canonical allows the Collator to handle unnormalized
            text properly, producing the same results as if the text were normalized. If no is set, it
            is the user’s responsibility to insure that all text is already in the appropriate form
            before a comparison or before getting a CollationKey. Adjusting decomposition mode
            allows the user to select between faster and more complete collation behavior. Since a
            great many of the world’s languages do not require text normalization, most locales
            set no as the default decomposition mode.
            </summary>
        </member>
        <member name="T:Nest.IcuCollationStrength">
            <summary>
            The strength property determines the minimum level of
            difference considered significant during comparison.
            See also: http://icu-project.org/apiref/icu4j/com/ibm/icu/text/Collator.html
            </summary>
        </member>
        <member name="F:Nest.IcuCollationStrength.Primary">
            <summary>
            Typically, this is used to denote differences between base characters (for example, "a" &lt; "b").
            It is the strongest difference. For example, dictionaries are divided into different sections by
            base character.
            </summary>
        </member>
        <member name="F:Nest.IcuCollationStrength.Secondary">
            <summary>
            Accents in the characters are considered secondary differences (for example, "as" &lt; "às" &lt; "at").
            Other differences between letters can also be considered secondary differences, depending on
            the language. A secondary difference is ignored when there is a primary difference anywhere
            in the strings.
            </summary>
        </member>
        <member name="F:Nest.IcuCollationStrength.Tertiary">
            <summary>
            Upper and lower case differences in characters are distinguished at tertiary strength
            (for example, "ao" &lt; "Ao" &lt; "aò"). In addition, a variant of a letter differs from the base
            form on the tertiary strength (such as "A" and "Ⓐ"). Another example is the difference between
            large and small Kana. A tertiary difference is ignored when there is a primary or secondary
            difference anywhere in the strings.
            </summary>
        </member>
        <member name="F:Nest.IcuCollationStrength.Quaternary">
            <summary>
            When punctuation is ignored (see Ignoring Punctuations in the User Guide) at PRIMARY to
            TERTIARY strength, an additional strength level can be used to distinguish words with
            and without punctuation (for example, "ab" &lt; "a-b" &lt; "aB"). This difference is ignored
            when there is a PRIMARY, SECONDARY or TERTIARY difference. The QUATERNARY strength should
            only be used if ignoring punctuation is required.
            </summary>
        </member>
        <member name="F:Nest.IcuCollationStrength.Indentical">
            <summary>
            When all other strengths are equal, the IDENTICAL strength is used as a tiebreaker.
            The Unicode code point values of the NFD form of each string are compared, just in
            case there is no difference. For example, Hebrew cantellation marks are only
            distinguished at this strength. This strength should be used sparingly, as only code
            point value differences between two strings is an extremely rare occurrence. Using
            this strength substantially decreases the performance for both comparison and collation key
            generation APIs. This strength also increases the size of the collation key.
            </summary>
        </member>
        <member name="T:Nest.IIcuCollationTokenFilter">
            <summary>
            Collations are used for sorting documents in a language-specific word order. The icu_collation token filter is available to all indices and defaults to using the DUCET collation, which is a best-effort attempt at language-neutral sorting.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.Strength">
            <summary>
            The strength property determines the minimum level of difference considered significant during comparison.
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.Decomposition">
            <summary>
            Setting this decomposition property to canonical allows the Collator to handle unnormalized text properly,
            producing the same results as if the text were normalized. If no is set, it is the user’s responsibility to
            insure that all text is already in the appropriate form before a comparison or before getting a CollationKey.
            Adjusting decomposition mode allows the user to select between faster and more complete collation behavior.
            Since a great many of the world’s languages do not require text normalization,
            most locales set no as the default decomposition mode.
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.Alternate">
            <summary>
            Sets the alternate handling for strength quaternary to be either shifted or non-ignorable.
            Which boils down to ignoring punctuation and whitespace.
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.CaseLevel">
            <summary>
            Whether case level sorting is required. When strength is set to primary this will ignore accent differences
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.CaseFirst">
            <summary>
            Useful to control which case is sorted first when case is not ignored for strength tertiary.
            The default depends on the collation.
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.Numeric">
            <summary>
            Whether digits are sorted according to their numeric representation.
            For example the value egg-9 is sorted before the value egg-21.
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.VariableTop">
            <summary>
            Single character or contraction. Controls what is variable for <see cref="P:Nest.IIcuCollationTokenFilter.Alternate"/>.
            </summary>
        </member>
        <member name="P:Nest.IIcuCollationTokenFilter.HiraganaQuaternaryMode">
            <summary>
            Distinguishing between Katakana and Hiragana characters in quaternary strength.
            </summary>
        </member>
        <member name="T:Nest.IcuCollationTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Language">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Country">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Variant">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Strength">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Decomposition">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Alternate">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.CaseLevel">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.CaseFirst">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.Numeric">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.VariableTop">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuCollationTokenFilter.HiraganaQuaternaryMode">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuCollationTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Language(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Country(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Variant(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Strength(System.Nullable{Nest.IcuCollationStrength})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Decomposition(System.Nullable{Nest.IcuCollationDecomposition})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Alternate(System.Nullable{Nest.IcuCollationAlternate})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.CaseFirst(System.Nullable{Nest.IcuCollationCaseFirst})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.CaseLevel(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.Numeric(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.HiraganaQuaternaryMode(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuCollationTokenFilterDescriptor.VariableTop(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IIcuFoldingTokenFilter">
            <summary>
            Case folding of Unicode characters based on UTR#30, like the ASCII-folding token filter on steroids.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="P:Nest.IIcuFoldingTokenFilter.UnicodeSetFilter">
            <summary>
            Which letters are folded can be controlled by specifying the unicodeSetFilter parameter, which accepts a UnicodeSet.
            </summary>
        </member>
        <member name="T:Nest.IcuFoldingTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuFoldingTokenFilter.UnicodeSetFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuFoldingTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuFoldingTokenFilterDescriptor.UnicodeSetFilter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IIcuNormalizationCharFilter">
            <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="P:Nest.IIcuNormalizationCharFilter.Name">
            <summary>
            The type of normalization
            </summary>
        </member>
        <member name="P:Nest.IIcuNormalizationCharFilter.Mode">
            <summary>
            Set the mode parameter to decompose to convert nfc to nfd or nfkc to nfkd respectively
            </summary>
        </member>
        <member name="T:Nest.IcuNormalizationCharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuNormalizationCharFilter.Name">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuNormalizationCharFilter.Mode">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuNormalizationCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuNormalizationCharFilterDescriptor.Name(System.Nullable{Nest.IcuNormalizationType})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuNormalizationCharFilterDescriptor.Mode(System.Nullable{Nest.IcuNormalizationMode})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IIcuNormalizationTokenFilter">
            <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="P:Nest.IIcuNormalizationTokenFilter.Name">
            <summary>
            The type of normalization
            </summary>
        </member>
        <member name="T:Nest.IcuNormalizationTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuNormalizationTokenFilter.Name">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuNormalizationTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuNormalizationTokenFilterDescriptor.Name(System.Nullable{Nest.IcuNormalizationType})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IIcuTokenizer">
            <summary>
            Tokenizes text into words on word boundaries, as defined in UAX #29: Unicode Text Segmentation. It behaves much
            like the standard tokenizer, but adds better support for some Asian languages by using a dictionary-based approach
            to identify words in Thai, Lao, Chinese, Japanese, and Korean, and using custom rules to break Myanmar and Khmer
            text into syllables.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="P:Nest.IIcuTokenizer.RuleFiles">
            <summary>
            You can customize the icu-tokenizer behavior by specifying per-script rule files,
            see the RBBI rules syntax reference for a more detailed explanation.
            </summary>
        </member>
        <member name="T:Nest.IcuTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuTokenizer.RuleFiles">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuTokenizerDescriptor.RuleFiles(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IIcuTransformTokenFilter">
            <summary>
            Transforms are used to process Unicode text in many different ways, such as case mapping,
            normalization, transliteration and bidirectional text handling.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="P:Nest.IIcuTransformTokenFilter.Direction">
            <summary>
            Specify text direction with the dir parameter which accepts forward (default) for LTR and reverse for RTL.
            </summary>
        </member>
        <member name="T:Nest.IcuTransformTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IcuTransformTokenFilter.Direction">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuTransformTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuTransformTokenFilterDescriptor.Direction(System.Nullable{Nest.IcuTransformDirection})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IcuTransformTokenFilterDescriptor.Id(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IcuNormalizationMode">
            <summary>
            Normalization mode https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms
            </summary>
        </member>
        <member name="F:Nest.IcuNormalizationMode.Decompose">
            <summary>
            Switch normalization type to decompose
            </summary>
        </member>
        <member name="F:Nest.IcuNormalizationMode.Compose">
            <summary>
            Switch normalization type to compose, which is the default so you'd never need to set this
            Included here for completeness sake because the Java API has it.
            </summary>
        </member>
        <member name="T:Nest.IcuNormalizationType">
            <summary>
            Normalization forms https://en.wikipedia.org/wiki/Unicode_equivalence#Normal_forms
            </summary>
        </member>
        <member name="F:Nest.IcuNormalizationType.Canonical">
            <summary>
            Characters are decomposed and then recomposed by canonical equivalence.
            </summary>
        </member>
        <member name="F:Nest.IcuNormalizationType.Compatibility">
            <summary>
            Characters are decomposed by compatibility, then recomposed by canonical equivalence.
            </summary>
        </member>
        <member name="F:Nest.IcuNormalizationType.CompatibilityCaseFold">
            <summary>
            Characters are decomposed by compatibility, then recomposed by canonical equivalence with case folding
            </summary>
        </member>
        <member name="T:Nest.IcuTransformDirection">
            <summary>
            Forward (default) for LTR and reverse for RTL
            </summary>
        </member>
        <member name="F:Nest.IcuTransformDirection.Forward">
            <summary>LTR</summary>
        </member>
        <member name="F:Nest.IcuTransformDirection.Reverse">
            <summary> RTL</summary>
        </member>
        <member name="T:Nest.IKuromojiAnalyzer">
            <summary>
            An analyzer tailored for japanese that is bootstrapped with defaults.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="T:Nest.KuromojiAnalyzer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiAnalyzerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKuromojiIterationMarkCharFilter">
            <summary>
            The kuromoji_iteration_mark normalizes Japanese horizontal iteration marks (odoriji) to their expanded form.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="T:Nest.KuromojiIterationMarkCharFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiIterationMarkCharFilter.NormalizeKanji">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiIterationMarkCharFilter.NormalizeKana">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiIterationMarkCharFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiIterationMarkCharFilterDescriptor.NormalizeKanji(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiIterationMarkCharFilterDescriptor.NormalizeKana(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKuromojiPartOfSpeechTokenFilter">
            <summary>
            The kuromoji_part_of_speech token filter removes tokens that match a set of part-of-speech tags.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="P:Nest.IKuromojiPartOfSpeechTokenFilter.StopTags">
            <summary>
            An array of part-of-speech tags that should be removed. It defaults to the stoptags.txt file embedded
            in the lucene-analyzer-kuromoji.jar.
            </summary>
        </member>
        <member name="T:Nest.KuromojiPartOfSpeechTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiPartOfSpeechTokenFilter.StopTags">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiPartOfSpeechTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiPartOfSpeechTokenFilterDescriptor.StopTags(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiPartOfSpeechTokenFilterDescriptor.StopTags(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKuromojiReadingFormTokenFilter">
            <summary>
            The kuromoji_readingform token filter replaces the token with its reading form in either katakana or romaji.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="P:Nest.IKuromojiReadingFormTokenFilter.UseRomaji">
            <summary>
            Whether romaji reading form should be output instead of katakana. Defaults to false.
            </summary>
        </member>
        <member name="T:Nest.KuromojiReadingFormTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiReadingFormTokenFilter.UseRomaji">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiReadingFormTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiReadingFormTokenFilterDescriptor.UseRomaji(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKuromojiStemmerTokenFilter">
            <summary>
            The kuromoji_stemmer token filter normalizes common katakana spelling variations ending in a
            long sound character by removing this character (U+30FC). Only full-width katakana characters are supported.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="P:Nest.IKuromojiStemmerTokenFilter.MinimumLength">
            <summary>
            Katakana words shorter than the minimum length are not stemmed (default is 4).
            </summary>
        </member>
        <member name="T:Nest.KuromojiStemmerTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiStemmerTokenFilter.MinimumLength">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiStemmerTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiStemmerTokenFilterDescriptor.MinimumLength(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiTokenizationMode">
            <summary>
            The tokenization mode determines how the tokenizer handles compound and unknown words.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="F:Nest.KuromojiTokenizationMode.Normal">
            <summary>
            Normal segmentation, no decomposition for compounds
            </summary>
        </member>
        <member name="F:Nest.KuromojiTokenizationMode.Search">
            <summary>
            Segmentation geared towards search. This includes a decompounding process for long nouns,
            also including the full compound token as a synonym.
            </summary>
        </member>
        <member name="F:Nest.KuromojiTokenizationMode.Extended">
            <summary>
            Extended mode outputs unigrams for unknown words.
            </summary>
        </member>
        <member name="T:Nest.IKuromojiTokenizer">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="P:Nest.IKuromojiTokenizer.Mode">
            <summary>
            The tokenization mode determines how the tokenizer handles compound and unknown words.
            </summary>
        </member>
        <member name="P:Nest.IKuromojiTokenizer.DiscardPunctuation">
            <summary>
            Whether punctuation should be discarded from the output. Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IKuromojiTokenizer.UserDictionary">
            <summary>
            The Kuromoji tokenizer uses the MeCab-IPADIC dictionary by default. A user_dictionary may be
            appended to the default dictionary.
            </summary>
        </member>
        <member name="P:Nest.IKuromojiTokenizer.NBestExamples">
             <summary>
            The nbest_examples can be used to find a nbest_cost value based on examples. For example,
             a value of /箱根山-箱根/成田空港-成田/ indicates that in the texts, 箱根山 (Mt. Hakone) and 成田空港 (Narita Airport)
             we’d like a cost that gives is us 箱根 (Hakone) and 成田 (Narita).
             </summary>
        </member>
        <member name="P:Nest.IKuromojiTokenizer.NBestCost">
            <summary>
            The nbest_cost parameter specifies an additional Viterbi cost. The KuromojiTokenizer will include all tokens in
            Viterbi paths that are within the nbest_cost value of the best path.
            </summary>
        </member>
        <member name="T:Nest.KuromojiTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiTokenizer.Mode">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiTokenizer.DiscardPunctuation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiTokenizer.UserDictionary">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiTokenizer.NBestExamples">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KuromojiTokenizer.NBestCost">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KuromojiTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiTokenizerDescriptor.Mode(System.Nullable{Nest.KuromojiTokenizationMode})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiTokenizerDescriptor.DiscardPunctuation(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiTokenizerDescriptor.UserDictionary(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiTokenizerDescriptor.NBestExamples(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KuromojiTokenizerDescriptor.NBestCost(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPhoneticTokenFilter">
            <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
        </member>
        <member name="P:Nest.IPhoneticTokenFilter.Encoder">
            <summary>
            The type of phonetic encoding to use
            </summary>
        </member>
        <member name="P:Nest.IPhoneticTokenFilter.Replace">
             <summary>
            The replace parameter (defaults to true) controls if the token processed should be replaced 
             with the encoded one (set it to true), or added (set it to false). 
             </summary>
        </member>
        <member name="T:Nest.PhoneticTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PhoneticTokenFilter.Encoder">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PhoneticTokenFilter.Replace">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PhoneticTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PhoneticTokenFilterDescriptor.Replace(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PhoneticTokenFilterDescriptor.Encoder(System.Nullable{Nest.PhoneticEncoder})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IAsciiFoldingTokenFilter">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are 
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="T:Nest.AsciiFoldingTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.AsciiFoldingTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AsciiFoldingTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ICommonGramsTokenFilter">
             <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para>
             </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.CommonWords">
            <summary>
            A list of common words to use.
            </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.CommonWordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of common words.
            </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.IgnoreCase">
            <summary>
            If true, common words matching will be case insensitive.
            </summary>
        </member>
        <member name="P:Nest.ICommonGramsTokenFilter.QueryMode">
            <summary>
            Generates bigrams then removes common words and single terms followed by a common word.
            </summary>
        </member>
        <member name="T:Nest.CommonGramsTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.CommonWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.CommonWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CommonGramsTokenFilter.QueryMode">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CommonGramsTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.QueryMode(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonGramsTokenFilterDescriptor.CommonWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ICompoundWordTokenFilter">
            <summary>
            Token filters that allow to decompose compound words.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.WordList">
            <summary>
            A list of words to use.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.WordListPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of words.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.HyphenationPatternsPath">
            <summary>
            A path (either relative to config location, or absolute) to a FOP XML hyphenation pattern file.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.MinWordSize">
            <summary>
            Minimum word size.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.MinSubwordSize">
            <summary>
            Minimum subword size.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.MaxSubwordSize">
            <summary>
            Maximum subword size.
            </summary>
        </member>
        <member name="P:Nest.ICompoundWordTokenFilter.OnlyLongestMatch">
            <summary>
            Only matching the longest.
            </summary>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.WordList">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.WordListPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.MinWordSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.MinSubwordSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.MaxSubwordSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CompoundWordTokenFilterBase.OnlyLongestMatch">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CompoundWordTokenFilterDescriptorBase`2">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordList(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordList(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.WordListPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.HyphenationPatternsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MinWordSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MinSubwordSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.MaxSubwordSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CompoundWordTokenFilterDescriptorBase`2.OnlyLongestMatch(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DictionaryDecompounderTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DictionaryDecompounderTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IHyphenationDecompounderTokenFilter">
            <summary>
            Token filters that allow to decompose compound words.
            </summary>
        </member>
        <member name="T:Nest.HyphenationDecompounderTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.HyphenationDecompounderTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IDelimitedPayloadTokenFilter">
            <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
        </member>
        <member name="P:Nest.IDelimitedPayloadTokenFilter.Delimiter">
            <summary>
            Character used for splitting the tokens.
            </summary>
        </member>
        <member name="P:Nest.IDelimitedPayloadTokenFilter.Encoding">
            <summary>
            The type of the payload. int for integer, float for float and identity for characters. 
            </summary>
        </member>
        <member name="T:Nest.DelimitedPayloadTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DelimitedPayloadTokenFilter.Delimiter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DelimitedPayloadTokenFilter.Encoding">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DelimitedPayloadTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DelimitedPayloadTokenFilterDescriptor.Delimiter(System.Char)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DelimitedPayloadTokenFilterDescriptor.Encoding(System.Nullable{Nest.DelimitedPayloadEncoding})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IEdgeNGramTokenFilter">
            <summary>
            A token filter of type edgeNGram.
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenFilter.MinGram">
             <summary>
            Defaults to 1. 
             </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenFilter.MaxGram">
             <summary>
            Defaults to 2. 
             </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenFilter.Side">
            <summary>
            Either front or back. Defaults to front.
            </summary>
        </member>
        <member name="T:Nest.EdgeNGramTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenFilter.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenFilter.MaxGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenFilter.Side">
            <inheritdoc/>
        </member>
        <member name="T:Nest.EdgeNGramTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenFilterDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenFilterDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenFilterDescriptor.Side(System.Nullable{Nest.EdgeNGramSide})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IElisionTokenFilter">
            <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
        </member>
        <member name="P:Nest.IElisionTokenFilter.Articles">
            <summary>
            Accepts articles setting which is a set of stop words articles
            </summary>
        </member>
        <member name="T:Nest.ElisionTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ElisionTokenFilter.Articles">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ElisionTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElisionTokenFilterDescriptor.Articles(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElisionTokenFilterDescriptor.Articles(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IFingerprintTokenFilter">
            <summary>
            The fingerprint token filter emits a single token which is useful
            for fingerprinting a body of text, and/or providing a token that can be
            clustered on. It does this by sorting the tokens, deduplicating and
            then concatenating them back into a single token.
            </summary>
        </member>
        <member name="P:Nest.IFingerprintTokenFilter.Separator">
            <summary>
            The character that separates the tokens after concatenation.
            Defaults to a space.
            </summary>
        </member>
        <member name="P:Nest.IFingerprintTokenFilter.MaxOutputSize">
            <summary>
            The maximum token size to emit. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.FingerprintTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FingerprintTokenFilter.Separator">
            <summary>
            The character that separates the tokens after concatenation.
            Defaults to a space.
            </summary>
        </member>
        <member name="P:Nest.FingerprintTokenFilter.MaxOutputSize">
            <summary>
            The maximum token size to emit. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.FingerprintTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IHunspellTokenFilter">
             <summary>
             Basic support for hunspell stemming. 
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para>
             </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.IgnoreCase">
            <summary>
            If true, dictionary matching will be case insensitive.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.Locale">
            <summary>
            A locale for this filter. If this is unset, the lang or language are used instead - so one of these has to be set.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.Dictionary">
            <summary>
            The name of a dictionary.The path to your hunspell dictionaries should be configured via 
            `indices.analysis.hunspell.dictionary.location` before.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.Dedup">
            <summary>
            If only unique terms should be returned, this needs to be set to true.
            </summary>
        </member>
        <member name="P:Nest.IHunspellTokenFilter.LongestOnly">
            <summary>
            If only the longest term should be returned, set this to true.
            </summary>
        </member>
        <member name="T:Nest.HunspellTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.Locale">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.Dictionary">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.Dedup">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HunspellTokenFilter.LongestOnly">
            <inheritdoc/>
        </member>
        <member name="T:Nest.HunspellTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.LongestOnly(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.Dedup(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.Locale(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HunspellTokenFilterDescriptor.Dictionary(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeepTypesTokenFilter">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="P:Nest.IKeepTypesTokenFilter.Types">
            <summary>
            A list of types to keep.
            </summary>
        </member>
        <member name="T:Nest.KeepTypesTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepTypesTokenFilter.Types">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeepTypesTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepTypesTokenFilterDescriptor.Types(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepTypesTokenFilterDescriptor.Types(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeepWordsTokenFilter">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="P:Nest.IKeepWordsTokenFilter.KeepWords">
            <summary>
            A list of words to keep.
            </summary>
        </member>
        <member name="P:Nest.IKeepWordsTokenFilter.KeepWordsPath">
            <summary>
            A path to a words file.
            </summary>
        </member>
        <member name="P:Nest.IKeepWordsTokenFilter.KeepWordsCase">
            <summary>
            A boolean indicating whether to lower case the words.
            </summary>
        </member>
        <member name="T:Nest.KeepWordsTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepWordsTokenFilter.KeepWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepWordsTokenFilter.KeepWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeepWordsTokenFilter.KeepWordsCase">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeepWordsTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWordsCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeepWordsTokenFilterDescriptor.KeepWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeywordMarkerTokenFilter">
            <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="P:Nest.IKeywordMarkerTokenFilter.Keywords">
            <summary>
            A list of words to use.
            </summary>
        </member>
        <member name="P:Nest.IKeywordMarkerTokenFilter.KeywordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of words.
            </summary>
        </member>
        <member name="P:Nest.IKeywordMarkerTokenFilter.IgnoreCase">
            <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
        </member>
        <member name="T:Nest.KeywordMarkerTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordMarkerTokenFilter.Keywords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordMarkerTokenFilter.KeywordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordMarkerTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeywordMarkerTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.KeywordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.Keywords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordMarkerTokenFilterDescriptor.Keywords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKStemTokenFilter">
             <summary>
            The kstem token filter is a high performance filter for english. 
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para>
             </summary>
        </member>
        <member name="T:Nest.KStemTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KStemTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILengthTokenFilter">
            <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
        </member>
        <member name="P:Nest.ILengthTokenFilter.Min">
            <summary>
            The minimum number. Defaults to 0. 
            </summary>
        </member>
        <member name="P:Nest.ILengthTokenFilter.Max">
            <summary>
            The maximum number. Defaults to Integer.MAX_VALUE.
            </summary>
        </member>
        <member name="T:Nest.LengthTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LengthTokenFilter.Min">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LengthTokenFilter.Max">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LengthTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LengthTokenFilterDescriptor.Min(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LengthTokenFilterDescriptor.Max(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILimitTokenCountTokenFilter">
            <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
        </member>
        <member name="P:Nest.ILimitTokenCountTokenFilter.MaxTokenCount">
            <summary>
            The maximum number of tokens that should be indexed per document and field.
            </summary>
        </member>
        <member name="P:Nest.ILimitTokenCountTokenFilter.ConsumeAllTokens">
            <summary>
            If set to true the filter exhaust the stream even if max_token_count tokens have been consumed already.
            </summary>
        </member>
        <member name="T:Nest.LimitTokenCountTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LimitTokenCountTokenFilter.MaxTokenCount">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LimitTokenCountTokenFilter.ConsumeAllTokens">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LimitTokenCountTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LimitTokenCountTokenFilterDescriptor.ConsumeAllToken(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LimitTokenCountTokenFilterDescriptor.MaxTokenCount(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILowercaseTokenFilter">
             <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para>
             </summary>
        </member>
        <member name="P:Nest.ILowercaseTokenFilter.Language">
            <summary>
            Lowercase token filter supports Greek, Irish, and Turkish lowercase token filters through the language parameter
            </summary>
        </member>
        <member name="T:Nest.LowercaseTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.LowercaseTokenFilter.Language">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LowercaseTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.LowercaseTokenFilterDescriptor.Language(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.INGramTokenFilter">
            <summary>
            A token filter of type nGram.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenFilter.MinGram">
            <summary>
            Defaults to 1. 
            </summary>
        </member>
        <member name="P:Nest.INGramTokenFilter.MaxGram">
            <summary>
            Defaults to 2 
            </summary>
        </member>
        <member name="T:Nest.NGramTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenFilter.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenFilter.MaxGram">
            <inheritdoc/>
        </member>
        <member name="T:Nest.NGramTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenFilterDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenFilterDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternCaptureTokenFilter">
            <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular expression.
            </summary>
        </member>
        <member name="P:Nest.IPatternCaptureTokenFilter.Patterns">
            <summary>
            The regular expression patterns to capture
            </summary>
        </member>
        <member name="P:Nest.IPatternCaptureTokenFilter.PreserveOriginal">
            <summary>
            If preserve_original is set to true then it would also emit the original token
            </summary>
        </member>
        <member name="T:Nest.PatternCaptureTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternCaptureTokenFilter.Patterns">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternCaptureTokenFilter.PreserveOriginal">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternCaptureTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternCaptureTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternCaptureTokenFilterDescriptor.Patterns(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternCaptureTokenFilterDescriptor.Patterns(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternReplaceTokenFilter">
            <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression. 
            </summary>
        </member>
        <member name="P:Nest.IPatternReplaceTokenFilter.Pattern">
            <summary>
            The regular expression
            </summary>
        </member>
        <member name="P:Nest.IPatternReplaceTokenFilter.Replacement">
            <summary>
            Replacement string
            </summary>
        </member>
        <member name="T:Nest.PatternReplaceTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceTokenFilter.Pattern">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternReplaceTokenFilter.Replacement">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PatternReplaceTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Pattern(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternReplaceTokenFilterDescriptor.Replacement(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPorterStemTokenFilter">
            <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
        </member>
        <member name="T:Nest.PorterStemTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.PorterStemTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IReverseTokenFilter">
            <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
        </member>
        <member name="T:Nest.ReverseTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ReverseTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IShingleTokenFilter">
            <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream. 
            <para>In other words, it creates combinations of tokens as a single token. </para>
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.MinShingleSize">
            <summary>
            The minimum shingle size. Defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.MaxShingleSize">
            <summary>
            The maximum shingle size. Defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.OutputUnigrams">
            <summary>
            If true the output will contain the input tokens (unigrams) as well as the shingles. Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.OutputUnigramsIfNoShingles">
            <summary>
            If output_unigrams is false the output will contain the input tokens (unigrams) if no shingles are available. 
            <para>Note if output_unigrams is set to true this setting has no effect. Defaults to false.</para>
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.TokenSeparator">
            <summary>
            The string to use when joining adjacent tokens to form a shingle. Defaults to " ".
            </summary>
        </member>
        <member name="P:Nest.IShingleTokenFilter.FillerToken">
            <summary>
            The string to use as a replacement for each position at which there is no actual token in the stream. For instance this string is used if the position increment is greater than one when a stop filter is used together with the shingle filter. Defaults to "_"
            </summary>
        </member>
        <member name="T:Nest.ShingleTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.MinShingleSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.MaxShingleSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.OutputUnigrams">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.OutputUnigramsIfNoShingles">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.TokenSeparator">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShingleTokenFilter.FillerToken">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ShingleTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.OutputUnigrams(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.OutputUnigramsIfNoShingles(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.MinShingleSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.MaxShingleSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.TokenSeparator(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShingleTokenFilterDescriptor.FillerToken(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISnowballTokenFilter">
            <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
        </member>
        <member name="T:Nest.SnowballTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SnowballTokenFilter.Language">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SnowballTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SnowballTokenFilterDescriptor.Language(System.Nullable{Nest.SnowballLanguage})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStandardTokenFilter">
            <summary>
            A token filter of type standard that normalizes tokens extracted with the Standard Tokenizer.
            </summary>
        </member>
        <member name="T:Nest.StandardTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StandardTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStemmerOverrideTokenFilter">
            <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="P:Nest.IStemmerOverrideTokenFilter.Rules">
            <summary>
            A list of mapping rules to use.
            </summary>
        </member>
        <member name="P:Nest.IStemmerOverrideTokenFilter.RulesPath">
            <summary>
            A path (either relative to config location, or absolute) to a list of mappings.
            </summary>
        </member>
        <member name="T:Nest.StemmerOverrideTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StemmerOverrideTokenFilter.Rules">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StemmerOverrideTokenFilter.RulesPath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StemmerOverrideTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.Rules(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.Rules(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerOverrideTokenFilterDescriptor.RulesPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStemmerTokenFilter">
            <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
        </member>
        <member name="T:Nest.StemmerTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StemmerTokenFilterDescriptor.Language(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStopTokenFilter">
            <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.StopWords">
            <summary>
            A list of stop words to use. Defaults to `_english_` stop words.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.IgnoreCase">
            <summary>
            Set to true to lower case all words first. Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.StopWordsPath">
            <summary>
            A path (either relative to config location, or absolute) to a stopwords 
            file configuration. Each stop word should be in its own "line" 
            (separated by a line break). The file must be UTF-8 encoded.
            </summary>
        </member>
        <member name="P:Nest.IStopTokenFilter.RemoveTrailing">
            <summary>
            Set to false in order to not ignore the last term of a search if it is a stop word. 
            This is very useful for  the completion suggester as a query like green a can
            be extended to green apple even though  you remove stop words in general. Defaults to true.
            </summary>
        </member>
        <member name="T:Nest.StopTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.StopWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.StopWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.StopTokenFilter.RemoveTrailing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.StopTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.RemoveTrailing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWords(Nest.StopWords)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.StopTokenFilterDescriptor.StopWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISynonymGraphTokenFilter">
            <summary>
            The synonym_graph token filter allows to easily handle synonyms,
            including multi-word synonyms correctly during the analysis process.
            </summary>
        </member>
        <member name="P:Nest.ISynonymGraphTokenFilter.SynonymsPath">
            <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
        </member>
        <member name="T:Nest.SynonymGraphTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymGraphTokenFilter.SynonymsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymGraphTokenFilter.Format">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymGraphTokenFilter.Synonyms">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymGraphTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymGraphTokenFilter.Expand">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymGraphTokenFilter.Tokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SynonymGraphTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Expand(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Tokenizer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.SynonymsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Format(System.Nullable{Nest.SynonymFormat})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Synonyms(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymGraphTokenFilterDescriptor.Synonyms(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ISynonymTokenFilter">
            <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process. 
            </summary>
        </member>
        <member name="P:Nest.ISynonymTokenFilter.SynonymsPath">
            <summary>
             a path a synonyms file relative to the node's `config` location.
            </summary>
        </member>
        <member name="T:Nest.SynonymTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.SynonymsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Format">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Synonyms">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.IgnoreCase">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Expand">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SynonymTokenFilter.Tokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.SynonymTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.IgnoreCase(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Expand(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Tokenizer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.SynonymsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Format(System.Nullable{Nest.SynonymFormat})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Synonyms(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SynonymTokenFilterDescriptor.Synonyms(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.DictionaryDecompounder(System.String,System.Func{Nest.DictionaryDecompounderTokenFilterDescriptor,Nest.IDictionaryDecompounderTokenFilter})">
            <summary>
            Token filters that allow to decompose compound words using a dictionary
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.HyphenationDecompounder(System.String,System.Func{Nest.HyphenationDecompounderTokenFilterDescriptor,Nest.IHyphenationDecompounderTokenFilter})">
            <summary>
            Token filters that allow to decompose compound words using FOP XML
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.EdgeNGram(System.String,System.Func{Nest.EdgeNGramTokenFilterDescriptor,Nest.IEdgeNGramTokenFilter})">
            <summary>
            A token filter of type edgeNGram.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Phonetic(System.String,System.Func{Nest.PhoneticTokenFilterDescriptor,Nest.IPhoneticTokenFilter})">
            <summary>
            The phonetic token filter is provided as a plugin.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Shingle(System.String,System.Func{Nest.ShingleTokenFilterDescriptor,Nest.IShingleTokenFilter})">
            <summary>
            A token filter of type shingle that constructs shingles (token n-grams) from a token stream.
            <para>In other words, it creates combinations of tokens as a single token. </para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Stop(System.String,System.Func{Nest.StopTokenFilterDescriptor,Nest.IStopTokenFilter})">
            <summary>
            A token filter of type stop that removes stop words from token streams.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Synonym(System.String,System.Func{Nest.SynonymTokenFilterDescriptor,Nest.ISynonymTokenFilter})">
            <summary>
            The synonym token filter allows to easily handle synonyms during the analysis process.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.SynonymGraph(System.String,System.Func{Nest.SynonymGraphTokenFilterDescriptor,Nest.ISynonymGraphTokenFilter})">
            <summary>
            The synonym_graph token filter allows to easily handle synonyms,
            including multi-word synonyms correctly during the analysis process.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.WordDelimiter(System.String,System.Func{Nest.WordDelimiterTokenFilterDescriptor,Nest.IWordDelimiterTokenFilter})">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.WordDelimiterGraph(System.String,System.Func{Nest.WordDelimiterGraphTokenFilterDescriptor,Nest.IWordDelimiterGraphTokenFilter})">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.AsciiFolding(System.String,System.Func{Nest.AsciiFoldingTokenFilterDescriptor,Nest.IAsciiFoldingTokenFilter})">
            <summary>
            A token filter of type asciifolding that converts alphabetic, numeric, and symbolic Unicode characters which are
            <para> not in the first 127 ASCII characters (the “Basic Latin” Unicode block) into their ASCII equivalents, if one exists.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.CommonGrams(System.String,System.Func{Nest.CommonGramsTokenFilterDescriptor,Nest.ICommonGramsTokenFilter})">
             <summary>
             Token filter that generates bigrams for frequently occuring terms. Single terms are still indexed.
            <para>Note, common_words or common_words_path field is required.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.DelimitedPayload(System.String,System.Func{Nest.DelimitedPayloadTokenFilterDescriptor,Nest.IDelimitedPayloadTokenFilter})">
            <summary>
            Splits tokens into tokens and payload whenever a delimiter character is found.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Elision(System.String,System.Func{Nest.ElisionTokenFilterDescriptor,Nest.IElisionTokenFilter})">
            <summary>
            A token filter which removes elisions. For example, “l’avion” (the plane) will tokenized as “avion” (plane).
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Hunspell(System.String,System.Func{Nest.HunspellTokenFilterDescriptor,Nest.IHunspellTokenFilter})">
             <summary>
             Basic support for hunspell stemming.
            <para> Hunspell dictionaries will be picked up from a dedicated hunspell directory on the filesystem.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KeepTypes(System.String,System.Func{Nest.KeepTypesTokenFilterDescriptor,Nest.IKeepTypesTokenFilter})">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KeepWords(System.String,System.Func{Nest.KeepWordsTokenFilterDescriptor,Nest.IKeepWordsTokenFilter})">
            <summary>
            A token filter of type keep that only keeps tokens with text contained in a predefined set of words.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KeywordMarker(System.String,System.Func{Nest.KeywordMarkerTokenFilterDescriptor,Nest.IKeywordMarkerTokenFilter})">
            <summary>
            Protects words from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KStem(System.String,System.Func{Nest.KStemTokenFilterDescriptor,Nest.IKStemTokenFilter})">
             <summary>
            The kstem token filter is a high performance filter for english.
            <para> All terms must already be lowercased (use lowercase filter) for this filter to work correctly.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Length(System.String,System.Func{Nest.LengthTokenFilterDescriptor,Nest.ILengthTokenFilter})">
            <summary>
            A token filter of type length that removes words that are too long or too short for the stream.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.LimitTokenCount(System.String,System.Func{Nest.LimitTokenCountTokenFilterDescriptor,Nest.ILimitTokenCountTokenFilter})">
            <summary>
            Limits the number of tokens that are indexed per document and field.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Lowercase(System.String,System.Func{Nest.LowercaseTokenFilterDescriptor,Nest.ILowercaseTokenFilter})">
             <summary>
             A token filter of type lowercase that normalizes token text to lower case.
            <para> Lowercase token filter supports Greek and Turkish lowercase token filters through the language parameter.</para>
             </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.NGram(System.String,System.Func{Nest.NGramTokenFilterDescriptor,Nest.INGramTokenFilter})">
            <summary>
            A token filter of type nGram.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.PatternCapture(System.String,System.Func{Nest.PatternCaptureTokenFilterDescriptor,Nest.IPatternCaptureTokenFilter})">
            <summary>
            The pattern_capture token filter, unlike the pattern tokenizer, emits a token for every capture group in the regular expression.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.PatternReplace(System.String,System.Func{Nest.PatternReplaceTokenFilterDescriptor,Nest.IPatternReplaceTokenFilter})">
            <summary>
            The pattern_replace token filter allows to easily handle string replacements based on a regular expression.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.PorterStem(System.String,System.Func{Nest.PorterStemTokenFilterDescriptor,Nest.IPorterStemTokenFilter})">
            <summary>
            A token filter of type porterStem that transforms the token stream as per the Porter stemming algorithm.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Reverse(System.String,System.Func{Nest.ReverseTokenFilterDescriptor,Nest.IReverseTokenFilter})">
            <summary>
            A token filter of type reverse that simply reverses the tokens.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Snowball(System.String,System.Func{Nest.SnowballTokenFilterDescriptor,Nest.ISnowballTokenFilter})">
            <summary>
            A filter that stems words using a Snowball-generated stemmer.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Standard(System.String,System.Func{Nest.StandardTokenFilterDescriptor,Nest.IStandardTokenFilter})">
            <summary>
            A token filter of type standard that normalizes tokens extracted with the Standard Tokenizer.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Stemmer(System.String,System.Func{Nest.StemmerTokenFilterDescriptor,Nest.IStemmerTokenFilter})">
            <summary>
            A filter that stems words (similar to snowball, but with more options).
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.StemmerOverride(System.String,System.Func{Nest.StemmerOverrideTokenFilterDescriptor,Nest.IStemmerOverrideTokenFilter})">
            <summary>
            Overrides stemming algorithms, by applying a custom mapping, then protecting these terms from being modified by stemmers. Must be placed before any stemming filters.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Trim(System.String,System.Func{Nest.TrimTokenFilterDescriptor,Nest.ITrimTokenFilter})">
            <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Truncate(System.String,System.Func{Nest.TruncateTokenFilterDescriptor,Nest.ITruncateTokenFilter})">
            <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token)
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Unique(System.String,System.Func{Nest.UniqueTokenFilterDescriptor,Nest.IUniqueTokenFilter})">
            <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the token stream
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Uppercase(System.String,System.Func{Nest.UppercaseTokenFilterDescriptor,Nest.IUppercaseTokenFilter})">
            <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.Fingerprint(System.String,System.Func{Nest.FingerprintTokenFilterDescriptor,Nest.IFingerprintTokenFilter})">
            <summary>
            A token filter of type fingerprint The fingerprint token filter that emits a single token which is useful
            for fingerprinting a body of text, and/or providing a token that can be clustered on.
            It does this by sorting the tokens, deduplicating and then concatenating them back into a single token.
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KuromojiStemmer(System.String,System.Func{Nest.KuromojiStemmerTokenFilterDescriptor,Nest.IKuromojiStemmerTokenFilter})">
            <summary>
            The kuromoji_stemmer token filter normalizes common katakana spelling variations ending in a
            long sound character by removing this character (U+30FC). Only full-width katakana characters are supported.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KuromojiReadingForm(System.String,System.Func{Nest.KuromojiReadingFormTokenFilterDescriptor,Nest.IKuromojiReadingFormTokenFilter})">
            <summary>
            The kuromoji_readingform token filter replaces the token with its reading form in either katakana or romaji.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.KuromojiPartOfSpeech(System.String,System.Func{Nest.KuromojiPartOfSpeechTokenFilterDescriptor,Nest.IKuromojiPartOfSpeechTokenFilter})">
            <summary>
            The kuromoji_part_of_speech token filter removes tokens that match a set of part-of-speech tags.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.IcuCollation(System.String,System.Func{Nest.IcuCollationTokenFilterDescriptor,Nest.IIcuCollationTokenFilter})">
            <summary>
            Collations are used for sorting documents in a language-specific word order. The icu_collation token filter is available to all indices and defaults to using the DUCET collation, which is a best-effort attempt at language-neutral sorting.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.IcuFolding(System.String,System.Func{Nest.IcuFoldingTokenFilterDescriptor,Nest.IIcuFoldingTokenFilter})">
            <summary>
            Case folding of Unicode characters based on UTR#30, like the ASCII-folding token filter on steroids.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.IcuNormalization(System.String,System.Func{Nest.IcuNormalizationTokenFilterDescriptor,Nest.IIcuNormalizationTokenFilter})">
            <summary>
            Normalizes as defined here: http://userguide.icu-project.org/transforms/normalization
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="M:Nest.TokenFiltersDescriptor.IcuTransform(System.String,System.Func{Nest.IcuTransformTokenFilterDescriptor,Nest.IIcuTransformTokenFilter})">
            <summary>
            Transforms are used to process Unicode text in many different ways, such as case mapping,
            normalization, transliteration and bidirectional text handling.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="T:Nest.ITrimTokenFilter">
            <summary>
            The trim token filter trims surrounding whitespaces around a token.
            </summary>
        </member>
        <member name="T:Nest.TrimTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.TrimTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ITruncateTokenFilter">
            <summary>
            The truncate token filter can be used to truncate tokens into a specific length. This can come in handy with keyword (single token) 
            <para> based mapped fields that are used for sorting in order to reduce memory usage.</para>
            </summary>
        </member>
        <member name="P:Nest.ITruncateTokenFilter.Length">
            <summary>
            length parameter which control the number of characters to truncate to, defaults to 10.
            </summary>
        </member>
        <member name="T:Nest.TruncateTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TruncateTokenFilter.Length">
            <inheritdoc/>
        </member>
        <member name="T:Nest.TruncateTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TruncateTokenFilterDescriptor.Length(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IUniqueTokenFilter">
            <summary>
            The unique token filter can be used to only index unique tokens during analysis. By default it is applied on all the token stream
            </summary>
        </member>
        <member name="P:Nest.IUniqueTokenFilter.OnlyOnSamePosition">
            <summary>
             If only_on_same_position is set to true, it will only remove duplicate tokens on the same position.
            </summary>
        </member>
        <member name="T:Nest.UniqueTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UniqueTokenFilter.OnlyOnSamePosition">
            <inheritdoc/>
        </member>
        <member name="T:Nest.UniqueTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UniqueTokenFilterDescriptor.OnlyOnSamePosition(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IUppercaseTokenFilter">
            <summary>
            A token filter of type uppercase that normalizes token text to upper case.
            </summary>
        </member>
        <member name="T:Nest.UppercaseTokenFilter">
            <inheritdoc/>
        </member>
        <member name="T:Nest.UppercaseTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWordDelimiterGraphTokenFilter">
            <summary>
            Named word_delimiter, it Splits words into subwords and performs optional transformations on subword groups.
            Unlike the word_delimiter this token filter named word_delimiter_graph correctly handles multi terms expansion at query time.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.GenerateWordParts">
            <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.GenerateNumberParts">
            <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.CatenateWords">
            <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.CatenateNumbers">
            <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.CatenateAll">
            <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.SplitOnCaseChange">
            <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.PreserveOriginal">
            <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.SplitOnNumerics">
            <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.StemEnglishPossessive">
            <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.ProtectedWords">
            <summary>
             A list of protected words from being delimiter.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.ProtectedWordsPath">
             <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line).
             Automatically resolves to config/ based location if exists.
             </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.TypeTable">
            <summary>
            A custom type mapping table
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterGraphTokenFilter.TypeTablePath">
            <summary>
            A path to a custom type mapping table file
            </summary>
        </member>
        <member name="T:Nest.WordDelimiterGraphTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.GenerateWordParts">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.GenerateNumberParts">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.CatenateWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.CatenateNumbers">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.CatenateAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.SplitOnCaseChange">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.PreserveOriginal">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.SplitOnNumerics">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.StemEnglishPossessive">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.ProtectedWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.ProtectedWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.TypeTable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterGraphTokenFilter.TypeTablePath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WordDelimiterGraphTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.GenerateWordParts(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.GenerateNumberParts(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.CatenateWords(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.CatenateNumbers(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.CatenateAll(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.SplitOnCaseChange(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.SplitOnNumerics(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.StemEnglishPossessive(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.ProtectedWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.ProtectedWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.ProtectedWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.TypeTable(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.TypeTable(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterGraphTokenFilterDescriptor.TypeTablePath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWordDelimiterTokenFilter">
            <summary>
            Named word_delimiter, it Splits words into subwords and performs optional transformations on subword groups.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.GenerateWordParts">
            <summary>
            If true causes parts of words to be generated: "PowerShot" ⇒ "Power" "Shot". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.GenerateNumberParts">
            <summary>
            If true causes number subwords to be generated: "500-42" ⇒ "500" "42". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.CatenateWords">
            <summary>
            If true causes maximum runs of word parts to be catenated: "wi-fi" ⇒ "wifi". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.CatenateNumbers">
            <summary>
            If true causes maximum runs of number parts to be catenated: "500-42" ⇒ "50042". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.CatenateAll">
            <summary>
            If true causes all subword parts to be catenated: "wi-fi-4000" ⇒ "wifi4000". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.SplitOnCaseChange">
            <summary>
            If true causes "PowerShot" to be two tokens; ("Power-Shot" remains two parts regards). Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.PreserveOriginal">
            <summary>
            If true includes original words in subwords: "500-42" ⇒ "500-42" "500" "42". Defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.SplitOnNumerics">
            <summary>
            If true causes "j2se" to be three tokens; "j" "2" "se". Defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.StemEnglishPossessive">
            <summary>
            If true causes trailing "'s" to be removed for each subword: "O’Neil’s" ⇒ "O", "Neil". Defaults to true. 
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.ProtectedWords">
            <summary>
             A list of protected words from being delimiter.
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.ProtectedWordsPath">
             <summary>
            protected_words_path which resolved to a file configured with protected words (one on each line). 
             Automatically resolves to config/ based location if exists.
             </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.TypeTable">
            <summary>
            A custom type mapping table
            </summary>
        </member>
        <member name="P:Nest.IWordDelimiterTokenFilter.TypeTablePath">
            <summary>
            A path to a custom type mapping table file
            </summary>
        </member>
        <member name="T:Nest.WordDelimiterTokenFilter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.GenerateWordParts">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.GenerateNumberParts">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.CatenateWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.CatenateNumbers">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.CatenateAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.SplitOnCaseChange">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.PreserveOriginal">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.SplitOnNumerics">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.StemEnglishPossessive">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.ProtectedWords">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.ProtectedWordsPath">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.TypeTable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.WordDelimiterTokenFilter.TypeTablePath">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WordDelimiterTokenFilterDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.GenerateWordParts(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.GenerateNumberParts(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateWords(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateNumbers(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.CatenateAll(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.SplitOnCaseChange(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.SplitOnNumerics(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.PreserveOriginal(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.StemEnglishPossessive(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWords(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWords(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.ProtectedWordsPath(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTable(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTable(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.WordDelimiterTokenFilterDescriptor.TypeTablePath(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IKeywordTokenizer">
            <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
        </member>
        <member name="P:Nest.IKeywordTokenizer.BufferSize">
            <summary>
            The term buffer size. Defaults to 256.
            </summary>
        </member>
        <member name="T:Nest.KeywordTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeywordTokenizer.BufferSize">
            <inheritdoc/>
        </member>
        <member name="T:Nest.KeywordTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeywordTokenizerDescriptor.BufferSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILetterTokenizer">
            <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters. 
            <para>Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not separated by spaces.</para>
            </summary>
        </member>
        <member name="T:Nest.LetterTokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LetterTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ILowercaseTokenizer">
            <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together. 
            <para>It divides text at non-letters and converts them to lower case. </para>
            <para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para>
            <para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para>
            </summary>
        </member>
        <member name="T:Nest.LowercaseTokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.LowercaseTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IEdgeNGramTokenizer">
            <summary>
            A tokenizer of type edgeNGram.
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenizer.MinGram">
            <summary>
            Minimum size in codepoints of a single n-gram
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenizer.MaxGram">
            <summary>
            Maximum size in codepoints of a single n-gram
            </summary>
        </member>
        <member name="P:Nest.IEdgeNGramTokenizer.TokenChars">
            <summary>
            Characters classes to keep in the tokens, Elasticsearch
             will split on characters that don’t belong to any of these classes.
            </summary>
        </member>
        <member name="T:Nest.EdgeNGramTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenizer.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenizer.MaxGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.EdgeNGramTokenizer.TokenChars">
            <inheritdoc/>
        </member>
        <member name="T:Nest.EdgeNGramTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.TokenChars(System.Collections.Generic.IEnumerable{Nest.TokenChar})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.EdgeNGramTokenizerDescriptor.TokenChars(Nest.TokenChar[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.INGramTokenizer">
            <summary>
            A tokenizer of type nGram.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenizer.MinGram">
            <summary>
            Minimum size in codepoints of a single n-gram, defaults to 1.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenizer.MaxGram">
            <summary>
            Maximum size in codepoints of a single n-gram, defaults to 2.
            </summary>
        </member>
        <member name="P:Nest.INGramTokenizer.TokenChars">
            <summary>
            Characters classes to keep in the tokens, Elasticsearch will
            split on characters that don’t belong to any of these classes. 
            </summary>
        </member>
        <member name="T:Nest.NGramTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenizer.MinGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenizer.MaxGram">
            <inheritdoc/>
        </member>
        <member name="P:Nest.NGramTokenizer.TokenChars">
            <inheritdoc/>
        </member>
        <member name="T:Nest.NGramTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.MinGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.MaxGram(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.TokenChars(System.Collections.Generic.IEnumerable{Nest.TokenChar})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.NGramTokenizerDescriptor.TokenChars(Nest.TokenChar[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPathHierarchyTokenizer">
             <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para>
            <para>And produces tokens:</para>
            <para></para>
            <para>/something</para>
            <para>/something/something</para>
            <para>/something/something/else</para>
             </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Delimiter">
            <summary>
            The character delimiter to use, defaults to /.
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Replacement">
            <summary>
            An optional replacement character to use. Defaults to the delimiter
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.BufferSize">
            <summary>
            The buffer size to use, defaults to 1024.
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Reverse">
            <summary>
            Generates tokens in reverse order, defaults to false.
            </summary>
        </member>
        <member name="P:Nest.IPathHierarchyTokenizer.Skip">
            <summary>
            Controls initial tokens to skip, defaults to 0.
            </summary>
        </member>
        <member name="T:Nest.PathHierarchyTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Delimiter">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Replacement">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.BufferSize">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Reverse">
            <summary/>
        </member>
        <member name="P:Nest.PathHierarchyTokenizer.Skip">
            <summary/>
        </member>
        <member name="T:Nest.PathHierarchyTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.BufferSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Skip(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Reverse(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Delimiter(System.Nullable{System.Char})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PathHierarchyTokenizerDescriptor.Replacement(System.Nullable{System.Char})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IPatternTokenizer">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
        </member>
        <member name="P:Nest.IPatternTokenizer.Pattern">
            <summary>
            The regular expression pattern, defaults to \W+.
            </summary>
        </member>
        <member name="P:Nest.IPatternTokenizer.Flags">
            <summary>
            The regular expression flags.
            </summary>
        </member>
        <member name="P:Nest.IPatternTokenizer.Group">
            <summary>
            Which group to extract into tokens. Defaults to -1 (split).
            </summary>
        </member>
        <member name="T:Nest.PatternTokenizer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternTokenizer.Pattern">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternTokenizer.Flags">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PatternTokenizer.Group">
            <summary/>
        </member>
        <member name="T:Nest.PatternTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternTokenizerDescriptor.Group(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternTokenizerDescriptor.Pattern(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PatternTokenizerDescriptor.Flags(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IStandardTokenizer">
            <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language documents. 
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para>
            </summary>
        </member>
        <member name="P:Nest.IStandardTokenizer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.StandardTokenizer">
            <summary/>
        </member>
        <member name="P:Nest.StandardTokenizer.MaxTokenLength">
            <summary/>
        </member>
        <member name="M:Nest.StandardTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TokenizersDescriptor.EdgeNGram(System.String,System.Func{Nest.EdgeNGramTokenizerDescriptor,Nest.IEdgeNGramTokenizer})">
            <summary>
            A tokenizer of type edgeNGram.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.NGram(System.String,System.Func{Nest.NGramTokenizerDescriptor,Nest.INGramTokenizer})">
            <summary>
            A tokenizer of type nGram.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Keyword(System.String,System.Func{Nest.KeywordTokenizerDescriptor,Nest.IKeywordTokenizer})">
            <summary>
            A tokenizer of type keyword that emits the entire input as a single input.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Letter(System.String,System.Func{Nest.LetterTokenizerDescriptor,Nest.ILetterTokenizer})">
            <summary>
            A tokenizer of type letter that divides text at non-letters. That’s to say, it defines tokens as maximal strings of adjacent letters.
            <para>Note, this does a decent job for most European languages, but does a terrible job for some Asian languages, where words are not separated by spaces.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Lowercase(System.String,System.Func{Nest.LowercaseTokenizerDescriptor,Nest.ILowercaseTokenizer})">
            <summary>
            A tokenizer of type lowercase that performs the function of Letter Tokenizer and Lower Case Token Filter together.
            <para>It divides text at non-letters and converts them to lower case. </para>
            <para>While it is functionally equivalent to the combination of Letter Tokenizer and Lower Case Token Filter, </para>
            <para>there is a performance advantage to doing the two tasks at once, hence this (redundant) implementation.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.PathHierarchy(System.String,System.Func{Nest.PathHierarchyTokenizerDescriptor,Nest.IPathHierarchyTokenizer})">
             <summary>
             The path_hierarchy tokenizer takes something like this:
            <para>/something/something/else</para>
            <para>And produces tokens:</para>
            <para></para>
            <para>/something</para>
            <para>/something/something</para>
            <para>/something/something/else</para>
             </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Pattern(System.String,System.Func{Nest.PatternTokenizerDescriptor,Nest.IPatternTokenizer})">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Standard(System.String,System.Func{Nest.StandardTokenizerDescriptor,Nest.IStandardTokenizer})">
            <summary>
            A tokenizer of type standard providing grammar based tokenizer that is a good tokenizer for most European language documents.
            <para>The tokenizer implements the Unicode Text Segmentation algorithm, as specified in Unicode Standard Annex #29.</para>
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.UaxEmailUrl(System.String,System.Func{Nest.UaxEmailUrlTokenizerDescriptor,Nest.IUaxEmailUrlTokenizer})">
            <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Whitespace(System.String,System.Func{Nest.WhitespaceTokenizerDescriptor,Nest.IWhitespaceTokenizer})">
            <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Kuromoji(System.String,System.Func{Nest.KuromojiTokenizerDescriptor,Nest.IKuromojiTokenizer})">
            <summary>
            A tokenizer of type pattern that can flexibly separate text into terms via a regular expression.
            Part of the `analysis-kuromoji` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-kuromoji.html
            </summary>
        </member>
        <member name="M:Nest.TokenizersDescriptor.Icu(System.String,System.Func{Nest.IcuTokenizerDescriptor,Nest.IIcuTokenizer})">
            <summary>
            Tokenizes text into words on word boundaries, as defined in UAX #29: Unicode Text Segmentation. It behaves much
            like the standard tokenizer, but adds better support for some Asian languages by using a dictionary-based approach
            to identify words in Thai, Lao, Chinese, Japanese, and Korean, and using custom rules to break Myanmar and Khmer
            text into syllables.
            Part of the `analysis-icu` plugin: https://www.elastic.co/guide/en/elasticsearch/plugins/current/analysis-icu.html
            </summary>
        </member>
        <member name="T:Nest.IUaxEmailUrlTokenizer">
            <summary>
            A tokenizer of type uax_url_email which works exactly like the standard tokenizer, but tokenizes emails and urls as single tokens
            </summary>
        </member>
        <member name="P:Nest.IUaxEmailUrlTokenizer.MaxTokenLength">
            <summary>
            The maximum token length. If a token is seen that exceeds this length then it is discarded. Defaults to 255.
            </summary>
        </member>
        <member name="T:Nest.UaxEmailUrlTokenizer">
            <summary/>
        </member>
        <member name="P:Nest.UaxEmailUrlTokenizer.MaxTokenLength">
            <summary/>
        </member>
        <member name="T:Nest.UaxEmailUrlTokenizerDescriptor">
            <summary/>
        </member>
        <member name="M:Nest.UaxEmailUrlTokenizerDescriptor.MaxTokenLength(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IWhitespaceTokenizer">
            <summary>
            A tokenizer of type whitespace that divides text at whitespace.
            </summary>
        </member>
        <member name="T:Nest.WhitespaceTokenizer">
            <inheritdoc/>
        </member>
        <member name="T:Nest.WhitespaceTokenizerDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CatAliasesRequest">
            <summary>Request parameters for CatAliases <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html</pre></summary>
        </member>
        <member name="M:Nest.CatAliasesRequest.#ctor">
            <summary>/_cat/aliases</summary>
        </member>
        <member name="M:Nest.CatAliasesRequest.#ctor(Nest.Names)">
             <summary>/_cat/aliases/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatAliasesRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatAliasesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatAliasesDescriptor">
            <summary>descriptor for CatAliases <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html</pre></summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.#ctor">
            <summary>/_cat/aliases</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to return</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatAliasesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.IElasticClient.CatAliases(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliases(Nest.ICatAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliasesAsync(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAliasesAsync(Nest.ICatAliasesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocation(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocation(Nest.ICatAllocationRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocationAsync(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatAllocationAsync(Nest.ICatAllocationRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCount(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCount(Nest.ICatCountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCountAsync(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatCountAsync(Nest.ICatCountRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddata(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddata(Nest.ICatFielddataRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddataAsync(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatFielddataAsync(Nest.ICatFielddataRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealth(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealth(Nest.ICatHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealthAsync(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHealthAsync(Nest.ICatHealthRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelp(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelp(Nest.ICatHelpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelpAsync(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatHelpAsync(Nest.ICatHelpRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndices(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndices(Nest.ICatIndicesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndicesAsync(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatIndicesAsync(Nest.ICatIndicesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMaster(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMaster(Nest.ICatMasterRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMasterAsync(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatMasterAsync(Nest.ICatMasterRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributes(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributes(Nest.ICatNodeAttributesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributesAsync(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodeAttributesAsync(Nest.ICatNodeAttributesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodes(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodes(Nest.ICatNodesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodesAsync(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatNodesAsync(Nest.ICatNodesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasks(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasks(Nest.ICatPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasksAsync(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPendingTasksAsync(Nest.ICatPendingTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPlugins(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPlugins(Nest.ICatPluginsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPluginsAsync(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatPluginsAsync(Nest.ICatPluginsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecovery(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecovery(Nest.ICatRecoveryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecoveryAsync(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRecoveryAsync(Nest.ICatRecoveryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositories(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositories(Nest.ICatRepositoriesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositoriesAsync(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatRepositoriesAsync(Nest.ICatRepositoriesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegments(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegments(Nest.ICatSegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegmentsAsync(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSegmentsAsync(Nest.ICatSegmentsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShards(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShards(Nest.ICatShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShardsAsync(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatShardsAsync(Nest.ICatShardsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshots(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshots(Nest.ICatSnapshotsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshotsAsync(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatSnapshotsAsync(Nest.ICatSnapshotsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTasks(System.Func{Nest.CatTasksDescriptor,Nest.ICatTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTasks(Nest.ICatTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTasksAsync(System.Func{Nest.CatTasksDescriptor,Nest.ICatTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTasksAsync(Nest.ICatTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTemplates(System.Func{Nest.CatTemplatesDescriptor,Nest.ICatTemplatesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTemplates(Nest.ICatTemplatesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTemplatesAsync(System.Func{Nest.CatTemplatesDescriptor,Nest.ICatTemplatesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatTemplatesAsync(Nest.ICatTemplatesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPool(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPool(Nest.ICatThreadPoolRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPoolAsync(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CatThreadPoolAsync(Nest.ICatThreadPoolRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterAllocationExplain(System.Func{Nest.ClusterAllocationExplainDescriptor,Nest.IClusterAllocationExplainRequest})">
            <summary>
            The cluster allocation explanation API is designed to assist in answering the question "why is this shard unassigned?"
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html">https://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html</a>
            </summary>
            <param name="selector">An optional descriptor to further describe the cluster allocation explain operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterAllocationExplain(Nest.IClusterAllocationExplainRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterAllocationExplainAsync(System.Func{Nest.ClusterAllocationExplainDescriptor,Nest.IClusterAllocationExplainRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterAllocationExplainAsync(Nest.IClusterAllocationExplainRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealth(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
            <summary>
            The cluster health API allows to get a very simple status on the health of the cluster.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-health.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-health.html</a>
            </summary>
            <param name="selector">An optional descriptor to further describe the cluster health operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealth(Nest.IClusterHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealthAsync(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterHealthAsync(Nest.IClusterHealthRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasks(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
            <summary>
            Returns a list of any cluster-level changes (e.g. create index, update mapping, allocate or fail shard) which have not yet been executed.
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-pending.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-pending.html</a>
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasksAsync(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasks(Nest.IClusterPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPendingTasksAsync(Nest.IClusterPendingTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterReroute(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
            <summary>
            Allows to explicitly execute a cluster reroute allocation command including specific commands.
            For example, a shard can be moved from one node to another explicitly, an allocation can be canceled,
            or an unassigned shard can be explicitly allocated on a specific node.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterRerouteAsync(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterReroute(Nest.IClusterRerouteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterRerouteAsync(Nest.IClusterRerouteRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettings(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
            <summary>
            Gets cluster wide specific settings. Settings updated can either be persistent
            (applied cross restarts) or transient (will not survive a full cluster restart).
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-update-settings.html
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettingsAsync(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettings(Nest.IClusterGetSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterGetSettingsAsync(Nest.IClusterGetSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettings(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
            <summary>
            Allows to update cluster wide specific settings. Settings updated can either be persistent
            (applied cross restarts) or transient (will not survive a full cluster restart).
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-update-settings.html
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettingsAsync(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettings(Nest.IClusterPutSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterPutSettingsAsync(Nest.IClusterPutSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterState(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
            <summary>
            The cluster state API allows to get a comprehensive state information of the whole cluster.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-state.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-state.html</a>
            </summary>
            <param name="selector">A descriptor that describes the parameters for the cluster state operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterState(Nest.IClusterStateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStateAsync(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStateAsync(Nest.IClusterStateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStats(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
            <summary>
            allows to retrieve statistics from a cluster wide perspective. The API returns basic index metrics
            (shard numbers, store size, memory usage) and information about the current nodes that form the
            cluster (number, roles, os, jvm versions, memory usage, cpu and installed plugins).
            </summary>
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/guide/current/_cluster_stats.html">https://www.elastic.co/guide/en/elasticsearch/guide/current/_cluster_stats.html</a>
            <param name="selector">A descriptor that describes the cluster stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStatsAsync(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStats(Nest.IClusterStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClusterStatsAsync(Nest.IClusterStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreads(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
            <summary>
            An API allowing to get the current hot threads on each node in the cluster.
            </summary>
            <param name="selector"></param>
            <returns>An optional descriptor to further describe the nodes hot threads operation</returns>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreads(Nest.INodesHotThreadsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreadsAsync(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesHotThreadsAsync(Nest.INodesHotThreadsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfo(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
            <summary>
            The cluster nodes info API allows to retrieve one or more (or all) of the cluster nodes information.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-info.html
            </summary>
            <param name="selector">An optional descriptor to further describe the nodes info operation</param>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfo(Nest.INodesInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfoAsync(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesInfoAsync(Nest.INodesInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesStats(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
            <summary>
            The cluster nodes stats API allows to retrieve one or more (or all) of the cluster nodes statistics.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/cluster-nodes-stats.html
            </summary>
            <param name="selector">An optional descriptor to further describe the nodes stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.NodesStats(Nest.INodesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesStatsAsync(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.NodesStatsAsync(Nest.INodesStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Ping(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
            <summary>
            Executes a HEAD request to the cluster to determine whether it's up or not.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.PingAsync(System.Func{Nest.PingDescriptor,Nest.IPingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Ping(Nest.IPingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PingAsync(Nest.IPingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RemoteInfo(System.Func{Nest.RemoteInfoDescriptor,Nest.IRemoteInfoRequest})">
            <summary>
            The cluster remote info API allows to retrieve all of the configured remote cluster information.
            <para> </para><a href="http://www.elastic.co/guide/en/elasticsearch/reference/master/remote-info.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/remote-info.html</a>
            </summary>
            <param name="selector">An optional descriptor to further describe the remote info operation</param>
        </member>
        <member name="M:Nest.IElasticClient.RemoteInfo(Nest.IRemoteInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RemoteInfoAsync(System.Func{Nest.RemoteInfoDescriptor,Nest.IRemoteInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RemoteInfoAsync(Nest.IRemoteInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfo(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
            <summary>
            Does a request to the root of an elasticsearch node
            </summary>
            <param name="selector">A descriptor to further describe the root operation</param>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfo(Nest.IRootNodeInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfoAsync(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RootNodeInfoAsync(Nest.IRootNodeInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CancelTasks(System.Func{Nest.CancelTasksDescriptor,Nest.ICancelTasksRequest})">
            <summary>
            Does a request to the root of an elasticsearch node
            </summary>
            <param name="selector">A descriptor to further describe the root operation</param>
        </member>
        <member name="M:Nest.IElasticClient.CancelTasks(Nest.ICancelTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CancelTasksAsync(System.Func{Nest.CancelTasksDescriptor,Nest.ICancelTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CancelTasksAsync(Nest.ICancelTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ListTasks(System.Func{Nest.ListTasksDescriptor,Nest.IListTasksRequest})">
            <summary>
            Retrieve information about the tasks currently executing on one or more nodes in the cluster.
            </summary>
            <param name="selector">A descriptor to further describe the tasks to retrieve information for</param>
        </member>
        <member name="M:Nest.IElasticClient.ListTasks(Nest.IListTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ListTasksAsync(System.Func{Nest.ListTasksDescriptor,Nest.IListTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ListTasksAsync(Nest.IListTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.BulkAll``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkAllDescriptor{``0},Nest.IBulkAllRequest{``0}},System.Threading.CancellationToken)">
            <summary>
            BulkAll is a generic helper that will partition any lazy stream of documents and send them to elasticsearch as bulks concurrently
            </summary>
            <param name="documents">The lazy stream of documents</param>
        </member>
        <member name="M:Nest.IElasticClient.BulkAll``1(Nest.IBulkAllRequest{``0},System.Threading.CancellationToken)">
            <summary>
            BulkAll is a generic helper that will partition any lazy stream of documents and send them to elasticsearch as bulks concurrently
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.Bulk(Nest.IBulkRequest)">
            <summary>
            The bulk API makes it possible to perform many index/delete operations in a single API call.
            This can greatly increase the indexing speed.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="request">A descriptor the describe the index/create/delete operation for this bulk operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Bulk(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.BulkAsync(Nest.IBulkRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.BulkAsync(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQuery``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
            <summary>
            The delete by query API allows to delete documents from one or more indices and one or more types based on a query.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete-by-query.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete-by-query.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename as well as describe the strongly
             typed parts of the query</typeparam>
            <param name="selector">An optional descriptor to further describe the delete by query operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQuery(Nest.IDeleteByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQueryAsync``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteByQueryAsync(Nest.IDeleteByQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiGet(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <param name="selector">A descriptor describing which documents should be fetched</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiGet(Nest.IMultiGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiGetAsync(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiGetAsync(Nest.IMultiGetRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectors(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
            <summary>
            Multi termvectors API allows to get multiple termvectors based on an index, type and id.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-termvectors.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-termvectors.html</a>
            </summary>
            <param name="selector">The descriptor describing the multi termvectors operation</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectors(Nest.IMultiTermVectorsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectorsAsync(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiTermVectorsAsync(Nest.IMultiTermVectorsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServer(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServer(Nest.IReindexOnServerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServerAsync(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ReindexOnServerAsync(Nest.IReindexOnServerRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Rethrottle(System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest})">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.Rethrottle(Nest.IReindexRethrottleRequest)">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.RethrottleAsync(System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest},System.Threading.CancellationToken)">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.RethrottleAsync(Nest.IReindexRethrottleRequest,System.Threading.CancellationToken)">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``2(System.Func{``0,``1},System.Func{Nest.ReindexDescriptor{``0,``1},Nest.IReindexRequest{``0,``1}},System.Threading.CancellationToken)">
            <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``1(System.Func{Nest.ReindexDescriptor{``0,``0},Nest.IReindexRequest{``0,``0}},System.Threading.CancellationToken)">
            <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``2(Nest.IReindexRequest{``0,``1},System.Threading.CancellationToken)">
            <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
            <param name="request">a request object to describe the reindex operation</param>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``1(Nest.IReindexRequest{``0},System.Threading.CancellationToken)">
            <summary>
            Helper method that allows you to reindex from one index into another using ScrollAll and BulkAll.
            </summary>
            <param name="request">a request object to describe the reindex operation</param>
            <returns>An IObservable&lt;IReindexResponse&lt;T&gt;$gt; you can subscribe to to listen to the progress of the reindex process</returns>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``2(Nest.IndexName,Nest.IndexName,System.Func{``0,``1},System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
            <summary>
            Simplified form for reindex which will cover 80% of its usecases. Allows you to index all documents of type T from <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector"/>.
            </summary>
            <param name="fromIndex">The source index, from which all types will be returned</param>
            <param name="toIndex">The target index, if it does not exist already will be created using the same settings of <paramref name="fromIndex"/></param>
            <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex"/></param>
        </member>
        <member name="M:Nest.IElasticClient.Reindex``1(Nest.IndexName,Nest.IndexName,System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
            <summary>
            Simplified form for reindex which will cover 80% of its use cases. Allows you to index all documents of type T from <paramref name="fromIndex" /> to <paramref name="toIndex" />
            optionally limiting the documents found in <paramref name="fromIndex" /> by using <paramref name="selector"/>.
            </summary>
            <param name="fromIndex">The source index, from which all types will be returned</param>
            <param name="toIndex">The target index, if it does not exist already will be created using the same settings of <paramref name="fromIndex"/></param>
            <param name="selector">an optional query limiting the documents found in <paramref name="fromIndex"/></param>
        </member>
        <member name="M:Nest.IElasticClient.ScrollAll``1(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
            <summary>
            Helper method that can parallelize a scroll using the sliced scroll feature of elasticsearch and return the results as an IObservable.
            </summary>
            <param name="scrollTime">The time to keep the scroll active on the server until we send another scroll request</param>
            <param name="numberOfSlices">The number of slices to chop the scroll into, typically the number of shards but can be higher and using a custom routing key</param>
        </member>
        <member name="M:Nest.IElasticClient.ScrollAll``1(Nest.IScrollAllRequest,System.Threading.CancellationToken)">
            <summary>
            Helper method that can parallelize a scroll using the sliced scroll feature of elasticsearch and return the results as an IObservable.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQuery``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
            <summary>
            The update by query API allows to update documents from one or more indices and one or more types based on a query.
            </summary>
            <typeparam name="T">The type used to infer the default index and typename as well as describe the strongly
             typed parts of the query</typeparam>
            <param name="selector">An optional descriptor to further describe the update by query operation</param>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQuery(Nest.IUpdateByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQueryAsync``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateByQueryAsync(Nest.IUpdateByQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Create``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest})">
            <summary>
            Creates a new typed document in a specific index. If a document with the same index, type and id already exists,
            A 409 Conflict HTTP response status code and error will be returned.
            </summary>
            <typeparam name="T">The document type used to infer the default index, type and id</typeparam>
            <param name="document">The document to be created. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings"/> for <typeparamref name="T"/></para> 
            <para>2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty"/> property on <see cref="T:Nest.ElasticsearchTypeAttribute"/> applied to <typeparamref name="T"/></para> 
            <para>3. A property named Id on <typeparamref name="T"/></para> 
            </param>
            <param name="selector">Optionally further describe the create operation i.e override type/index/id</param>
        </member>
        <member name="M:Nest.IElasticClient.Create(Nest.ICreateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateAsync``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateAsync(Nest.ICreateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Delete``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
             <summary>
            The delete API allows to delete a typed JSON document from a specific index based on its id.
             <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-delete.html</a>
             </summary>
             <typeparam name="T">The type used to infer the default index and typename</typeparam>
             <param name="selector">Describe the delete operation, i.e type/index/id</param>
        </member>
        <member name="M:Nest.IElasticClient.Delete(Nest.IDeleteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAsync(Nest.IDeleteRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExists``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
            <summary>
            Check if a document exists without returning its contents
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="selector">Describe what document we are looking for</param>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExists(Nest.IDocumentExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DocumentExistsAsync(Nest.IDocumentExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Get``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
            <summary>
            Use the /{index}/{type}/{id} to get the document and its metadata
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html#_source
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="selector">A descriptor that describes which document's source to fetch</param>
        </member>
        <member name="M:Nest.IElasticClient.Get``1(Nest.IGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAsync``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAsync``1(Nest.IGetRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Index``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest})">
            <summary>
            Adds or updates a typed JSON document in a specific index, making it searchable.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-index_.html</a>
            </summary>
            <typeparam name="T">The document type used to infer the default index, type and id</typeparam>
            <param name="document">The document to be indexed. Id will be inferred from (in order):
            <para>1. Id property set up on <see cref="P:Nest.IElasticClient.ConnectionSettings"/> for <typeparamref name="T"/></para> 
            <para>2. <see cref="P:Nest.ElasticsearchTypeAttribute.IdProperty"/> property on <see cref="T:Nest.ElasticsearchTypeAttribute"/> applied to <typeparamref name="T"/></para> 
            <para>3. A property named Id on <typeparamref name="T"/></para> 
            </param>
            <param name="selector">Optionally further describe the index operation i.e override type, index, id</param>
        </member>
        <member name="M:Nest.IElasticClient.Index(Nest.IIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexAsync``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexAsync(Nest.IIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceExists``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest})">
            <summary>
            Check if a document's source exists without returning its contents
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="selector">Describe what document we are looking for</param>
        </member>
        <member name="M:Nest.IElasticClient.SourceExists(Nest.ISourceExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceExistsAsync(Nest.ISourceExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Source``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
            <summary>
            Use the /{index}/{type}/{id}/_source endpoint to get just the _source field of the document,
            without any additional content around it.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html#_source">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-get.html#_source</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="document">The document path</param>
            <param name="selector">A descriptor that describes which document's source to fetch</param>
        </member>
        <member name="M:Nest.IElasticClient.Source``1(Nest.ISourceRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SourceAsync``1(Nest.ISourceRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TermVectors``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
            <summary>
            Returns information and statistics on terms in the fields of a particular document as stored in the index.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-termvectors.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-termvectors.html</a>
            </summary>
            <typeparam name="T">The type of the document</typeparam>
            <param name="selector">A descriptor for the terms vector operation</param>
        </member>
        <member name="M:Nest.IElasticClient.TermVectors``1(Nest.ITermVectorsRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TermVectorsAsync``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TermVectorsAsync``1(Nest.ITermVectorsRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Update``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
            <summary>
            The update API allows to update a document based on a script provided.
            <para>The operation gets the document (collocated with the shard) from the index, runs the script
            (with optional script language and parameters), and index back the result
            (also allows to delete, or ignore the operation). </para>
            <para>It uses versioning to make sure no updates have happened during the "get" and "reindex".</para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-update.html
            </summary>
            <typeparam name="TDocument">The type to describe the document to be updated</typeparam>
            <param name="selector">a descriptor that describes the update operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Update``1(Nest.IUpdateRequest{``0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Update``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Update``2(Nest.IUpdateRequest{``0,``1})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``1(Nest.IUpdateRequest{``0,``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateAsync``2(Nest.IUpdateRequest{``0,``1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExists(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExists(Nest.IAliasExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExistsAsync(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasExistsAsync(Nest.IAliasExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Alias(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
            <summary>
            APIs in elasticsearch accept an index name when working against a specific index, and several indices when applicable.
            <para>The index aliases API allow to alias an index with a name, with all APIs automatically converting the alias name to the
            actual index name.</para><para> An alias can also be mapped to more than one index, and when specifying it, the alias
            will automatically expand to the aliases indices.i</para><para> An alias can also be associated with a filter that will
            automatically be applied when searching, and routing values.</para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the alias operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Alias(Nest.IBulkAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasAsync(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AliasAsync(Nest.IBulkAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAlias(Nest.IDeleteAliasRequest)">
            <summary>
            Delete an index alias
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#deleting
            </summary>
            <param name="request">A descriptor that describes the delete alias request</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAliasAsync(Nest.IDeleteAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAlias(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteAliasAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAlias(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
            <summary>
            The get index alias api allows to filter by alias name and index name. This api redirects to the master and fetches
            the requested index aliases, if available. This api only serialises the found index aliases.
            <para> Difference with GetAlias is that this call will also return indices without aliases set</para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#alias-retrieving
            </summary>
            <param name="selector">A descriptor that describes which aliases/indexes we are interested int</param>
        </member>
        <member name="M:Nest.IElasticClient.GetAlias(Nest.IGetAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliasAsync(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetAliasAsync(Nest.IGetAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutAlias(Nest.IPutAliasRequest)">
            <summary>
            Add a single index alias
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-aliases.html#alias-adding
            </summary>
            <param name="request">A descriptor that describes the put alias request</param>
        </member>
        <member name="M:Nest.IElasticClient.PutAliasAsync(Nest.IPutAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutAlias(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutAliasAsync(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Analyze(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
            <summary>
            Performs the analysis process on a text and return the tokens breakdown of the text.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-analyze.html
            </summary>
            <param name="selector">A descriptor that describes the analyze operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Analyze(Nest.IAnalyzeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AnalyzeAsync(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AnalyzeAsync(Nest.IAnalyzeRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndex(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <summary>
            The create index API allows to instantiate an index. Elasticsearch provides support for multiple indices,
            including executing operations across several indices.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-create-index.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-create-index.html</a>
            </summary>
            <param name="selector">A descriptor that describes the parameters for the create index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndex(Nest.ICreateIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndexAsync(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateIndexAsync(Nest.ICreateIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndex(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
            <summary>
            The delete index API allows to delete an existing index.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-delete-index.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the delete index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndex(Nest.IDeleteIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexAsync(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexAsync(Nest.IDeleteIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndex(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndex(Nest.IGetIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexAsync(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexAsync(Nest.IGetIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexExists(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
            <summary>
            Used to check if the index (indices) exists or not.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-exists.html
            </summary>
            <param name="selector">A descriptor that describes the index exist operation</param>
        </member>
        <member name="M:Nest.IElasticClient.IndexExists(Nest.IIndexExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexExistsAsync(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexExistsAsync(Nest.IIndexExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndex(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
            <summary>
            The open and close index APIs allow to close an index, and later on opening it.
            A closed index has almost no overhead on the cluster (except for maintaining its metadata), and is blocked
            for read/write operations.
            A closed index can be opened which will then go through the normal recovery process.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-open-close.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-open-close.html</a>
            </summary>
            <param name="selector">A descriptor thata describes the close index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndex(Nest.ICloseIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndexAsync(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CloseIndexAsync(Nest.ICloseIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndex(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
            <summary>
            The open and close index APIs allow to close an index, and later on opening it.
            A closed index has almost no overhead on the cluster (except for maintaining its metadata), and is blocked
            for read/write operations.
            A closed index can be opened which will then go through the normal recovery process.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-open-close.html
            </summary>
            <param name="selector">A descriptor that describes the open index operation</param>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndex(Nest.IOpenIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndexAsync(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.OpenIndexAsync(Nest.IOpenIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExists(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExists(Nest.ITypeExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExistsAsync(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.TypeExistsAsync(Nest.ITypeExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettings(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
            <summary>
            The get settings API allows to retrieve settings of index/indices.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-settings.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the get index settings operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettings(Nest.IGetIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettingsAsync(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexSettingsAsync(Nest.IGetIndexSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplate(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
            <summary>
            Deletes an index template
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html#delete">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html#delete</a>
            </summary>
            <param name="name">The name of the template to delete</param>
            <param name="selector">An optional selector specifying additional parameters for the delete template operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplate(Nest.IDeleteIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplateAsync(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteIndexTemplateAsync(Nest.IDeleteIndexTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplate(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
            <summary>
            Gets an index template
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html#getting
            </summary>
            <param name="selector">An optional selector specifying additional parameters for the get template operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplate(Nest.IGetIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplateAsync(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetIndexTemplateAsync(Nest.IGetIndexTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExists(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExists(Nest.IIndexTemplateExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExistsAsync(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndexTemplateExistsAsync(Nest.IIndexTemplateExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplate(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
            <summary>
            Index templates allow to define templates that will automatically be applied to new indices created.
            <para>The templates include both settings and mappings, and a simple pattern template that controls if
            the template will be applied to the index created. </para>
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-templates.html
            </summary>
            <param name="name">The name of the template to register</param>
            <param name="selector">An optional selector specifying additional parameters for the put template operation</param>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplate(Nest.IPutIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplateAsync(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutIndexTemplateAsync(Nest.IPutIndexTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettings(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
            <summary>
            Change specific index level settings in real time. Note not all index settings CAN be updated.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-update-settings.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-update-settings.html</a>
            </summary>
            <param name="selector">A descriptor that strongly types all the updateable settings</param>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettings(Nest.IUpdateIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettingsAsync(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpdateIndexSettingsAsync(Nest.IUpdateIndexSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMapping``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMapping(Nest.IGetFieldMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMappingAsync``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetFieldMappingAsync(Nest.IGetFieldMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetMapping``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
            <summary>
            The get mapping API allows to retrieve mapping definitions for an index or index/type.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-get-mapping.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the get mapping operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetMapping(Nest.IGetMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetMappingAsync``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetMappingAsync(Nest.IGetMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Map``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
            <summary>
            The put mapping API allows to register specific mapping definition for a specific type.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-put-mapping.html
            </summary>
            <typeparam name="T">The type we want to map in elasticsearch</typeparam>
            <param name="selector">A descriptor to describe the mapping of our type</param>
        </member>
        <member name="M:Nest.IElasticClient.Map(Nest.IPutMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MapAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MapAsync(Nest.IPutMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatus(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatus(Nest.IRecoveryStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatusAsync(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RecoveryStatusAsync(Nest.IRecoveryStatusRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Segments(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
            <summary>
            Provide low level segments information that a Lucene index (shard level) is built with.
            Allows to be used to provide more information on the state of a shard and an index, possibly optimization information,
            data "wasted" on deletes, and so on.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-segments.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the segments operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Segments(Nest.ISegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SegmentsAsync(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SegmentsAsync(Nest.ISegmentsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStores(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
            <summary>
            Indices level stats provide statistics on different operations happening on an index. The API provides statistics on
            the index level scope (though most stats can also be retrieved using node level scope).
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-stats.html
            </summary>
            <param name="selector">Optionaly further describe the indices stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStores(Nest.IIndicesShardStoresRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStoresAsync(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesShardStoresAsync(Nest.IIndicesShardStoresRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStats(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
            <summary>
            Indices level stats provide statistics on different operations happening on an index. The API provides statistics on
            the index level scope (though most stats can also be retrieved using node level scope).
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-stats.html
            </summary>
            <param name="selector">Optionaly further describe the indices stats operation</param>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStats(Nest.IIndicesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStatsAsync(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.IndicesStatsAsync(Nest.IIndicesStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCache(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
            <summary>
            The clear cache API allows to clear either all caches or specific cached associated with one ore more indices.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-clearcache.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the clear cache operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ClearCache(Nest.IClearCacheRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCacheAsync(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCacheAsync(Nest.IClearCacheRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Flush(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
            <summary>
            The flush API allows to flush one or more indices through an API. The flush process of an index basically
            frees memory from the index by flushing data to the index storage and clearing the internal transaction log.
            By default, Elasticsearch uses memory heuristics in order to automatically trigger
            flush operations as required in order to clear memory.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-flush.html
            </summary>
            <param name="selector">A descriptor that describes the parameters for the flush operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Flush(Nest.IFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FlushAsync(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FlushAsync(Nest.IFlushRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ForceMerge(Nest.IForceMergeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ForceMergeAsync(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ForceMergeAsync(Nest.IForceMergeRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Refresh(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
            <summary>
            The refresh API allows to explicitly refresh one or more index, making all operations performed since the last refresh
            available for search. The (near) real-time capabilities depend on the index engine used.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-refresh.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/indices-refresh.html</a>
            </summary>
            <param name="selector">A descriptor that describes the parameters for the refresh operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Refresh(Nest.IRefreshRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RefreshAsync(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RefreshAsync(Nest.IRefreshRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlush(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
            <summary>
            The Synced Flush API allows an administrator to initiate a synced flush manually.
            This can be particularly useful for a planned (rolling) cluster restart where you
            can stop indexing and don’t want to wait the default 5 minutes for idle indices to
            be sync-flushed automatically.
            </summary>
            <param name="selector">A descriptor that describes the parameters for the synced flush operation</param>
            <returns></returns>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlush(Nest.ISyncedFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlushAsync(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SyncedFlushAsync(Nest.ISyncedFlushRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Upgrade(Nest.IUpgradeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Upgrade(Nest.Indices,System.Func{Nest.UpgradeDescriptor,Nest.IUpgradeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeAsync(Nest.IUpgradeRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeAsync(Nest.Indices,System.Func{Nest.UpgradeDescriptor,Nest.IUpgradeRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatus(Nest.IUpgradeStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatus(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatusAsync(Nest.IUpgradeStatusRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UpgradeStatusAsync(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeletePipeline(Nest.Id,System.Func{Nest.DeletePipelineDescriptor,Nest.IDeletePipelineRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeletePipeline(Nest.IDeletePipelineRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeletePipelineAsync(Nest.Id,System.Func{Nest.DeletePipelineDescriptor,Nest.IDeletePipelineRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeletePipelineAsync(Nest.IDeletePipelineRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetPipeline(System.Func{Nest.GetPipelineDescriptor,Nest.IGetPipelineRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetPipeline(Nest.IGetPipelineRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetPipelineAsync(System.Func{Nest.GetPipelineDescriptor,Nest.IGetPipelineRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetPipelineAsync(Nest.IGetPipelineRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutPipeline(Nest.Id,System.Func{Nest.PutPipelineDescriptor,Nest.IPutPipelineRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutPipeline(Nest.IPutPipelineRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutPipelineAsync(Nest.Id,System.Func{Nest.PutPipelineDescriptor,Nest.IPutPipelineRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutPipelineAsync(Nest.IPutPipelineRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SimulatePipeline(System.Func{Nest.SimulatePipelineDescriptor,Nest.ISimulatePipelineRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SimulatePipeline(Nest.ISimulatePipelineRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SimulatePipelineAsync(System.Func{Nest.SimulatePipelineDescriptor,Nest.ISimulatePipelineRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SimulatePipelineAsync(Nest.ISimulatePipelineRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScript(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScript(Nest.IDeleteScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteScriptAsync(Nest.IDeleteScriptRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScript(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScript(Nest.IGetScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetScriptAsync(Nest.IGetScriptRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScript(Nest.Name,Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScript(Nest.IPutScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.PutScriptDescriptor,Nest.IPutScriptRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutScriptAsync(Nest.IPutScriptRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepository(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
            <summary>
            Before any snapshot or restore operation can be performed a snapshot repository should be registered in Elasticsearch.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_repositories
            </summary>
            <param name="repository">The name for the repository</param>
            <param name="selector">describe what the repository looks like</param>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepository(Nest.ICreateRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepositoryAsync(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CreateRepositoryAsync(Nest.ICreateRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepository(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
            <summary>
            Delete a repository, if you have ongoing restore operations be sure to delete the indices being restored into first.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_repositories
            </summary>
            <param name="repositories">The names of the repositories</param>
            <param name="selector">Optionaly provide the delete operation with more details</param>>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepository(Nest.IDeleteRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepositoryAsync(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRepositoryAsync(Nest.IDeleteRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepository(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepository(Nest.IGetRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepositoryAsync(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRepositoryAsync(Nest.IGetRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepository(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepository(Nest.IVerifyRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepositoryAsync(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.VerifyRepositoryAsync(Nest.IVerifyRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Restore(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <summary>
            Restore a snapshot
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_restore
            </summary>
            <param name="repository">The repository name that holds our snapshot</param>
            <param name="snapshotName">The name of the snapshot that we want to restore</param>
            <param name="selector">Optionally further describe the restore operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Restore(Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreAsync(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreAsync(Nest.IRestoreRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestoreObservable(System.TimeSpan,Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshot(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
            <summary>
            Delete a snapshot
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_snapshot
            </summary>
            <param name="repository">The repository name under which the snapshot we want to delete lives</param>
            <param name="snapshotName">The name of the snapshot that we want to delete</param>
            <param name="selector">Optionally further describe the delete snapshot operation</param>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshot(Nest.IDeleteSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSnapshotAsync(Nest.IDeleteSnapshotRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshot(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
            <summary>
            Gets information about one or more snapshots
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_snapshot
            </summary>
            <param name="repository">The repository name under which the snapshots live</param>
            <param name="snapshots">The names of the snapshots we want information from (can be _all or wildcards)</param>
            <param name="selector">Optionally further describe the get snapshot operation</param>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshot(Nest.IGetSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshotAsync(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSnapshotAsync(Nest.IGetSnapshotRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotObservable(System.TimeSpan,Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatus(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatus(Nest.ISnapshotStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatusAsync(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotStatusAsync(Nest.ISnapshotStatusRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Snapshot(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <summary>
            A repository can contain multiple snapshots of the same cluster. Snapshot are identified by unique names within the cluster.
            /// <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-snapshots.html#_snapshot
            </summary>
            <param name="repository">The name of the repository we want to create a snapshot in</param>
            <param name="snapshotName">The name of the snapshot</param>
            <param name="selector">Optionally provide more details about the snapshot operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Snapshot(Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SnapshotAsync(Nest.ISnapshotRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Count``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
            <summary>
            The count API allows to easily execute a query and get the number of matches for that query.
            It can be executed across one or more indices and across one or more types.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-count.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-count.html</a>
            </summary>
            <typeparam name="T">The type used to infer the default index and typename as well as describe the strongly
             typed parts of the query</typeparam>
            <param name="selector">An optional descriptor to further describe the count operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Count``1(Nest.ICountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.CountAsync``1(Nest.ICountRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Explain``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}})">
            <summary>
            The explain api computes a score explanation for a query and a specific document.
            This can give useful feedback whether a document matches or didn’t match a specific query.
            <para> </para><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html">https://www.elastic.co/guide/en/elasticsearch/reference/current/search-explain.html</a>
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.Explain``1(Nest.IExplainRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExplainAsync``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExplainAsync``1(Nest.IExplainRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldCapabilities(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldCapabilities(Nest.IFieldCapabilitiesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldCapabilitiesAsync(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldCapabilitiesAsync(Nest.IFieldCapabilitiesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStats(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStats(Nest.IFieldStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStatsAsync(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.FieldStatsAsync(Nest.IFieldStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearch(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
            <summary>
            The multi search API allows to execute several search requests within the same API.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-multi-search.html</a>
            </summary>
            <param name="selector">A descriptor that describes the search operations on the multi search api</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearch(Nest.IMultiSearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchAsync(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchAsync(Nest.IMultiSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchTemplate(System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest})">
            <summary>
            The multi search API allows to execute several search requests within the same API.
            <para> </para><a href="http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-multi-search.html">http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-multi-search.html</a>
            </summary>
            <param name="selector">A descriptor that describes the search operations on the multi search api</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchTemplate(Nest.IMultiSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchTemplateAsync(System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiSearchTemplateAsync(Nest.IMultiSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolate(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest})">
            <summary>
            The multi percolate API allows to bundle multiple percolate requests into a single request,
            similar to what the multi search API does to search requests.
            </summary>
            <param name="selector">A descriptor to describe the multi percolate operation</param>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolate(Nest.IMultiPercolateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolateAsync(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.MultiPercolateAsync(Nest.IMultiPercolateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateCount``1(System.Func{Nest.PercolateCountDescriptor{``0},Nest.IPercolateCountRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateCount``1(Nest.IPercolateCountRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateCountAsync``1(Nest.IPercolateCountRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Percolate``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}})">
            <summary>
            Percolate a document
            </summary>
            <typeparam name="T">The type to infer the index/type from, and of the object that is being percolated</typeparam>
            <param name="selector">An optional descriptor describing the percolate operation further</param>
        </member>
        <member name="M:Nest.IElasticClient.Percolate``1(Nest.IPercolateRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateAsync``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PercolateAsync``1(Nest.IPercolateRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolator``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest})">
            <summary>
            Register a percolator
            </summary>
            <typeparam name="T">The type to infer the index/type from, will also be used to strongly type the query</typeparam>
            <param name="name">The name for the percolator</param>
            <param name="selector">An optional descriptor describing the register percolator operation further</param>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolator(Nest.IRegisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolatorAsync``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RegisterPercolatorAsync(Nest.IRegisterPercolatorRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolator``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest})">
            <summary>
            Unregister a percolator
            </summary>
            <param name="name">The name for the percolator</param>
            <param name="selector">An optional descriptor describing the unregister percolator operation further</param>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolator(Nest.IUnregisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolatorAsync``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.UnregisterPercolatorAsync(Nest.IUnregisterPercolatorRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearScroll(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
            <summary>
            Deletes a registered scroll request on the cluster
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-scroll.html
            </summary>
            <param name="selector">Specify the scroll id as well as request specific configuration</param>
        </member>
        <member name="M:Nest.IElasticClient.ClearScroll(Nest.IClearScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearScrollAsync(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearScrollAsync(Nest.IClearScrollRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Scroll``1(Nest.IScrollRequest)">
            <summary>
            A search request can be scrolled by specifying the scroll parameter.
            <para>The scroll parameter is a time value parameter (for example: scroll=5m),
            indicating for how long the nodes that participate in the search will maintain relevant resources in
            order to continue and support it.</para><para>
            This is very similar in its idea to opening a cursor against a database.</para>
            <para> </para><para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-request-scroll.html</para>
            </summary>
            <typeparam name="T">The type that represents the result hits</typeparam>
            <param name="request">A descriptor that describes the scroll operation</param>
            <returns>A query response holding <typeparamref name="T"/> hits as well as the ScrollId for the next scroll operation</returns>
        </member>
        <member name="M:Nest.IElasticClient.Scroll``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ScrollAsync``1(Nest.IScrollRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ScrollAsync``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShards``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShards(Nest.ISearchShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShardsAsync``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchShardsAsync(Nest.ISearchShardsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplate(Nest.Id,System.Func{Nest.DeleteSearchTemplateDescriptor,Nest.IDeleteSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplate(Nest.IDeleteSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplateAsync(Nest.Id,System.Func{Nest.DeleteSearchTemplateDescriptor,Nest.IDeleteSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteSearchTemplateAsync(Nest.IDeleteSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
            <summary>
            The /_search/template endpoint allows to use the mustache language to pre render search
            requests, before they are executed and fill existing templates with template parameters.
            </summary>
            <typeparam name="T">The type used to infer the index and typename as well describe the query strongly typed</typeparam>
            <param name="selector">A descriptor that describes the parameters for the search operation</param>
            <returns></returns>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``2(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``1(Nest.ISearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplate``2(Nest.ISearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``1(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``2(System.Func{Nest.SearchTemplateDescriptor{``0},Nest.ISearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``1(Nest.ISearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchTemplateAsync``2(Nest.ISearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplate(Nest.Id,System.Func{Nest.GetSearchTemplateDescriptor,Nest.IGetSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplate(Nest.IGetSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplateAsync(Nest.Id,System.Func{Nest.GetSearchTemplateDescriptor,Nest.IGetSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetSearchTemplateAsync(Nest.IGetSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplate(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplate(Nest.IPutSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplateAsync(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutSearchTemplateAsync(Nest.IPutSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplate(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplate(Nest.IRenderSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplateAsync(System.Func{Nest.RenderSearchTemplateDescriptor,Nest.IRenderSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RenderSearchTemplateAsync(Nest.IRenderSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <summary>
            The search API allows to execute a search query and get back search hits that match the query.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-search.html
            </summary>
            <typeparam name="T">The type used to infer the index and typename as well describe the query strongly typed</typeparam>
            <param name="selector">A descriptor that describes the parameters for the search operation</param>
        </member>
        <member name="M:Nest.IElasticClient.Search``1(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Search``2(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
            <typeparam name="T">The type used to infer the index and typename as well describe the query strongly typed</typeparam>
            <param name="selector">A descriptor that describes the parameters for the search operation</param>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``1(Nest.ISearchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SearchAsync``2(Nest.ISearchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Suggest``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest})">
            <summary>
            The suggest feature suggests similar looking terms based on a provided text by using a suggester.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-suggesters.html
            </summary>
            <typeparam name="T">The type used to strongly type parts of the suggest operation</typeparam>
            <param name="selector">The suggesters to use this operation (can be multiple)</param>
        </member>
        <member name="M:Nest.IElasticClient.Suggest``1(Nest.ISuggestRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SuggestAsync``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.SuggestAsync``1(Nest.ISuggestRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQuery``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
            <summary>
            The validate API allows a user to validate a potentially expensive query without executing it.
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/search-validate.html
            </summary>
            <typeparam name="T">The type used to describe the query</typeparam>
            <param name="selector">A descriptor that describes the query operation</param>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQuery(Nest.IValidateQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQueryAsync``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ValidateQueryAsync(Nest.IValidateQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExplore``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExplore(Nest.IGraphExploreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExploreAsync``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GraphExploreAsync(Nest.IGraphExploreRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackInfo(System.Func{Nest.XPackInfoDescriptor,Nest.IXPackInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackInfo(Nest.IXPackInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackInfoAsync(System.Func{Nest.XPackInfoDescriptor,Nest.IXPackInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackInfoAsync(Nest.IXPackInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackUsage(System.Func{Nest.XPackUsageDescriptor,Nest.IXPackUsageRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackUsage(Nest.IXPackUsageRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackUsageAsync(System.Func{Nest.XPackUsageDescriptor,Nest.IXPackUsageRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.XPackUsageAsync(Nest.IXPackUsageRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicense(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicense(Nest.IDeleteLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicenseAsync(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteLicenseAsync(Nest.IDeleteLicenseRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicense(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicense(Nest.IGetLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicenseAsync(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetLicenseAsync(Nest.IGetLicenseRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicense(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicense(Nest.IPostLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicenseAsync(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PostLicenseAsync(Nest.IPostLicenseRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Authenticate(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.Authenticate(Nest.IAuthenticateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AuthenticateAsync(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AuthenticateAsync(Nest.IAuthenticateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealms(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealms(Nest.IClearCachedRealmsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealmsAsync(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRealmsAsync(Nest.IClearCachedRealmsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleMapping(Nest.Name,System.Func{Nest.DeleteRoleMappingDescriptor,Nest.IDeleteRoleMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleMapping(Nest.IDeleteRoleMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleMappingAsync(Nest.Name,System.Func{Nest.DeleteRoleMappingDescriptor,Nest.IDeleteRoleMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleMappingAsync(Nest.IDeleteRoleMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleMapping(System.Func{Nest.GetRoleMappingDescriptor,Nest.IGetRoleMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleMapping(Nest.IGetRoleMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleMappingAsync(System.Func{Nest.GetRoleMappingDescriptor,Nest.IGetRoleMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleMappingAsync(Nest.IGetRoleMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleMapping(Nest.Name,System.Func{Nest.PutRoleMappingDescriptor,Nest.IPutRoleMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleMapping(Nest.IPutRoleMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleMappingAsync(Nest.Name,System.Func{Nest.PutRoleMappingDescriptor,Nest.IPutRoleMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleMappingAsync(Nest.IPutRoleMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRoles(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRoles(Nest.IClearCachedRolesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRolesAsync(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ClearCachedRolesAsync(Nest.IClearCachedRolesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRole(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRole(Nest.IDeleteRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleAsync(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteRoleAsync(Nest.IDeleteRoleRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRole(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRole(Nest.IGetRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleAsync(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetRoleAsync(Nest.IGetRoleRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRole(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRole(Nest.IPutRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleAsync(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutRoleAsync(Nest.IPutRoleRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ChangePassword(System.Func{Nest.ChangePasswordDescriptor,Nest.IChangePasswordRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ChangePassword(Nest.IChangePasswordRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ChangePasswordAsync(System.Func{Nest.ChangePasswordDescriptor,Nest.IChangePasswordRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ChangePasswordAsync(Nest.IChangePasswordRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUser(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUser(Nest.IDeleteUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUserAsync(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteUserAsync(Nest.IDeleteUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DisableUser(Nest.Name,System.Func{Nest.DisableUserDescriptor,Nest.IDisableUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DisableUser(Nest.IDisableUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DisableUserAsync(Nest.Name,System.Func{Nest.DisableUserDescriptor,Nest.IDisableUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DisableUserAsync(Nest.IDisableUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.EnableUser(Nest.Name,System.Func{Nest.EnableUserDescriptor,Nest.IEnableUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.EnableUser(Nest.IEnableUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.EnableUserAsync(Nest.Name,System.Func{Nest.EnableUserDescriptor,Nest.IEnableUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.EnableUserAsync(Nest.IEnableUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAccessToken(System.String,System.String,System.Func{Nest.GetUserAccessTokenDescriptor,Nest.IGetUserAccessTokenRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAccessToken(Nest.IGetUserAccessTokenRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAccessTokenAsync(System.String,System.String,System.Func{Nest.GetUserAccessTokenDescriptor,Nest.IGetUserAccessTokenRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAccessTokenAsync(Nest.IGetUserAccessTokenRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUser(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUser(Nest.IGetUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAsync(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetUserAsync(Nest.IGetUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.InvalidateUserAccessToken(System.String,System.Func{Nest.InvalidateUserAccessTokenDescriptor,Nest.IInvalidateUserAccessTokenRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.InvalidateUserAccessToken(Nest.IInvalidateUserAccessTokenRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.InvalidateUserAccessTokenAsync(System.String,System.Func{Nest.InvalidateUserAccessTokenDescriptor,Nest.IInvalidateUserAccessTokenRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.InvalidateUserAccessTokenAsync(Nest.IInvalidateUserAccessTokenRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUser(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUser(Nest.IPutUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUserAsync(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutUserAsync(Nest.IPutUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AcknowledgeWatch(Nest.Id,System.Func{Nest.AcknowledgeWatchDescriptor,Nest.IAcknowledgeWatchRequest})">
            <summary>
            Acknowledges a watch, to manually throttle execution of the watch's actions
            while the watch condition remains <c>true</c>.
            An acknowledged watch action remains in the acknowledged (acked) state until the watch’s condition
            evaluates to <c>false</c>.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.AcknowledgeWatch(Nest.IAcknowledgeWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AcknowledgeWatchAsync(Nest.Id,System.Func{Nest.AcknowledgeWatchDescriptor,Nest.IAcknowledgeWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.AcknowledgeWatchAsync(Nest.IAcknowledgeWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ActivateWatch(Nest.Id,System.Func{Nest.ActivateWatchDescriptor,Nest.IActivateWatchRequest})">
            <summary>
            Activates a currently inactive watch.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ActivateWatch(Nest.IActivateWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ActivateWatchAsync(Nest.Id,System.Func{Nest.ActivateWatchDescriptor,Nest.IActivateWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ActivateWatchAsync(Nest.IActivateWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeactivateWatch(Nest.Id,System.Func{Nest.DeactivateWatchDescriptor,Nest.IDeactivateWatchRequest})">
            <summary>
            Deactivates a currently active watch.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.DeactivateWatch(Nest.IDeactivateWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeactivateWatchAsync(Nest.Id,System.Func{Nest.DeactivateWatchDescriptor,Nest.IDeactivateWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeactivateWatchAsync(Nest.IDeactivateWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWatch(Nest.Id,System.Func{Nest.DeleteWatchDescriptor,Nest.IDeleteWatchRequest})">
            <summary>
            Removes a watch identified by its id from Watcher. Once removed, the document representing the watch in the .watches index is gone
            and it will never be executed again.
            </summary>
            <remarks>
            Deleting a watch does not delete any watch execution records related to this watch from the watch history.
            </remarks>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWatch(Nest.IDeleteWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWatchAsync(Nest.Id,System.Func{Nest.DeleteWatchDescriptor,Nest.IDeleteWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.DeleteWatchAsync(Nest.IDeleteWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExecuteWatch(System.Func{Nest.ExecuteWatchDescriptor,Nest.IExecuteWatchRequest})">
            <summary>
            Forces the execution of a stored watch. It can be used to force execution of the watch outside of its triggering logic,
            or to simulate the watch execution for debugging purposes.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.ExecuteWatch(Nest.IExecuteWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExecuteWatchAsync(System.Func{Nest.ExecuteWatchDescriptor,Nest.IExecuteWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.ExecuteWatchAsync(Nest.IExecuteWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetWatch(Nest.Id,System.Func{Nest.GetWatchDescriptor,Nest.IGetWatchRequest})">
            <summary>
            Retrieves a watch by its id
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.GetWatch(Nest.IGetWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetWatchAsync(Nest.Id,System.Func{Nest.GetWatchDescriptor,Nest.IGetWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.GetWatchAsync(Nest.IGetWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutWatch(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest})">
            <summary>
            Registers a new watch in Watcher or updates an existing one.
            Once registered, a new document will be added to the .watches index, representing the watch,
            and its trigger will immediately be registered with the relevant trigger engine.
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.PutWatch(Nest.IPutWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutWatchAsync(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.PutWatchAsync(Nest.IPutWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestartWatcher(System.Func{Nest.RestartWatcherDescriptor,Nest.IRestartWatcherRequest})">
            <summary>
            Stops then restarts the Watcher/Alerting service
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.RestartWatcher(Nest.IRestartWatcherRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestartWatcherAsync(System.Func{Nest.RestartWatcherDescriptor,Nest.IRestartWatcherRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.RestartWatcherAsync(Nest.IRestartWatcherRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.StartWatcher(System.Func{Nest.StartWatcherDescriptor,Nest.IStartWatcherRequest})">
            <summary>
            Starts the Watcher/Alerting service, if the service is not already running
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.StartWatcher(Nest.IStartWatcherRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.StartWatcherAsync(System.Func{Nest.StartWatcherDescriptor,Nest.IStartWatcherRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.StartWatcherAsync(Nest.IStartWatcherRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.StopWatcher(System.Func{Nest.StopWatcherDescriptor,Nest.IStopWatcherRequest})">
            <summary>
            Stops the Watcher/Alerting service, if the service is running
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.StopWatcher(Nest.IStopWatcherRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.StopWatcherAsync(System.Func{Nest.StopWatcherDescriptor,Nest.IStopWatcherRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.StopWatcherAsync(Nest.IStopWatcherRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.WatcherStats(System.Func{Nest.WatcherStatsDescriptor,Nest.IWatcherStatsRequest})">
            <summary>
            Gets the current Watcher metrics
            </summary>
        </member>
        <member name="M:Nest.IElasticClient.WatcherStats(Nest.IWatcherStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.WatcherStatsAsync(System.Func{Nest.WatcherStatsDescriptor,Nest.IWatcherStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IElasticClient.WatcherStatsAsync(Nest.IWatcherStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ElasticClient">
            <summary>
            ElasticClient is NEST's strongly typed client which exposes fully mapped Elasticsearch endpoints
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.CatAliases(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliases(Nest.ICatAliasesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliasesAsync(System.Func{Nest.CatAliasesDescriptor,Nest.ICatAliasesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAliasesAsync(Nest.ICatAliasesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocation(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocation(Nest.ICatAllocationRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocationAsync(System.Func{Nest.CatAllocationDescriptor,Nest.ICatAllocationRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatAllocationAsync(Nest.ICatAllocationRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCount(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCount(Nest.ICatCountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCountAsync(System.Func{Nest.CatCountDescriptor,Nest.ICatCountRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatCountAsync(Nest.ICatCountRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddata(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddata(Nest.ICatFielddataRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddataAsync(System.Func{Nest.CatFielddataDescriptor,Nest.ICatFielddataRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatFielddataAsync(Nest.ICatFielddataRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealth(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealth(Nest.ICatHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealthAsync(System.Func{Nest.CatHealthDescriptor,Nest.ICatHealthRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHealthAsync(Nest.ICatHealthRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelp(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelp(Nest.ICatHelpRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelpAsync(System.Func{Nest.CatHelpDescriptor,Nest.ICatHelpRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatHelpAsync(Nest.ICatHelpRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndices(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndices(Nest.ICatIndicesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndicesAsync(System.Func{Nest.CatIndicesDescriptor,Nest.ICatIndicesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatIndicesAsync(Nest.ICatIndicesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMaster(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMaster(Nest.ICatMasterRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMasterAsync(System.Func{Nest.CatMasterDescriptor,Nest.ICatMasterRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatMasterAsync(Nest.ICatMasterRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributes(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributes(Nest.ICatNodeAttributesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributesAsync(System.Func{Nest.CatNodeAttributesDescriptor,Nest.ICatNodeAttributesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodeAttributesAsync(Nest.ICatNodeAttributesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodes(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodes(Nest.ICatNodesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodesAsync(System.Func{Nest.CatNodesDescriptor,Nest.ICatNodesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatNodesAsync(Nest.ICatNodesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasks(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasks(Nest.ICatPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasksAsync(System.Func{Nest.CatPendingTasksDescriptor,Nest.ICatPendingTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPendingTasksAsync(Nest.ICatPendingTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPlugins(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPlugins(Nest.ICatPluginsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatPluginsAsync(System.Func{Nest.CatPluginsDescriptor,Nest.ICatPluginsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecovery(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecovery(Nest.ICatRecoveryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecoveryAsync(System.Func{Nest.CatRecoveryDescriptor,Nest.ICatRecoveryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRecoveryAsync(Nest.ICatRecoveryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositories(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositories(Nest.ICatRepositoriesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositoriesAsync(System.Func{Nest.CatRepositoriesDescriptor,Nest.ICatRepositoriesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatRepositoriesAsync(Nest.ICatRepositoriesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegments(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegments(Nest.ICatSegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegmentsAsync(System.Func{Nest.CatSegmentsDescriptor,Nest.ICatSegmentsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSegmentsAsync(Nest.ICatSegmentsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatShards(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatShards(Nest.ICatShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatShardsAsync(System.Func{Nest.CatShardsDescriptor,Nest.ICatShardsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshots(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshots(Nest.ICatSnapshotsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshotsAsync(Nest.Names,System.Func{Nest.CatSnapshotsDescriptor,Nest.ICatSnapshotsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatSnapshotsAsync(Nest.ICatSnapshotsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTasks(System.Func{Nest.CatTasksDescriptor,Nest.ICatTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTasks(Nest.ICatTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTasksAsync(System.Func{Nest.CatTasksDescriptor,Nest.ICatTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTasksAsync(Nest.ICatTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTemplates(System.Func{Nest.CatTemplatesDescriptor,Nest.ICatTemplatesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTemplates(Nest.ICatTemplatesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTemplatesAsync(System.Func{Nest.CatTemplatesDescriptor,Nest.ICatTemplatesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatTemplatesAsync(Nest.ICatTemplatesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPool(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPool(Nest.ICatThreadPoolRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPoolAsync(System.Func{Nest.CatThreadPoolDescriptor,Nest.ICatThreadPoolRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CatThreadPoolAsync(Nest.ICatThreadPoolRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterAllocationExplain(System.Func{Nest.ClusterAllocationExplainDescriptor,Nest.IClusterAllocationExplainRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterAllocationExplain(Nest.IClusterAllocationExplainRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterAllocationExplainAsync(System.Func{Nest.ClusterAllocationExplainDescriptor,Nest.IClusterAllocationExplainRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterAllocationExplainAsync(Nest.IClusterAllocationExplainRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealth(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealth(Nest.IClusterHealthRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealthAsync(System.Func{Nest.ClusterHealthDescriptor,Nest.IClusterHealthRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterHealthAsync(Nest.IClusterHealthRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasks(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasksAsync(System.Func{Nest.ClusterPendingTasksDescriptor,Nest.IClusterPendingTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasks(Nest.IClusterPendingTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPendingTasksAsync(Nest.IClusterPendingTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterReroute(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterRerouteAsync(System.Func{Nest.ClusterRerouteDescriptor,Nest.IClusterRerouteRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterReroute(Nest.IClusterRerouteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterRerouteAsync(Nest.IClusterRerouteRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettings(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettingsAsync(System.Func{Nest.ClusterGetSettingsDescriptor,Nest.IClusterGetSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettings(Nest.IClusterGetSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterGetSettingsAsync(Nest.IClusterGetSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettings(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettingsAsync(System.Func{Nest.ClusterPutSettingsDescriptor,Nest.IClusterPutSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettings(Nest.IClusterPutSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterPutSettingsAsync(Nest.IClusterPutSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterState(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterState(Nest.IClusterStateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStateAsync(System.Func{Nest.ClusterStateDescriptor,Nest.IClusterStateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStateAsync(Nest.IClusterStateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStats(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStatsAsync(System.Func{Nest.ClusterStatsDescriptor,Nest.IClusterStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStats(Nest.IClusterStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClusterStatsAsync(Nest.IClusterStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreads(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreads(Nest.INodesHotThreadsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreadsAsync(System.Func{Nest.NodesHotThreadsDescriptor,Nest.INodesHotThreadsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesHotThreadsAsync(Nest.INodesHotThreadsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeserializeNodesHotThreadResponse(Elasticsearch.Net.IApiCallDetails,System.IO.Stream)">
            <summary>
            Because the nodes.hot_threads endpoint returns plain text instead of JSON, we have to
            manually parse the response text into a typed response object.
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfo(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfo(Nest.INodesInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfoAsync(System.Func{Nest.NodesInfoDescriptor,Nest.INodesInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesInfoAsync(Nest.INodesInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStats(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStats(Nest.INodesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStatsAsync(System.Func{Nest.NodesStatsDescriptor,Nest.INodesStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.NodesStatsAsync(Nest.INodesStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Ping(System.Func{Nest.PingDescriptor,Nest.IPingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PingAsync(System.Func{Nest.PingDescriptor,Nest.IPingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Ping(Nest.IPingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PingAsync(Nest.IPingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RemoteInfo(System.Func{Nest.RemoteInfoDescriptor,Nest.IRemoteInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RemoteInfo(Nest.IRemoteInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RemoteInfoAsync(System.Func{Nest.RemoteInfoDescriptor,Nest.IRemoteInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RemoteInfoAsync(Nest.IRemoteInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfo(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfo(Nest.IRootNodeInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfoAsync(System.Func{Nest.RootNodeInfoDescriptor,Nest.IRootNodeInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RootNodeInfoAsync(Nest.IRootNodeInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CancelTasks(System.Func{Nest.CancelTasksDescriptor,Nest.ICancelTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CancelTasks(Nest.ICancelTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CancelTasksAsync(System.Func{Nest.CancelTasksDescriptor,Nest.ICancelTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CancelTasksAsync(Nest.ICancelTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ListTasks(System.Func{Nest.ListTasksDescriptor,Nest.IListTasksRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ListTasks(Nest.IListTasksRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ListTasksAsync(System.Func{Nest.ListTasksDescriptor,Nest.IListTasksRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ListTasksAsync(Nest.IListTasksRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.BulkAll``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkAllDescriptor{``0},Nest.IBulkAllRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.BulkAll``1(Nest.IBulkAllRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.Bulk(Nest.IBulkRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Bulk(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.BulkAsync(Nest.IBulkRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.BulkAsync(System.Func{Nest.BulkDescriptor,Nest.IBulkRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQuery``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQuery(Nest.IDeleteByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQueryAsync``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteByQueryAsync(Nest.IDeleteByQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGet(Nest.IMultiGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGetAsync(System.Func{Nest.MultiGetDescriptor,Nest.IMultiGetRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiGetAsync(Nest.IMultiGetRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectors(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectors(Nest.IMultiTermVectorsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectorsAsync(System.Func{Nest.MultiTermVectorsDescriptor,Nest.IMultiTermVectorsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiTermVectorsAsync(Nest.IMultiTermVectorsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServer(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServer(Nest.IReindexOnServerRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServerAsync(System.Func{Nest.ReindexOnServerDescriptor,Nest.IReindexOnServerRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ReindexOnServerAsync(Nest.IReindexOnServerRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Rethrottle(System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest})">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Rethrottle(Nest.IReindexRethrottleRequest)">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RethrottleAsync(System.Func{Nest.ReindexRethrottleDescriptor,Nest.IReindexRethrottleRequest},System.Threading.CancellationToken)">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.RethrottleAsync(Nest.IReindexRethrottleRequest,System.Threading.CancellationToken)">
            <summary>
            Rethrottle an existing reindex or update by query task
            </summary>
        </member>
        <member name="M:Nest.ElasticClient.Reindex``1(System.Func{Nest.ReindexDescriptor{``0,``0},Nest.IReindexRequest{``0,``0}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.Reindex``2(System.Func{``0,``1},System.Func{Nest.ReindexDescriptor{``0,``1},Nest.IReindexRequest{``0,``1}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.Reindex``1(Nest.IReindexRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.Reindex``2(Nest.IReindexRequest{``0,``1},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.Reindex``2(Nest.IndexName,Nest.IndexName,System.Func{``0,``1},System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.Reindex``1(Nest.IndexName,Nest.IndexName,System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.ScrollAll``1(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ScrollAll``1(Nest.IScrollAllRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQuery``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQuery(Nest.IUpdateByQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQueryAsync``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateByQueryAsync(Nest.IUpdateByQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Create``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Create(Nest.ICreateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateAsync``1(``0,System.Func{Nest.CreateDescriptor{``0},Nest.ICreateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateAsync(Nest.ICreateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Delete``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Delete(Nest.IDeleteRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DeleteDescriptor{``0},Nest.IDeleteRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAsync(Nest.IDeleteRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExists``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExists(Nest.IDocumentExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.DocumentExistsDescriptor{``0},Nest.IDocumentExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DocumentExistsAsync(Nest.IDocumentExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Get``1(Nest.IGetRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAsync``1(Nest.DocumentPath{``0},System.Func{Nest.GetDescriptor{``0},Nest.IGetRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAsync``1(Nest.IGetRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Index``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Index(Nest.IIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync``1(``0,System.Func{Nest.IndexDescriptor{``0},Nest.IIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexAsync(Nest.IIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceExists``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceExists(Nest.ISourceExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceExistsAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceExistsDescriptor{``0},Nest.ISourceExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceExistsAsync(Nest.ISourceExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Source``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Source``1(Nest.ISourceRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceAsync``1(Nest.DocumentPath{``0},System.Func{Nest.SourceDescriptor{``0},Nest.ISourceRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SourceAsync``1(Nest.ISourceRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectors``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectors``1(Nest.ITermVectorsRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectorsAsync``1(System.Func{Nest.TermVectorsDescriptor{``0},Nest.ITermVectorsRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TermVectorsAsync``1(Nest.ITermVectorsRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``1(Nest.IUpdateRequest{``0,``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Update``2(Nest.IUpdateRequest{``0,``1})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``1(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``0},Nest.IUpdateRequest{``0,``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``1(Nest.IUpdateRequest{``0,``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``2(Nest.DocumentPath{``0},System.Func{Nest.UpdateDescriptor{``0,``1},Nest.IUpdateRequest{``0,``1}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateAsync``2(Nest.IUpdateRequest{``0,``1},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExists(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExists(Nest.IAliasExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExistsAsync(System.Func{Nest.AliasExistsDescriptor,Nest.IAliasExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasExistsAsync(Nest.IAliasExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Alias(Nest.IBulkAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Alias(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasAsync(Nest.IBulkAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AliasAsync(System.Func{Nest.BulkAliasDescriptor,Nest.IBulkAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAlias(Nest.IDeleteAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAliasAsync(Nest.IDeleteAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAlias(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteAliasAsync(Nest.Indices,Nest.Names,System.Func{Nest.DeleteAliasDescriptor,Nest.IDeleteAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAlias(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAlias(Nest.IGetAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliasAsync(System.Func{Nest.GetAliasDescriptor,Nest.IGetAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetAliasAsync(Nest.IGetAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAlias(Nest.IPutAliasRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAliasAsync(Nest.IPutAliasRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAlias(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutAliasAsync(Nest.Indices,Nest.Name,System.Func{Nest.PutAliasDescriptor,Nest.IPutAliasRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Analyze(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Analyze(Nest.IAnalyzeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AnalyzeAsync(System.Func{Nest.AnalyzeDescriptor,Nest.IAnalyzeRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AnalyzeAsync(Nest.IAnalyzeRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndex(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndex(Nest.ICreateIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndexAsync(Nest.IndexName,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateIndexAsync(Nest.ICreateIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndex(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndex(Nest.IDeleteIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexAsync(Nest.Indices,System.Func{Nest.DeleteIndexDescriptor,Nest.IDeleteIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexAsync(Nest.IDeleteIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndex(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndex(Nest.IGetIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexAsync(Nest.Indices,System.Func{Nest.GetIndexDescriptor,Nest.IGetIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexAsync(Nest.IGetIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExists(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExists(Nest.IIndexExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExistsAsync(Nest.Indices,System.Func{Nest.IndexExistsDescriptor,Nest.IIndexExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexExistsAsync(Nest.IIndexExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndex(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndex(Nest.ICloseIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndexAsync(Nest.Indices,System.Func{Nest.CloseIndexDescriptor,Nest.ICloseIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CloseIndexAsync(Nest.ICloseIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndex(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndex(Nest.IOpenIndexRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndexAsync(Nest.Indices,System.Func{Nest.OpenIndexDescriptor,Nest.IOpenIndexRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.OpenIndexAsync(Nest.IOpenIndexRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExists(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExists(Nest.ITypeExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExistsAsync(Nest.Indices,Nest.Types,System.Func{Nest.TypeExistsDescriptor,Nest.ITypeExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.TypeExistsAsync(Nest.ITypeExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettings(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettings(Nest.IGetIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettingsAsync(System.Func{Nest.GetIndexSettingsDescriptor,Nest.IGetIndexSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexSettingsAsync(Nest.IGetIndexSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplate(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplate(Nest.IDeleteIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplateAsync(Nest.Name,System.Func{Nest.DeleteIndexTemplateDescriptor,Nest.IDeleteIndexTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteIndexTemplateAsync(Nest.IDeleteIndexTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplate(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplate(Nest.IGetIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplateAsync(System.Func{Nest.GetIndexTemplateDescriptor,Nest.IGetIndexTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetIndexTemplateAsync(Nest.IGetIndexTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExists(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExists(Nest.IIndexTemplateExistsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExistsAsync(Nest.Name,System.Func{Nest.IndexTemplateExistsDescriptor,Nest.IIndexTemplateExistsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndexTemplateExistsAsync(Nest.IIndexTemplateExistsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplate(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplate(Nest.IPutIndexTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplateAsync(Nest.Name,System.Func{Nest.PutIndexTemplateDescriptor,Nest.IPutIndexTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutIndexTemplateAsync(Nest.IPutIndexTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettings(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettings(Nest.IUpdateIndexSettingsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettingsAsync(Nest.Indices,System.Func{Nest.UpdateIndexSettingsDescriptor,Nest.IUpdateIndexSettingsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpdateIndexSettingsAsync(Nest.IUpdateIndexSettingsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMapping``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMapping(Nest.IGetFieldMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMappingAsync``1(Nest.Fields,System.Func{Nest.GetFieldMappingDescriptor{``0},Nest.IGetFieldMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetFieldMappingAsync(Nest.IGetFieldMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMapping(Nest.IGetMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMappingAsync``1(System.Func{Nest.GetMappingDescriptor{``0},Nest.IGetMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetMappingAsync(Nest.IGetMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Map``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Map(Nest.IPutMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MapAsync``1(System.Func{Nest.PutMappingDescriptor{``0},Nest.IPutMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MapAsync(Nest.IPutMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatus(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatus(Nest.IRecoveryStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatusAsync(Nest.Indices,System.Func{Nest.RecoveryStatusDescriptor,Nest.IRecoveryStatusRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RecoveryStatusAsync(Nest.IRecoveryStatusRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Segments(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Segments(Nest.ISegmentsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SegmentsAsync(Nest.Indices,System.Func{Nest.SegmentsDescriptor,Nest.ISegmentsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SegmentsAsync(Nest.ISegmentsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStores(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStores(Nest.IIndicesShardStoresRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStoresAsync(System.Func{Nest.IndicesShardStoresDescriptor,Nest.IIndicesShardStoresRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesShardStoresAsync(Nest.IIndicesShardStoresRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStats(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStats(Nest.IIndicesStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStatsAsync(Nest.Indices,System.Func{Nest.IndicesStatsDescriptor,Nest.IIndicesStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.IndicesStatsAsync(Nest.IIndicesStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCache(Nest.IClearCacheRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCacheAsync(Nest.Indices,System.Func{Nest.ClearCacheDescriptor,Nest.IClearCacheRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCacheAsync(Nest.IClearCacheRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Flush(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Flush(Nest.IFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FlushAsync(Nest.Indices,System.Func{Nest.FlushDescriptor,Nest.IFlushRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FlushAsync(Nest.IFlushRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMerge(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMerge(Nest.IForceMergeRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMergeAsync(Nest.Indices,System.Func{Nest.ForceMergeDescriptor,Nest.IForceMergeRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ForceMergeAsync(Nest.IForceMergeRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Refresh(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Refresh(Nest.IRefreshRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RefreshAsync(Nest.Indices,System.Func{Nest.RefreshDescriptor,Nest.IRefreshRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RefreshAsync(Nest.IRefreshRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlush(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlush(Nest.ISyncedFlushRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlushAsync(Nest.Indices,System.Func{Nest.SyncedFlushDescriptor,Nest.ISyncedFlushRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SyncedFlushAsync(Nest.ISyncedFlushRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatus(Nest.IUpgradeStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatus(System.Func{Nest.UpgradeStatusDescriptor,Nest.IUpgradeStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UpgradeStatusAsync(Nest.IUpgradeStatusRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeletePipeline(Nest.IDeletePipelineRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeletePipeline(Nest.Id,System.Func{Nest.DeletePipelineDescriptor,Nest.IDeletePipelineRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeletePipelineAsync(Nest.Id,System.Func{Nest.DeletePipelineDescriptor,Nest.IDeletePipelineRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeletePipelineAsync(Nest.IDeletePipelineRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetPipeline(System.Func{Nest.GetPipelineDescriptor,Nest.IGetPipelineRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetPipeline(Nest.IGetPipelineRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetPipelineAsync(System.Func{Nest.GetPipelineDescriptor,Nest.IGetPipelineRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetPipelineAsync(Nest.IGetPipelineRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScript(Nest.IDeleteScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScript(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.DeleteScriptDescriptor,Nest.IDeleteScriptRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteScriptAsync(Nest.IDeleteScriptRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScript(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScript(Nest.IGetScriptRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScriptAsync(Nest.Name,Nest.Id,System.Func{Nest.GetScriptDescriptor,Nest.IGetScriptRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetScriptAsync(Nest.IGetScriptRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepository(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepository(Nest.ICreateRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepositoryAsync(Nest.Name,System.Func{Nest.CreateRepositoryDescriptor,Nest.ICreateRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CreateRepositoryAsync(Nest.ICreateRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepository(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepository(Nest.IDeleteRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepositoryAsync(Nest.Names,System.Func{Nest.DeleteRepositoryDescriptor,Nest.IDeleteRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRepositoryAsync(Nest.IDeleteRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepository(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepository(Nest.IGetRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepositoryAsync(System.Func{Nest.GetRepositoryDescriptor,Nest.IGetRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRepositoryAsync(Nest.IGetRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepository(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepository(Nest.IVerifyRepositoryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepositoryAsync(Nest.Name,System.Func{Nest.VerifyRepositoryDescriptor,Nest.IVerifyRepositoryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.VerifyRepositoryAsync(Nest.IVerifyRepositoryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Restore(Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Restore(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreAsync(Nest.IRestoreRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreAsync(Nest.Name,Nest.Name,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.RestoreDescriptor,Nest.IRestoreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestoreObservable(System.TimeSpan,Nest.IRestoreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshot(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshot(Nest.IDeleteSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.DeleteSnapshotDescriptor,Nest.IDeleteSnapshotRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteSnapshotAsync(Nest.IDeleteSnapshotRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshot(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshot(Nest.IGetSnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshotAsync(Nest.Name,Nest.Names,System.Func{Nest.GetSnapshotDescriptor,Nest.IGetSnapshotRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetSnapshotAsync(Nest.IGetSnapshotRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotObservable(Nest.Name,Nest.Name,System.TimeSpan,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotObservable(System.TimeSpan,Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatus(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatus(Nest.ISnapshotStatusRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatusAsync(System.Func{Nest.SnapshotStatusDescriptor,Nest.ISnapshotStatusRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotStatusAsync(Nest.ISnapshotStatusRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Snapshot(Nest.ISnapshotRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotAsync(Nest.Name,Nest.Name,System.Func{Nest.SnapshotDescriptor,Nest.ISnapshotRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SnapshotAsync(Nest.ISnapshotRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Count``1(Nest.ICountRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.CountAsync``1(Nest.ICountRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Explain``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Explain``1(Nest.IExplainRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExplainAsync``1(Nest.DocumentPath{``0},System.Func{Nest.ExplainDescriptor{``0},Nest.IExplainRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExplainAsync``1(Nest.IExplainRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldCapabilities(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldCapabilities(Nest.IFieldCapabilitiesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldCapabilitiesAsync(Nest.Indices,System.Func{Nest.FieldCapabilitiesDescriptor,Nest.IFieldCapabilitiesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldCapabilitiesAsync(Nest.IFieldCapabilitiesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStats(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStats(Nest.IFieldStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStatsAsync(Nest.Indices,System.Func{Nest.FieldStatsDescriptor,Nest.IFieldStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.FieldStatsAsync(Nest.IFieldStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiSearch(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest})">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearch(Nest.IMultiSearchRequest)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchAsync(System.Func{Nest.MultiSearchDescriptor,Nest.IMultiSearchRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchAsync(Nest.IMultiSearchRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchTemplate(System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest})">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchTemplate(Nest.IMultiSearchTemplateRequest)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchTemplateAsync(System.Func{Nest.MultiSearchTemplateDescriptor,Nest.IMultiSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiSearchTemplateAsync(Nest.IMultiSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolate(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolate(Nest.IMultiPercolateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolateAsync(System.Func{Nest.MultiPercolateDescriptor,Nest.IMultiPercolateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.MultiPercolateAsync(Nest.IMultiPercolateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCount``1(System.Func{Nest.PercolateCountDescriptor{``0},Nest.IPercolateCountRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCount``1(Nest.IPercolateCountRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCountAsync``1(System.Func{Nest.PercolateCountDescriptor{``0},Nest.IPercolateCountRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateCountAsync``1(Nest.IPercolateCountRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Percolate``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Percolate``1(Nest.IPercolateRequest{``0})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateAsync``1(System.Func{Nest.PercolateDescriptor{``0},Nest.IPercolateRequest{``0}},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PercolateAsync``1(Nest.IPercolateRequest{``0},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolator``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolator(Nest.IRegisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolatorAsync``1(Nest.Name,System.Func{Nest.RegisterPercolatorDescriptor{``0},Nest.IRegisterPercolatorRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RegisterPercolatorAsync(Nest.IRegisterPercolatorRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolator``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolator(Nest.IUnregisterPercolatorRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolatorAsync``1(Nest.Name,System.Func{Nest.UnregisterPercolatorDescriptor{``0},Nest.IUnregisterPercolatorRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.UnregisterPercolatorAsync(Nest.IUnregisterPercolatorRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScroll(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScroll(Nest.IClearScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScrollAsync(System.Func{Nest.ClearScrollDescriptor,Nest.IClearScrollRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearScrollAsync(Nest.IClearScrollRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Scroll``1(Nest.IScrollRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Scroll``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ScrollAsync``1(Nest.IScrollRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ScrollAsync``1(Nest.Time,System.String,System.Func{Nest.ScrollDescriptor{``0},Nest.IScrollRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShards``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShards(Nest.ISearchShardsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShardsAsync``1(System.Func{Nest.SearchShardsDescriptor{``0},Nest.ISearchShardsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchShardsAsync(Nest.ISearchShardsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplate(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplate(Nest.IPutSearchTemplateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplateAsync(Nest.Id,System.Func{Nest.PutSearchTemplateDescriptor,Nest.IPutSearchTemplateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutSearchTemplateAsync(Nest.IPutSearchTemplateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``1(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Search``2(Nest.ISearchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``2(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``1(Nest.ISearchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SearchAsync``2(Nest.ISearchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Suggest``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Suggest``1(Nest.ISuggestRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SuggestAsync``1(System.Func{Nest.SuggestDescriptor{``0},Nest.ISuggestRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.SuggestAsync``1(Nest.ISuggestRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQuery``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQuery(Nest.IValidateQueryRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQueryAsync``1(System.Func{Nest.ValidateQueryDescriptor{``0},Nest.IValidateQueryRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ValidateQueryAsync(Nest.IValidateQueryRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExplore``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExplore(Nest.IGraphExploreRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExploreAsync``1(System.Func{Nest.GraphExploreDescriptor{``0},Nest.IGraphExploreRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GraphExploreAsync(Nest.IGraphExploreRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackInfo(System.Func{Nest.XPackInfoDescriptor,Nest.IXPackInfoRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackInfo(Nest.IXPackInfoRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackInfoAsync(System.Func{Nest.XPackInfoDescriptor,Nest.IXPackInfoRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackInfoAsync(Nest.IXPackInfoRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackUsage(System.Func{Nest.XPackUsageDescriptor,Nest.IXPackUsageRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackUsage(Nest.IXPackUsageRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackUsageAsync(System.Func{Nest.XPackUsageDescriptor,Nest.IXPackUsageRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.XPackUsageAsync(Nest.IXPackUsageRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicense(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicense(Nest.IDeleteLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicenseAsync(System.Func{Nest.DeleteLicenseDescriptor,Nest.IDeleteLicenseRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteLicenseAsync(Nest.IDeleteLicenseRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicense(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicense(Nest.IGetLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicenseAsync(System.Func{Nest.GetLicenseDescriptor,Nest.IGetLicenseRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetLicenseAsync(Nest.IGetLicenseRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicense(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicense(Nest.IPostLicenseRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicenseAsync(System.Func{Nest.PostLicenseDescriptor,Nest.IPostLicenseRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PostLicenseAsync(Nest.IPostLicenseRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Authenticate(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.Authenticate(Nest.IAuthenticateRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AuthenticateAsync(System.Func{Nest.AuthenticateDescriptor,Nest.IAuthenticateRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AuthenticateAsync(Nest.IAuthenticateRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealms(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealms(Nest.IClearCachedRealmsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealmsAsync(Nest.Names,System.Func{Nest.ClearCachedRealmsDescriptor,Nest.IClearCachedRealmsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRealmsAsync(Nest.IClearCachedRealmsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleMapping(Nest.Name,System.Func{Nest.DeleteRoleMappingDescriptor,Nest.IDeleteRoleMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleMapping(Nest.IDeleteRoleMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleMappingAsync(Nest.Name,System.Func{Nest.DeleteRoleMappingDescriptor,Nest.IDeleteRoleMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleMappingAsync(Nest.IDeleteRoleMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleMapping(System.Func{Nest.GetRoleMappingDescriptor,Nest.IGetRoleMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleMapping(Nest.IGetRoleMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleMappingAsync(System.Func{Nest.GetRoleMappingDescriptor,Nest.IGetRoleMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleMappingAsync(Nest.IGetRoleMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleMapping(Nest.Name,System.Func{Nest.PutRoleMappingDescriptor,Nest.IPutRoleMappingRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleMapping(Nest.IPutRoleMappingRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleMappingAsync(Nest.Name,System.Func{Nest.PutRoleMappingDescriptor,Nest.IPutRoleMappingRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleMappingAsync(Nest.IPutRoleMappingRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRoles(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRoles(Nest.IClearCachedRolesRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRolesAsync(Nest.Names,System.Func{Nest.ClearCachedRolesDescriptor,Nest.IClearCachedRolesRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ClearCachedRolesAsync(Nest.IClearCachedRolesRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRole(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRole(Nest.IDeleteRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleAsync(Nest.Name,System.Func{Nest.DeleteRoleDescriptor,Nest.IDeleteRoleRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteRoleAsync(Nest.IDeleteRoleRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRole(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRole(Nest.IGetRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleAsync(System.Func{Nest.GetRoleDescriptor,Nest.IGetRoleRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetRoleAsync(Nest.IGetRoleRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRole(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRole(Nest.IPutRoleRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleAsync(Nest.Name,System.Func{Nest.PutRoleDescriptor,Nest.IPutRoleRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutRoleAsync(Nest.IPutRoleRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ChangePassword(System.Func{Nest.ChangePasswordDescriptor,Nest.IChangePasswordRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ChangePassword(Nest.IChangePasswordRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ChangePasswordAsync(System.Func{Nest.ChangePasswordDescriptor,Nest.IChangePasswordRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ChangePasswordAsync(Nest.IChangePasswordRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUser(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUser(Nest.IDeleteUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUserAsync(Nest.Name,System.Func{Nest.DeleteUserDescriptor,Nest.IDeleteUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteUserAsync(Nest.IDeleteUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DisableUser(Nest.Name,System.Func{Nest.DisableUserDescriptor,Nest.IDisableUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DisableUser(Nest.IDisableUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DisableUserAsync(Nest.Name,System.Func{Nest.DisableUserDescriptor,Nest.IDisableUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DisableUserAsync(Nest.IDisableUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.EnableUser(Nest.Name,System.Func{Nest.EnableUserDescriptor,Nest.IEnableUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.EnableUser(Nest.IEnableUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.EnableUserAsync(Nest.Name,System.Func{Nest.EnableUserDescriptor,Nest.IEnableUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.EnableUserAsync(Nest.IEnableUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAccessToken(System.String,System.String,System.Func{Nest.GetUserAccessTokenDescriptor,Nest.IGetUserAccessTokenRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAccessToken(Nest.IGetUserAccessTokenRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAccessTokenAsync(System.String,System.String,System.Func{Nest.GetUserAccessTokenDescriptor,Nest.IGetUserAccessTokenRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAccessTokenAsync(Nest.IGetUserAccessTokenRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUser(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUser(Nest.IGetUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAsync(System.Func{Nest.GetUserDescriptor,Nest.IGetUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetUserAsync(Nest.IGetUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.InvalidateUserAccessToken(System.String,System.Func{Nest.InvalidateUserAccessTokenDescriptor,Nest.IInvalidateUserAccessTokenRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.InvalidateUserAccessToken(Nest.IInvalidateUserAccessTokenRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.InvalidateUserAccessTokenAsync(System.String,System.Func{Nest.InvalidateUserAccessTokenDescriptor,Nest.IInvalidateUserAccessTokenRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.InvalidateUserAccessTokenAsync(Nest.IInvalidateUserAccessTokenRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUser(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUser(Nest.IPutUserRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUserAsync(Nest.Name,System.Func{Nest.PutUserDescriptor,Nest.IPutUserRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutUserAsync(Nest.IPutUserRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AcknowledgeWatch(Nest.Id,System.Func{Nest.AcknowledgeWatchDescriptor,Nest.IAcknowledgeWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AcknowledgeWatch(Nest.IAcknowledgeWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AcknowledgeWatchAsync(Nest.Id,System.Func{Nest.AcknowledgeWatchDescriptor,Nest.IAcknowledgeWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.AcknowledgeWatchAsync(Nest.IAcknowledgeWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ActivateWatch(Nest.Id,System.Func{Nest.ActivateWatchDescriptor,Nest.IActivateWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ActivateWatch(Nest.IActivateWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ActivateWatchAsync(Nest.Id,System.Func{Nest.ActivateWatchDescriptor,Nest.IActivateWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ActivateWatchAsync(Nest.IActivateWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeactivateWatch(Nest.Id,System.Func{Nest.DeactivateWatchDescriptor,Nest.IDeactivateWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeactivateWatch(Nest.IDeactivateWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeactivateWatchAsync(Nest.Id,System.Func{Nest.DeactivateWatchDescriptor,Nest.IDeactivateWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeactivateWatchAsync(Nest.IDeactivateWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWatch(Nest.Id,System.Func{Nest.DeleteWatchDescriptor,Nest.IDeleteWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWatch(Nest.IDeleteWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWatchAsync(Nest.Id,System.Func{Nest.DeleteWatchDescriptor,Nest.IDeleteWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.DeleteWatchAsync(Nest.IDeleteWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExecuteWatch(System.Func{Nest.ExecuteWatchDescriptor,Nest.IExecuteWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExecuteWatch(Nest.IExecuteWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExecuteWatchAsync(System.Func{Nest.ExecuteWatchDescriptor,Nest.IExecuteWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.ExecuteWatchAsync(Nest.IExecuteWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWatch(Nest.Id,System.Func{Nest.GetWatchDescriptor,Nest.IGetWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWatch(Nest.IGetWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWatchAsync(Nest.Id,System.Func{Nest.GetWatchDescriptor,Nest.IGetWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.GetWatchAsync(Nest.IGetWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWatch(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWatch(Nest.IPutWatchRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWatchAsync(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.PutWatchAsync(Nest.IPutWatchRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestartWatcher(System.Func{Nest.RestartWatcherDescriptor,Nest.IRestartWatcherRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestartWatcher(Nest.IRestartWatcherRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestartWatcherAsync(System.Func{Nest.RestartWatcherDescriptor,Nest.IRestartWatcherRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.RestartWatcherAsync(Nest.IRestartWatcherRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StartWatcher(System.Func{Nest.StartWatcherDescriptor,Nest.IStartWatcherRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StartWatcher(Nest.IStartWatcherRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StartWatcherAsync(System.Func{Nest.StartWatcherDescriptor,Nest.IStartWatcherRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StartWatcherAsync(Nest.IStartWatcherRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StopWatcher(System.Func{Nest.StopWatcherDescriptor,Nest.IStopWatcherRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StopWatcher(Nest.IStopWatcherRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StopWatcherAsync(System.Func{Nest.StopWatcherDescriptor,Nest.IStopWatcherRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.StopWatcherAsync(Nest.IStopWatcherRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.WatcherStats(System.Func{Nest.WatcherStatsDescriptor,Nest.IWatcherStatsRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.WatcherStats(Nest.IWatcherStatsRequest)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.WatcherStatsAsync(System.Func{Nest.WatcherStatsDescriptor,Nest.IWatcherStatsRequest},System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ElasticClient.WatcherStatsAsync(Nest.IWatcherStatsRequest,System.Threading.CancellationToken)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CatAllocationRequest">
            <summary>Request parameters for CatAllocation <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html</pre></summary>
        </member>
        <member name="M:Nest.CatAllocationRequest.#ctor">
            <summary>/_cat/allocation</summary>
        </member>
        <member name="M:Nest.CatAllocationRequest.#ctor(Nest.NodeIds)">
             <summary>/_cat/allocation/{node_id}</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatAllocationRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatAllocationRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatAllocationDescriptor">
            <summary>descriptor for CatAllocation <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html</pre></summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.#ctor">
            <summary>/_cat/allocation</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatAllocationDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatCountRequest">
            <summary>Request parameters for CatCount <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html</pre></summary>
        </member>
        <member name="M:Nest.CatCountRequest.#ctor">
            <summary>/_cat/count</summary>
        </member>
        <member name="M:Nest.CatCountRequest.#ctor(Nest.Indices)">
             <summary>/_cat/count/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatCountRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatCountRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatCountRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatCountRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatCountRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatCountRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatCountRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatCountRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatCountDescriptor">
            <summary>descriptor for CatCount <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html</pre></summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.#ctor">
            <summary>/_cat/count</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatCountDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatFielddataRequest">
            <summary>Request parameters for CatFielddata <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html</pre></summary>
        </member>
        <member name="M:Nest.CatFielddataRequest.#ctor">
            <summary>/_cat/fielddata</summary>
        </member>
        <member name="M:Nest.CatFielddataRequest.#ctor(Nest.Fields)">
             <summary>/_cat/fielddata/{fields}</summary>
            <param name="fields">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatFielddataRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatFielddataRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatFielddataDescriptor">
            <summary>descriptor for CatFielddata <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html</pre></summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.#ctor">
            <summary>/_cat/fielddata</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Fields(Nest.Fields)">
            <summary>A comma-separated list of fields to return the fielddata size</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to return the fielddata size</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatFielddataDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatHealthRequest">
            <summary>Request parameters for CatHealth <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html</pre></summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Ts">
            <summary>Set to false to disable timestamping</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatHealthRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatHealthDescriptor">
            <summary>descriptor for CatHealth <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html</pre></summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Ts(System.Boolean)">
            <summary>Set to false to disable timestamping</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatHealthDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatHelpRequest">
            <summary>Request parameters for CatHelp <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html</pre></summary>
        </member>
        <member name="P:Nest.CatHelpRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatHelpRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatHelpDescriptor">
            <summary>descriptor for CatHelp <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html</pre></summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatHelpDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatIndicesRequest">
            <summary>Request parameters for CatIndices <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html</pre></summary>
        </member>
        <member name="M:Nest.CatIndicesRequest.#ctor">
            <summary>/_cat/indices</summary>
        </member>
        <member name="M:Nest.CatIndicesRequest.#ctor(Nest.Indices)">
             <summary>/_cat/indices/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatIndicesRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Health">
            <summary>A health status (&quot;green&quot;, &quot;yellow&quot;, or &quot;red&quot; to filter only indices matching the specified health status</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Pri">
            <summary>Set to true to return stats only for primary shards</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatIndicesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatIndicesDescriptor">
            <summary>descriptor for CatIndices <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html</pre></summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.#ctor">
            <summary>/_cat/indices</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Health(Elasticsearch.Net.Health)">
            <summary>A health status (&quot;green&quot;, &quot;yellow&quot;, or &quot;red&quot; to filter only indices matching the specified health status</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Pri(System.Boolean)">
            <summary>Set to true to return stats only for primary shards</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatIndicesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatMasterRequest">
            <summary>Request parameters for CatMaster <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html</pre></summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatMasterRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatMasterDescriptor">
            <summary>descriptor for CatMaster <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html</pre></summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatMasterDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatNodeAttributesRequest">
            <summary>Request parameters for CatNodeattrs <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html</pre></summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatNodeAttributesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatNodeAttributesDescriptor">
            <summary>descriptor for CatNodeattrs <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html</pre></summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatNodeAttributesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatNodesRequest">
            <summary>Request parameters for CatNodes <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html</pre></summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.FullId">
            <summary>Return the full node ID instead of the shortened version (default: false)</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatNodesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatNodesDescriptor">
            <summary>descriptor for CatNodes <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html</pre></summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.FullId(System.Boolean)">
            <summary>Return the full node ID instead of the shortened version (default: false)</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatNodesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatPendingTasksRequest">
            <summary>Request parameters for CatPendingTasks <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html</pre></summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatPendingTasksRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatPendingTasksDescriptor">
            <summary>descriptor for CatPendingTasks <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html</pre></summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatPendingTasksDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatPluginsRequest">
            <summary>Request parameters for CatPlugins <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html</pre></summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatPluginsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatPluginsDescriptor">
            <summary>descriptor for CatPlugins <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html</pre></summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatPluginsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatRecoveryRequest">
            <summary>Request parameters for CatRecovery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.CatRecoveryRequest.#ctor">
            <summary>/_cat/recovery</summary>
        </member>
        <member name="M:Nest.CatRecoveryRequest.#ctor(Nest.Indices)">
             <summary>/_cat/recovery/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Bytes">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatRecoveryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatRecoveryDescriptor">
            <summary>descriptor for CatRecovery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.#ctor">
            <summary>/_cat/recovery</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatRecoveryDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatRepositoriesRequest">
            <summary>Request parameters for CatRepositories <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html</pre></summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatRepositoriesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatRepositoriesDescriptor">
            <summary>descriptor for CatRepositories <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html</pre></summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatRepositoriesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatSegmentsRequest">
            <summary>Request parameters for CatSegments <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html</pre></summary>
        </member>
        <member name="M:Nest.CatSegmentsRequest.#ctor">
            <summary>/_cat/segments</summary>
        </member>
        <member name="M:Nest.CatSegmentsRequest.#ctor(Nest.Indices)">
             <summary>/_cat/segments/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatSegmentsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatSegmentsDescriptor">
            <summary>descriptor for CatSegments <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html</pre></summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.#ctor">
            <summary>/_cat/segments</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatSegmentsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatShardsRequest">
            <summary>Request parameters for CatShards <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html</pre></summary>
        </member>
        <member name="M:Nest.CatShardsRequest.#ctor">
            <summary>/_cat/shards</summary>
        </member>
        <member name="M:Nest.CatShardsRequest.#ctor(Nest.Indices)">
             <summary>/_cat/shards/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatShardsRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatShardsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatShardsDescriptor">
            <summary>descriptor for CatShards <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html</pre></summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.#ctor">
            <summary>/_cat/shards</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to limit the returned information</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatShardsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatSnapshotsRequest">
            <summary>Request parameters for CatSnapshots <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CatSnapshotsRequest.#ctor">
            <summary>/_cat/snapshots</summary>
        </member>
        <member name="M:Nest.CatSnapshotsRequest.#ctor(Nest.Names)">
             <summary>/_cat/snapshots/{repository}</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.IgnoreUnavailable">
            <summary>Set to true to ignore unavailable snapshots</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatSnapshotsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatSnapshotsDescriptor">
            <summary>descriptor for CatSnapshots <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.#ctor">
            <summary>/_cat/snapshots</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.#ctor(Nest.Names)">
             <summary>/_cat/snapshots/{repository}</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Set to true to ignore unavailable snapshots</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatSnapshotsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatTasksRequest">
            <summary>Request parameters for CatTasks <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.NodeId">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Actions">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Detailed">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.ParentNode">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.ParentTask">
            <summary>Return tasks with specified parent task id. Set to -1 to return all.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatTasksRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatTasksDescriptor">
            <summary>descriptor for CatTasks <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Detailed(System.Boolean)">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.ParentNode(System.String)">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.ParentTask(System.Int64)">
            <summary>Return tasks with specified parent task id. Set to -1 to return all.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatTasksDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatTemplatesRequest">
            <summary>Request parameters for CatTemplates <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html</pre></summary>
        </member>
        <member name="M:Nest.CatTemplatesRequest.#ctor">
            <summary>/_cat/templates</summary>
        </member>
        <member name="M:Nest.CatTemplatesRequest.#ctor(Nest.Name)">
             <summary>/_cat/templates/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatTemplatesRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatTemplatesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatTemplatesDescriptor">
            <summary>descriptor for CatTemplates <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html</pre></summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.#ctor">
            <summary>/_cat/templates</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Name(Nest.Name)">
            <summary>A pattern that returned template names must match</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatTemplatesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatThreadPoolRequest">
            <summary>Request parameters for CatThreadPool <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html</pre></summary>
        </member>
        <member name="M:Nest.CatThreadPoolRequest.#ctor">
            <summary>/_cat/thread_pool</summary>
        </member>
        <member name="M:Nest.CatThreadPoolRequest.#ctor(Nest.Names)">
             <summary>/_cat/thread_pool/{thread_pool_patterns}</summary>
            <param name="thread_pool_patterns">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Format">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Size">
            <summary>The multiplier in which to display values</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.H">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Help">
            <summary>Return help information</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.S">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.V">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CatThreadPoolRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CatThreadPoolDescriptor">
            <summary>descriptor for CatThreadPool <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html</pre></summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.#ctor">
            <summary>/_cat/thread_pool</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.ThreadPoolPatterns(Nest.Names)">
            <summary>A comma-separated list of regular-expressions to filter the thread pools in the output</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Size(Elasticsearch.Net.Size)">
            <summary>The multiplier in which to display values</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CatThreadPoolDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IClusterAllocationExplainRequest.Index">
            <summary>
            The name of the index to provide an explanation for
            </summary>
        </member>
        <member name="P:Nest.IClusterAllocationExplainRequest.Shard">
            <summary>
            The shard id to provide an explanation for
            </summary>
        </member>
        <member name="P:Nest.IClusterAllocationExplainRequest.Primary">
            <summary>
            Whether to explain a primary or replica shard
            </summary>
        </member>
        <member name="T:Nest.ClusterAllocationExplainRequest">
            <summary>Request parameters for ClusterAllocationExplain <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.Index">
            <summary>
            The name of the index to provide an explanation for
            </summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.Shard">
            <summary>
            The shard id to provide an explanation for
            </summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.Primary">
            <summary>
            Whether to explain a primary or replica shard
            </summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.IncludeYesDecisions">
            <summary>Return &#39;YES&#39; decisions in explanation (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.IncludeDiskInfo">
            <summary>Return information about disk usage and shard sizes (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterAllocationExplainRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterAllocationExplainDescriptor">
            <summary>descriptor for ClusterAllocationExplain <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Index(Nest.IndexName)">
            <summary>
            The name of the index to provide an explanation for
            </summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Index``1">
            <summary>
            The name of the index to provide an explanation for
            </summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Primary(System.Boolean)">
            <summary>
            Whether to explain a primary or replica shard
            </summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Shard(System.Int32)">
            <summary>
            The shard id to provide an explanation for
            </summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.IncludeYesDecisions(System.Boolean)">
            <summary>Return &#39;YES&#39; decisions in explanation (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.IncludeDiskInfo(System.Boolean)">
            <summary>Return information about disk usage and shard sizes (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterAllocationExplainDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.IndexCreated">
            <summary>
             Unassigned as a result of an API creation of an index.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.ClusterRecovered">
            <summary>
             Unassigned as a result of a full cluster recovery.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.IndexReopened">
            <summary>
             Unassigned as a result of opening a closed index.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.DanglingIndexImported">
            <summary>
             Unassigned as a result of importing a dangling index.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.NewIndexRestored">
            <summary>
             Unassigned as a result of restoring into a new index.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.ExistingIndexRestored">
            <summary>
             Unassigned as a result of restoring into a closed index.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.ReplicaAdded">
            <summary>
             Unassigned as a result of explicit addition of a replica.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.AllocationFailed">
            <summary>
             Unassigned as a result of a failed allocation of the shard.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.NodeLeft">
            <summary>
             Unassigned as a result of the node hosting it leaving the cluster.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.RerouteCancelled">
            <summary>
             Unassigned as a result of explicit cancel reroute command.
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.Reinitialized">
            <summary>
             When a shard moves from started back to initializing, for example, during shadow replica
            </summary>
        </member>
        <member name="F:Nest.UnassignedInformationReason.ReallocatedReplica">
            <summary>
             A better replica location is identified and causes the existing replica allocation to be cancelled.
            </summary>
        </member>
        <member name="T:Nest.ClusterHealthRequest">
            <summary>Request parameters for ClusterHealth <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterHealthRequest.#ctor">
            <summary>/_cluster/health</summary>
        </member>
        <member name="M:Nest.ClusterHealthRequest.#ctor(Nest.Indices)">
             <summary>/_cluster/health/{index}</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Level">
            <summary>Specify the level of detail for returned information</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForActiveShards">
            <summary>Wait until the specified number of shards is active</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForNodes">
            <summary>Wait until the specified number of nodes is available</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForEvents">
            <summary>Wait until all currently queued events with the given priority are processed</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForNoRelocatingShards">
            <summary>Whether to wait until there are no relocating shards in the cluster</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.WaitForStatus">
            <summary>Wait until cluster is in a specific state</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterHealthRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterHealthDescriptor">
            <summary>descriptor for ClusterHealth <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.#ctor">
            <summary>/_cluster/health</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Index(Nest.Indices)">
            <summary>Limit the information returned to a specific index</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Specify the level of detail for returned information</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForActiveShards(System.String)">
            <summary>Wait until the specified number of shards is active</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForNodes(System.String)">
            <summary>Wait until the specified number of nodes is available</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForEvents(Elasticsearch.Net.WaitForEvents)">
            <summary>Wait until all currently queued events with the given priority are processed</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForNoRelocatingShards(System.Boolean)">
            <summary>Whether to wait until there are no relocating shards in the cluster</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.WaitForStatus(Elasticsearch.Net.WaitForStatus)">
            <summary>Wait until cluster is in a specific state</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterHealthDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterPendingTasksRequest">
            <summary>Request parameters for ClusterPendingTasks <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterPendingTasksRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterPendingTasksDescriptor">
            <summary>descriptor for ClusterPendingTasks <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterPendingTasksDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterRerouteRequest">
            <summary>Request parameters for ClusterReroute <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.DryRun">
            <summary>Simulate the operation only and return the resulting state</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Explain">
            <summary>Return an explanation of why the commands can or cannot be executed</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.RetryFailed">
            <summary>Retries allocation of shards that are blocked due to too many subsequent allocation failures</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Metric">
            <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterRerouteRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterRerouteDescriptor">
            <summary>descriptor for ClusterReroute <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.DryRun(System.Boolean)">
            <summary>Simulate the operation only and return the resulting state</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Explain(System.Boolean)">
            <summary>Return an explanation of why the commands can or cannot be executed</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.RetryFailed(System.Boolean)">
            <summary>Retries allocation of shards that are blocked due to too many subsequent allocation failures</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Metric(System.String[])">
            <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterRerouteDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterGetSettingsRequest">
            <summary>Request parameters for ClusterGetSettings <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.IncludeDefaults">
            <summary>Whether to return all default clusters setting.</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterGetSettingsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterGetSettingsDescriptor">
            <summary>descriptor for ClusterGetSettings <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default clusters setting.</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterGetSettingsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterPutSettingsRequest">
            <summary>Request parameters for ClusterPutSettings <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html</pre></summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterPutSettingsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterPutSettingsDescriptor">
            <summary>descriptor for ClusterPutSettings <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterPutSettingsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterStateRequest">
            <summary>Request parameters for ClusterState <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStateRequest.#ctor">
            <summary>/_cluster/state</summary>
        </member>
        <member name="M:Nest.ClusterStateRequest.#ctor(Elasticsearch.Net.ClusterStateMetric)">
             <summary>/_cluster/state/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ClusterStateRequest.#ctor(Elasticsearch.Net.ClusterStateMetric,Nest.Indices)">
             <summary>/_cluster/state/{metric}/{index}</summary>
            <param name="metric">Optional, accepts null</param>		
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClusterStateRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterStateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterStateDescriptor">
            <summary>descriptor for ClusterState <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.#ctor">
            <summary>/_cluster/state</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Metric(Elasticsearch.Net.ClusterStateMetric)">
            <summary>Limit the information returned to the specified metrics</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterStateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterStatsRequest">
            <summary>Request parameters for ClusterStats <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStatsRequest.#ctor">
            <summary>/_cluster/stats</summary>
        </member>
        <member name="M:Nest.ClusterStatsRequest.#ctor(Nest.NodeIds)">
             <summary>/_cluster/stats/nodes/{node_id}</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClusterStatsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClusterStatsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClusterStatsDescriptor">
            <summary>descriptor for ClusterStats <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html</pre></summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.#ctor">
            <summary>/_cluster/stats</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClusterStatsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.NodesHotThreadsRequest">
            <summary>Request parameters for NodesHotThreadsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html</pre></summary>
        </member>
        <member name="M:Nest.NodesHotThreadsRequest.#ctor">
            <summary>/_cluster/nodes/hotthreads</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsRequest.#ctor(Nest.NodeIds)">
             <summary>/_cluster/nodes/{node_id}/hotthreads</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Interval">
            <summary>The interval for the second sampling of threads</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Snapshots">
            <summary>Number of samples of thread stacktrace (default: 10)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Threads">
            <summary>Specify the number of threads to provide information for (default: 3)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.IgnoreIdleThreads">
            <summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.ThreadType">
            <summary>The type to sample (default: cpu)</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.NodesHotThreadsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.NodesHotThreadsDescriptor">
            <summary>descriptor for NodesHotThreadsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html</pre></summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.#ctor">
            <summary>/_cluster/nodes/hotthreads</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Interval(Nest.Time)">
            <summary>The interval for the second sampling of threads</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Snapshots(System.Int64)">
            <summary>Number of samples of thread stacktrace (default: 10)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Threads(System.Int64)">
            <summary>Specify the number of threads to provide information for (default: 3)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.IgnoreIdleThreads(System.Boolean)">
            <summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.ThreadType(Elasticsearch.Net.ThreadType)">
            <summary>The type to sample (default: cpu)</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.NodesHotThreadsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.NodeInfo.Roles">
            <summary>
            All of the different roles that the node fulfills. An empty
            collection means that the node is a coordinating only node.
            </summary>
        </member>
        <member name="T:Nest.NodesInfoRequest">
            <summary>Request parameters for NodesInfoForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html</pre></summary>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor">
            <summary>/_nodes</summary>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor(Nest.NodeIds)">
             <summary>/_nodes/{node_id}</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor(Elasticsearch.Net.NodesInfoMetric)">
             <summary>/_nodes/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesInfoRequest.#ctor(Nest.NodeIds,Elasticsearch.Net.NodesInfoMetric)">
             <summary>/_nodes/{node_id}/{metric}</summary>
            <param name="node_id">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.NodesInfoRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.NodesInfoRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.NodesInfoDescriptor">
            <summary>descriptor for NodesInfoForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html</pre></summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.#ctor">
            <summary>/_nodes</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Metric(Elasticsearch.Net.NodesInfoMetric)">
            <summary>A comma-separated list of metrics you wish returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.NodesInfoDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.NodesStatsRequest">
            <summary>Request parameters for NodesStatsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html</pre></summary>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor">
            <summary>/_nodes/stats</summary>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds)">
             <summary>/_nodes/{node_id}/stats</summary>
            <param name="node_id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Elasticsearch.Net.NodesStatsMetric)">
             <summary>/_nodes/stats/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds,Elasticsearch.Net.NodesStatsMetric)">
             <summary>/_nodes/{node_id}/stats/{metric}</summary>
            <param name="node_id">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Elasticsearch.Net.NodesStatsMetric,Elasticsearch.Net.NodesStatsIndexMetric)">
             <summary>/_nodes/stats/{metric}/{index_metric}</summary>
            <param name="metric">Optional, accepts null</param>		
            <param name="index_metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.NodesStatsRequest.#ctor(Nest.NodeIds,Elasticsearch.Net.NodesStatsMetric,Elasticsearch.Net.NodesStatsIndexMetric)">
             <summary>/_nodes/{node_id}/stats/{metric}/{index_metric}</summary>
            <param name="node_id">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>		
            <param name="index_metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.NodesStatsRequest.CompletionFields">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.FielddataFields">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Fields">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Groups">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Level">
            <summary>Return indices stats aggregated at index, node or shard level</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Types">
            <summary>A comma-separated list of document types for the `indexing` index metric</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.IncludeSegmentFileSizes">
            <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.NodesStatsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.NodesStatsDescriptor">
            <summary>descriptor for NodesStatsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html</pre></summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.#ctor">
            <summary>/_nodes/stats</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Metric(Elasticsearch.Net.NodesStatsMetric)">
            <summary>Limit the information returned to the specified metrics</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.IndexMetric(Elasticsearch.Net.NodesStatsIndexMetric)">
            <summary>Limit the information returned for `indices` metric to the specific index metrics. Isn't used if `indices` (or `all`) metric isn't specified.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.NodeId(Nest.NodeIds)">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you're connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.CompletionFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.FielddataFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Groups(System.Boolean)">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Return indices stats aggregated at index, node or shard level</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Types(System.String[])">
            <summary>A comma-separated list of document types for the `indexing` index metric</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.IncludeSegmentFileSizes(System.Boolean)">
            <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.NodesStatsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.NodeStats.Roles">
            <summary>
            All of the different roles that the node fulfills. An empty
            collection means that the node is a coordinating only node.
            </summary>
        </member>
        <member name="T:Nest.PingRequest">
            <summary>Request parameters for Ping <pre>https://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="P:Nest.PingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PingDescriptor">
            <summary>descriptor for Ping <pre>https://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="M:Nest.PingDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PingDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PingDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PingDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PingDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RemoteInfoRequest">
            <summary>Request parameters for RemoteInfo <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html</pre></summary>
        </member>
        <member name="P:Nest.RemoteInfoRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RemoteInfoRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RemoteInfoRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RemoteInfoRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RemoteInfoRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RemoteInfoDescriptor">
            <summary>descriptor for RemoteInfo <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html</pre></summary>
        </member>
        <member name="M:Nest.RemoteInfoDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RemoteInfoDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RemoteInfoDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RemoteInfoDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RemoteInfoDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RootNodeInfoRequest">
            <summary>Request parameters for Info <pre>https://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RootNodeInfoRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RootNodeInfoDescriptor">
            <summary>descriptor for Info <pre>https://www.elastic.co/guide/</pre></summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RootNodeInfoDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CancelTasksRequest">
            <summary>Request parameters for TasksCancel <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="M:Nest.CancelTasksRequest.#ctor">
            <summary>/_tasks/_cancel</summary>
        </member>
        <member name="M:Nest.CancelTasksRequest.#ctor(Nest.TaskId)">
             <summary>/_tasks/{task_id}/_cancel</summary>
            <param name="task_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CancelTasksRequest.NodeId">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.Actions">
            <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.ParentNode">
            <summary>Cancel tasks with specified parent node.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.ParentTask">
            <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CancelTasksRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CancelTasksDescriptor">
            <summary>descriptor for TasksCancel <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.#ctor">
            <summary>/_tasks/_cancel</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.TaskId(Nest.TaskId)">
            <summary>Cancel the task with specified task id (node_id:task_number)</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.ParentNode(System.String)">
            <summary>Cancel tasks with specified parent node.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.ParentTask(System.String)">
            <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CancelTasksDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetTaskRequest">
            <summary>Request parameters for TasksGet <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="M:Nest.GetTaskRequest.#ctor(Nest.TaskId)">
             <summary>/_tasks/{task_id}</summary>
            <param name="task_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetTaskRequest.WaitForCompletion">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="P:Nest.GetTaskRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetTaskRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetTaskRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetTaskRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetTaskRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetTaskDescriptor">
            <summary>descriptor for TasksGet <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.#ctor">
            <summary>/_tasks/{task_id}</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.TaskId(Nest.TaskId)">
            <summary>Return the task with specified id (node_id:task_number)</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetTaskDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ListTasksRequest">
            <summary>Request parameters for TasksList <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="P:Nest.ListTasksRequest.NodeId">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.Actions">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.Detailed">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.ParentNode">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.ParentTask">
            <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.WaitForCompletion">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.GroupBy">
            <summary>Group tasks by nodes or parent/child relationships</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ListTasksRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ListTasksDescriptor">
            <summary>descriptor for TasksList <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html</pre></summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.Detailed(System.Boolean)">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.ParentNode(System.String)">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.ParentTask(System.String)">
            <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.GroupBy(Elasticsearch.Net.GroupBy)">
            <summary>Group tasks by nodes or parent/child relationships</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ListTasksDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.IndexName">
            <summary>
            When specified dictates the default Elasticsearch index name for <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.TypeName">
            <summary>
            When specified dictates the default Elasticsearch type name for <typeparamref name="T" />
            </summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.IdProperty">
            <summary>
            Allows you to set a default Id property on <typeparamref name="T" /> that NEST will evaluate 
            </summary>
        </member>
        <member name="P:Nest.IClrTypeMapping`1.Properties">
            <summary>
            When specified allows you to ignore or rename certain properties of clr type <typeparamref name="T" />
            </summary>
        </member>
        <member name="P:Nest.ClrTypeMapping`1.IndexName">
            <summary>
            When specified dictates the default Elasticsearch index name for <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="P:Nest.ClrTypeMapping`1.TypeName">
            <summary>
            When specified dictates the default Elasticsearch type name for <typeparamref name="T" />
            </summary>
        </member>
        <member name="P:Nest.ClrTypeMapping`1.IdProperty">
            <summary>
            Allows you to set a default Id property on <typeparamref name="T" /> that NEST will evaluate 
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.IndexName(System.String)">
            <summary>
            When specified dictates the default Elasticsearch index name for <typeparamref name="T"/> 
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.TypeName(System.String)">
            <summary>
            When specified dictates the default Elasticsearch type name for <typeparamref name="T" />
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.IdProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            Allows you to set a default Id property on <typeparamref name="T" /> that NEST will evaluate 
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            When specified allows you to ignore <param name="property"></param> on clr type <typeparamref name="T" />
            </summary>
        </member>
        <member name="M:Nest.ClrTypeMappingDescriptor`1.Rename(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String)">
            <summary>
            When specified allows you to rename <param name="property"></param> on clr type <typeparamref name="T" />
            </summary>
        </member>
        <member name="T:Nest.ConnectionSettings">
            <summary>
            Provides the connection settings for NEST's <see cref="T:Nest.ElasticClient"/>
            </summary>
        </member>
        <member name="T:Nest.ConnectionSettingsBase`1">
            <summary>
            Provides the connection settings for NEST's <see cref="T:Nest.ElasticClient"/>
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultSerializer(`0)">
            <summary>
            The default serializer for requests and responses
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.PluralizeTypeNames">
            <summary>
            Pluralize type names when inferring from POCO type names.
            <para></para>
            This calls <see cref="M:Nest.ConnectionSettingsBase`1.DefaultTypeNameInferrer(System.Func{System.Type,System.String})"/> with an implementation that will pluralize type names. 
            This used to be the default prior to Nest 0.90
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultIndex(System.String)">
            <summary>
            The default index to use when no index is specified.
            </summary>
            <param name="defaultIndex">When null/empty/not set might throw
            <see cref="T:System.NullReferenceException"/> later on when not specifying index explicitly while indexing.
            </param>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultFieldNameInferrer(System.Func{System.String,System.String})">
            <summary>
            Specify how field names are inferred from POCO property names.
            <para></para>
            By default, NEST camel cases property names 
            e.g. EmailAddress POCO property => "emailAddress" Elasticsearch document field name
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.DefaultTypeNameInferrer(System.Func{System.Type,System.String})">
            <summary>
            Specify how type names are inferred from POCO types. 
            By default, type names are inferred by calling <see cref="M:System.String.ToLowerInvariant"/>
             on the type's name.
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.MapDefaultTypeIndices(System.Action{Nest.FluentDictionary{System.Type,System.String}})">
            <summary>
            Specify the default index names for a given POCO type. 
            Takes precedence over the global <see cref="M:Nest.ConnectionSettingsBase`1.DefaultIndex(System.String)"/>
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.MapDefaultTypeNames(System.Action{Nest.FluentDictionary{System.Type,System.String}})">
            <summary>
            Specify the default type names for a given POCO type. 
            Takes precedence over the global <see cref="M:Nest.ConnectionSettingsBase`1.DefaultTypeNameInferrer(System.Func{System.Type,System.String})"/>
            </summary>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.MapIdPropertyFor``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            Specify which property on a given POCO should be used to infer the id of the document when 
            indexed in Elasticsearch.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="objectPath">The object path.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.MapPropertiesFor``1(System.Action{Nest.PropertyMappingDescriptor{``0}})">
            <summary>
            Specify how the properties are mapped for a given POCO type.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="propertiesSelector">The properties selector.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.ConnectionSettingsBase`1.InferMappingFor``1(System.Func{Nest.ClrTypeMappingDescriptor{``0},Nest.IClrTypeMapping{``0}})">
            <summary>
            Specify how the mapping is inferred for a given POCO type. 
            Can be used to infer the index, type, id property and properties for the POCO.
            </summary>
            <typeparam name="TDocument">The type of the document.</typeparam>
            <param name="selector">The selector.</param>
            <returns></returns>
        </member>
        <member name="T:Nest.Inflector">
            <summary>
            Pluralizes or singularizes words.
            </summary>
        </member>
        <member name="M:Nest.Inflector.#cctor">
            <summary>
            Initializes the <see cref="T:Nest.Inflector"/> class.
            </summary>
        </member>
        <member name="M:Nest.Inflector.AddIrregularRule(System.String,System.String)">
            <summary>
            Adds the irregular rule.
            </summary>
            <param name="singular">The singular.</param>
            <param name="plural">The plural.</param>
        </member>
        <member name="M:Nest.Inflector.AddUnknownCountRule(System.String)">
            <summary>
            Adds the unknown count rule.
            </summary>
            <param name="word">The word.</param>
        </member>
        <member name="M:Nest.Inflector.AddPluralRule(System.String,System.String)">
            <summary>
            Adds the plural rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Nest.Inflector.AddSingularRule(System.String,System.String)">
            <summary>
            Adds the singular rule.
            </summary>
            <param name="rule">The rule.</param>
            <param name="replacement">The replacement.</param>
        </member>
        <member name="M:Nest.Inflector.MakePlural(System.String)">
            <summary>
            Makes the plural.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.Inflector.MakeSingular(System.String)">
            <summary>
            Makes the singular.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="M:Nest.Inflector.ApplyRules(System.Collections.Generic.IList{Nest.Inflector.InflectorRule},System.String)">
            <summary>
            Applies the rules.
            </summary>
            <param name="rules">The rules.</param>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Nest.Inflector.InflectorRule">
            <summary>
            Summary for the InflectorRule class
            </summary>
        </member>
        <member name="M:Nest.Inflector.InflectorRule.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Nest.Inflector.InflectorRule"/> class.
            </summary>
            <param name="regexPattern">The regex pattern.</param>
            <param name="replacementText">The replacement text.</param>
        </member>
        <member name="M:Nest.Inflector.InflectorRule.Apply(System.String)">
            <summary>
            Applies the tule to the specified word.
            </summary>
            <param name="word">The word.</param>
            <returns></returns>
        </member>
        <member name="T:Nest.MemberInfoResolver">
            <summary>
            Resolves member infos in an expression, instance may NOT be shared.
            </summary>
        </member>
        <member name="M:Nest.ExpressionExtensions.AppendSuffix``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)">
            <summary>
            Appends <paramref name="suffix"/> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
            <param name="expression">the expression to which the suffix should be applied</param>
            <param name="suffix">the suffix</param>
        </member>
        <member name="T:Nest.ExpressionExtensions.SuffixExpressionVisitor">
            <summary>
            Calls <see cref="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)"/> on a member expression.
            </summary>
        </member>
        <member name="M:Nest.SuffixExtensions.Suffix(System.Object,System.String)">
            <summary>
            This extension method should only be used in expressions which are analysed by Nest.
            When analysed it will append <paramref name="suffix"/> to the path separating it with a dot.
            This is especially useful with multi fields.
            </summary>
        </member>
        <member name="M:Nest.TypeExtensions.AllPropertiesNotCached(System.Type)">
            <summary>
            Returns inherited properties with reflectedType set to base type
            </summary>
        </member>
        <member name="M:Nest.TypeExtensions.IsHidingMember(System.Reflection.PropertyInfo)">
            <summary>
            Determines if a property is overriding an inherited property of its base class
            </summary>
        </member>
        <member name="M:Nest.DescriptorBase`2.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorBase`2.GetHashCode">
            <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorBase`2.ToString">
            <summary>
            Hides the <see cref="M:Nest.DescriptorBase`2.ToString"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorPromiseBase`2.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorPromiseBase`2.GetHashCode">
            <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Nest.DescriptorPromiseBase`2.ToString">
            <summary>
            Hides the <see cref="M:Nest.DescriptorPromiseBase`2.ToString"/> method.
            </summary>
        </member>
        <member name="T:Nest.DescriptorForAttribute">
            <summary>
            DescriptorFor is a marker to rename unintuitive generated elasticsearch operation names
            This is used by the code generator and is only meant for internal use to map our more aptly named requests to 
            the original elasticsearch rest spec
            </summary>
        </member>
        <member name="M:Nest.TaskId.#ctor(System.String)">
            <summary>
            A task id exists in the form [node_id]:[task_id]
            </summary>
            <param name="taskId">the task identifier</param>
        </member>
        <member name="M:Nest.ILazyDocument.As``1">
            <summary>
            Creates an instance of <typeparamref name="T"/> from this
            <see cref="T:Nest.ILazyDocument"/> instance
            </summary>
            <typeparam name="T">The type</typeparam>
        </member>
        <member name="M:Nest.ILazyDocument.As(System.Type)">
            <summary>
            Creates an instance of <paramref name="objectType"/> from this
            <see cref="T:Nest.ILazyDocument"/> instance
            </summary>
            <param name="objectType">The type</param>
        </member>
        <member name="M:Nest.LazyDocument.As``1">
            <inheritdoc />
        </member>
        <member name="M:Nest.LazyDocument.As(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:Nest.LowLevelDispatch">
            <summary>This dispatches highlevel requests into the proper lowlevel client overload method</summary>
        </member>
        <member name="T:Nest.RawJson">
            <summary>
            Marker class that signals to the CustomJsonConverter to write the string verbatim
            </summary>
        </member>
        <member name="T:Nest.ProducerConsumerBackPressure">
            <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then the backPressureFactor which defaults to 4
            </summary>
        </member>
        <member name="M:Nest.ProducerConsumerBackPressure.#ctor(System.Nullable{System.Int32},System.Int32)">
            <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then the backPressureFactor
            </summary>
            <param name="backPressureFactor">The maximum amplification back pressure of the greedier part of the producer consumer pipeline, if null defaults to 4</param>
            <param name="maxConcurrency">The minimum maximum concurrency which would be the bottleneck of the producer consumer pipeline</param>
        </member>
        <member name="P:Nest.IRequest`1.RequestParameters">
            <summary>
            Used to describe request parameters that are not part of the body. e.g. query string, connection configuration overrides, etc.
            </summary>
        </member>
        <member name="T:Nest.IUntypedDocumentRequest">
            <summary>
            A request that has an untyped document property
            </summary>
        </member>
        <member name="P:Nest.IUntypedDocumentRequest.UntypedDocument">
            <summary>
            The untyped document
            </summary>
        </member>
        <member name="P:Nest.PlainRequestBase`1.RequestConfiguration">
            <summary>
            Specify settings for this request alone, handy if you need a custom timeout or want to bypass sniffing, retries
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.RequestConfiguration(System.Func{Elasticsearch.Net.RequestConfigurationDescriptor,Elasticsearch.Net.IRequestConfiguration})">
            <summary>
            Specify settings for this request alone, handy if you need a custom timeout or want to bypass sniffing, retries
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.GetHashCode">
            <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Nest.RequestDescriptorBase`3.ToString">
            <summary>
            Hides the <see cref="M:Nest.RequestDescriptorBase`3.ToString"/> method.
            </summary>
        </member>
        <member name="T:Nest.IResponse">
            <summary>
            Shared interface by all elasticsearch responses
            </summary>
        </member>
        <member name="P:Nest.IResponse.IsValid">
            <summary>
            This property can be used to check if a response is functionally valid or not.
            This is a NEST abstraction to have a single point to check whether something wrong happened with the request.
            <para>For instance an elasticsearch bulk response always returns 200 and individual bulk items may fail, <see cref="P:Nest.IResponse.IsValid"/> will be false in that case</para>
            <para>You can also configure the client to always throw an <see cref="T:Elasticsearch.Net.ElasticsearchClientException"/> using <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions"/> if the response is not valid</para>
            </summary>
        </member>
        <member name="P:Nest.IResponse.ServerError">
            <summary>
            If the response results in an error on elasticsearch's side an <pre>error</pre> element will be returned, this is mapped to <see cref="P:Nest.IResponse.ServerError"/> in NEST.
            <para>This property is a shortcut to <see cref="P:Elasticsearch.Net.IBodyWithApiCallDetails.ApiCall"/>'s <see cref="P:Elasticsearch.Net.IApiCallDetails.ServerError"/> and is possibly set when <see cref="P:Nest.IResponse.IsValid"/> is false, depending on the cause of the error</para>
            <para>You can also configure the client to always throw an <see cref="T:Elasticsearch.Net.ElasticsearchClientException"/> using <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions"/> if the response is not valid</para>
            </summary>
        </member>
        <member name="P:Nest.IResponse.OriginalException">
            <summary>
            If the request resulted in an exception on the client side this will hold the exception that was thrown.
            <para>This property is a shortcut to <see cref="P:Elasticsearch.Net.IBodyWithApiCallDetails.ApiCall"/>'s <see cref="P:Elasticsearch.Net.IApiCallDetails.OriginalException"/> and is possibly set when <see cref="P:Nest.IResponse.IsValid"/> is false depending on the cause of the error</para>
            <para>You can also configure the client to always throw an <see cref="T:Elasticsearch.Net.ElasticsearchClientException"/> using <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions"/> if the response is not valid</para>
            </summary>
        </member>
        <member name="P:Nest.IResponse.DebugInformation">
            <summary>
            A lazy human readable string representation of what happened during this request for both successful and 
            failed requests, very useful while developing or to log when <see cref="P:Nest.IResponse.IsValid"/> is false on responses.
            </summary>
        </member>
        <member name="P:Nest.ResponseBase.IsValid">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ResponseBase.ApiCall">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ResponseBase.ServerError">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ResponseBase.OriginalException">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ResponseBase.DebugInformation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ElasticContractResolver.ConnectionSettings">
            <summary>
            ConnectionSettings can be requested by JsonConverters.
            </summary>
        </member>
        <member name="P:Nest.ElasticContractResolver.PiggyBackState">
            <summary>
            Signals to custom converter that it can get serialization state from one of the converters. Ugly but massive performance gain
            </summary>
        </member>
        <member name="T:Nest.EnumMemberValueCasingJsonConverter`1">
            <summary>
            A Json converter that can serialize enums to strings where the string values
            are specified using <see cref="P:System.Runtime.Serialization.EnumMemberAttribute.Value"/> and where values
            differ in casing.
            </summary>
            <remarks>
            See https://github.com/JamesNK/Newtonsoft.Json/issues/1067
            </remarks>
            <typeparam name="TEnum">the type of enum</typeparam>
        </member>
        <member name="M:Nest.FromJson.ReadAs``1(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the json to T and returns an instance of it
            </summary>
        </member>
        <member name="M:Nest.FromJson.Read(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Read the json as an instance of <para name="objectType"></para>
            </summary>
        </member>
        <member name="T:Nest.ReadOnlyCollectionJsonConverter`2">
            <summary>
            Json converter that deserializes into an <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> or <see cref="T:System.Collections.Generic.IReadOnlyCollection`1"/>
            where <typeparamref name="TInterface"/> does not have a custom deserializer and should be deserialized
            into concrete types of <typeparamref name="TDocument"/>
            </summary>
            <remarks>
            <typeparamref name="TInterface"/> may not have a deserializer for valid reasons, for example, an interface may be implemented by two
            concrete types that need to be deserialized. In this case, a deserializer would not know which concrete type to deserialize to in
            a given context.
            </remarks>
            <typeparam name="TDocument">The concrete type to deserialize</typeparam>
            <typeparam name="TInterface">The interface for the deserialized readonly collection</typeparam>
        </member>
        <member name="T:Nest.VerbatimDictionaryKeysJsonConverter">
            <summary>
            JSON converter for IDictionary that ignores the contract resolver (e.g. CamelCaseFieldNamesContractResolver)
            when converting dictionary keys to property names.
            </summary>
        </member>
        <member name="T:Nest.VerbatimDictionaryKeysJsonConverter`2">
            <summary>
            JSON converter for IDictionary&lt;TKey,TValue&gt; and IReadOnlyDictionary&lt;TKey,TValue&gt;
            that ignores the contract resolver (e.g. CamelCaseFieldNamesContractResolver)
            when converting dictionary keys to property names.
            </summary>
        </member>
        <member name="T:Nest.JsonNetSerializer">
            <summary>
            A JSON serializer that uses Json.NET for serialization
            </summary>
        </member>
        <member name="P:Nest.JsonNetSerializer.ContractResolver">
            <summary>
            Resolves JsonContracts for types
            </summary>
        </member>
        <member name="P:Nest.JsonNetSerializer.BufferSize">
            <summary>
            The size of the buffer to use when writing the serialized request
            to the request stream
            </summary>
        </member>
        <member name="M:Nest.JsonNetSerializer.#ctor(Nest.IConnectionSettingsValues,Newtonsoft.Json.JsonConverter,System.Action{Newtonsoft.Json.JsonSerializerSettings,Nest.IConnectionSettingsValues})">
            <summary>
            this constructor is only here for stateful (de)serialization
            </summary>
        </member>
        <member name="M:Nest.JsonNetSerializer.OverwriteDefaultSerializers(System.Action{Newtonsoft.Json.JsonSerializerSettings,Nest.IConnectionSettingsValues})">
            <summary>
            If you subclass JsonNetSerializer and want to apply state passed in the constructor, call this to
            overwrite the DefaultSerializers's JsonSerializerSettings and/or connectionSettings.
            </summary>
            <param name="settingsModifier">a delegate used to modify json serializer and connection settings</param>
        </member>
        <member name="T:Nest.JsonConverterPiggyBackState">
            <summary>
            Registerering global jsonconverters is very costly,
            The best thing is to specify them as a contract (see ElasticContractResolver)
            This however prevents a way to give a jsonconverter state which for some calls is needed i.e:
            A multiget and multisearch need access to the descriptor that describes what types are used.
            When NEST knows it has to piggyback this it has to pass serialization state it will create a new 
            serializersettings object with a new contract resolver which holds this state. Its ugly but it does boost
            massive performance gains.
            </summary>
        </member>
        <member name="M:Nest.Infer.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Nullable{System.Double})">
            <summary>
            Create a strongly typed string field name representation of the path to a property
            <para>e.g. p => p.Array.First().SubProperty.Field will return 'array.subProperty.field'</para>
            </summary>
            <typeparam name="T">The type of the object</typeparam>
            <param name="path">The path we want to specify</param>
            <param name="boost">An optional ^boost postfix, only make sense with certain queries</param>
        </member>
        <member name="F:Nest.DateFormat.epoch_millis">
            <summary>A formatter for the number of milliseconds since the epoch. Note, that this timestamp is subject to the limits of a Java Long.MIN_VALUE and Long.MAX_VALUE.</summary>
        </member>
        <member name="F:Nest.DateFormat.epoch_second">
            <summary>A formatter for the number of seconds since the epoch. Note, that this timestamp is subject to the limits of a Java Long.MIN_VALUE and Long. MAX_VALUE divided by 1000 (the number of milliseconds in a second).</summary>
        </member>
        <member name="F:Nest.DateFormat.date_optional_time">
            <summary>A basic formatter for a full date as four digit year, two digit month of year, and two digit day of month: yyyyMMdd.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_date">
            <summary>A basic formatter that combines a basic date and time, separated by a T: yyyyMMdd'T'HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_date_time">
            <summary>A basic formatter that combines a basic date and time, separated by a T: yyyyMMdd'T'HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_date_time_no_millis">
            <summary>A basic formatter that combines a basic date and time without millis, separated by a T: yyyyMMdd'T'HHmmssZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_ordinal_date">
            <summary>A formatter for a full ordinal date, using a four digit year and three digit dayOfYear: yyyyDDD.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_ordinal_date_time">
            <summary>A formatter for a full ordinal date and time, using a four digit year and three digit dayOfYear: yyyyDDD'T'HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_ordinal_date_time_no_millis">
            <summary>A formatter for a full ordinal date and time without millis, using a four digit year and three digit dayOfYear: yyyyDDD'T'HHmmssZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_time">
            <summary>A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit millis, and time zone offset: HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_time_no_millis">
            <summary>A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset: HHmmssZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_t_time">
            <summary>A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit millis, and time zone off set prefixed by T: 'T'HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_t_time_no_millis">
            <summary>A basic formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset prefixed by T: 'T'HHmmssZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_week_date">
            <summary>A basic formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx'W'wwe.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_basic_week_date">
            <summary>A basic formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx'W'wwe.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_week_date_time">
            <summary>A basic formatter that combines a basic weekyear date and time, separated by a T: xxxx'W'wwe'T'HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_basic_week_date_time">
            <summary>A basic formatter that combines a basic weekyear date and time, separated by a T: xxxx'W'wwe'T'HHmmss.SSSZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.basic_week_date_time_no_millis">
            <summary>A basic formatter that combines a basic weekyear date and time without millis, separated by a T: xxxx'W'wwe'T'HHmmssZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_basic_week_date_time_no_millis">
            <summary>A basic formatter that combines a basic weekyear date and time without millis, separated by a T: xxxx'W'wwe'T'HHmmssZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.date">
            <summary>A formatter for a full date as four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date">
            <summary>A formatter for a full date as four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_hour">
            <summary>A formatter that combines a full date and two digit hour of day: yyyy-MM-dd'T'HH.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_hour">
            <summary>A formatter that combines a full date and two digit hour of day: yyyy-MM-dd'T'HH.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_hour_minute">
            <summary>A formatter that combines a full date, two digit hour of day, and two digit minute of hour: yyyy-MM-dd'T'HH:mm.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_hour_minute">
            <summary>A formatter that combines a full date, two digit hour of day, and two digit minute of hour: yyyy-MM-dd'T'HH:mm.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_hour_minute_second">
            <summary>A formatter that combines a full date, two digit hour of day, two digit minute of hour, and two digit second of minute: yyyy-MM-dd'T'HH:mm:ss.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_hour_minute_second">
            <summary>A formatter that combines a full date, two digit hour of day, two digit minute of hour, and two digit second of minute: yyyy-MM-dd'T'HH:mm:ss.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_hour_minute_second_fraction">
            <summary>A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_hour_minute_second_fraction">
            <summary>A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_hour_minute_second_millis">
            <summary>A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_hour_minute_second_millis">
            <summary>A formatter that combines a full date, two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: yyyy-MM-dd'T'HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_time">
            <summary>A formatter that combines a full date and time, separated by a T: yyyy-MM-dd'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_time">
            <summary>A formatter that combines a full date and time, separated by a T: yyyy-MM-dd'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.date_time_no_millis">
            <summary>A formatter that combines a full date and time without millis, separated by a T: yyyy-MM-dd'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_date_time_no_millis">
            <summary>A formatter that combines a full date and time without millis, separated by a T: yyyy-MM-dd'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.hour">
            <summary>A formatter for a two digit hour of day: HH</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_hour">
            <summary>A formatter for a two digit hour of day: HH</summary>
        </member>
        <member name="F:Nest.DateFormat.hour_minute">
            <summary>A formatter for a two digit hour of day and two digit minute of hour: HH:mm.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_hour_minute">
            <summary>A formatter for a two digit hour of day and two digit minute of hour: HH:mm.</summary>
        </member>
        <member name="F:Nest.DateFormat.hour_minute_second">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, and two digit second of minute: HH:mm:ss.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_hour_minute_second">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, and two digit second of minute: HH:mm:ss.</summary>
        </member>
        <member name="F:Nest.DateFormat.hour_minute_second_fraction">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_hour_minute_second_fraction">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.hour_minute_second_millis">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_hour_minute_second_millis">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and three digit fraction of second: HH:mm:ss.SSS.</summary>
        </member>
        <member name="F:Nest.DateFormat.ordinal_date">
            <summary>A formatter for a full ordinal date, using a four digit year and three digit dayOfYear: yyyy-DDD.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_ordinal_date">
            <summary>A formatter for a full ordinal date, using a four digit year and three digit dayOfYear: yyyy-DDD.</summary>
        </member>
        <member name="F:Nest.DateFormat.ordinal_date_time">
            <summary>A formatter for a full ordinal date and time, using a four digit year and three digit dayOfYear: yyyy-DDD'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_ordinal_date_time">
            <summary>A formatter for a full ordinal date and time, using a four digit year and three digit dayOfYear: yyyy-DDD'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.ordinal_date_time_no_millis">
            <summary>A formatter for a full ordinal date and time without millis, using a four digit year and three digit dayOfYear: yyyy-DDD'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_ordinal_date_time_no_millis">
            <summary>A formatter for a full ordinal date and time without millis, using a four digit year and three digit dayOfYear: yyyy-DDD'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.time">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and time zone offset: HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_time">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and time zone offset: HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.time_no_millis">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset: HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_time_no_millis">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset: HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.t_time">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and time zone offset prefixed by T: 'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_t_time">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, three digit fraction of second, and time zone offset prefixed by T: 'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.t_time_no_millis">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset prefixed by T: 'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_t_time_no_millis">
            <summary>A formatter for a two digit hour of day, two digit minute of hour, two digit second of minute, and time zone offset prefixed by T: 'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.week_date">
            <summary>A formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_week_date">
            <summary>A formatter for a full date as four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
        </member>
        <member name="F:Nest.DateFormat.week_date_time">
            <summary>A formatter that combines a full weekyear date and time, separated by a T: xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_week_date_time">
            <summary>A formatter that combines a full weekyear date and time, separated by a T: xxxx-'W'ww-e'T'HH:mm:ss.SSSZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.week_date_time_no_millis">
            <summary>A formatter that combines a full weekyear date and time without millis, separated by a T: xxxx-'W'ww-e'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_week_date_time_no_millis">
            <summary>A formatter that combines a full weekyear date and time without millis, separated by a T: xxxx-'W'ww-e'T'HH:mm:ssZZ.</summary>
        </member>
        <member name="F:Nest.DateFormat.weekyear">
            <summary>A formatter for a four digit weekyear: xxxx.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_weekyear">
            <summary>A formatter for a four digit weekyear: xxxx.</summary>
        </member>
        <member name="F:Nest.DateFormat.weekyear_week">
            <summary>A formatter for a four digit weekyear and two digit week of weekyear: xxxx-'W'ww.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_weekyear_week">
            <summary>A formatter for a four digit weekyear and two digit week of weekyear: xxxx-'W'ww.</summary>
        </member>
        <member name="F:Nest.DateFormat.weekyear_week_day">
            <summary>A formatter for a four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_weekyear_week_day">
            <summary>A formatter for a four digit weekyear, two digit week of weekyear, and one digit day of week: xxxx-'W'ww-e.</summary>
        </member>
        <member name="F:Nest.DateFormat.year">
            <summary>A formatter for a four digit year: yyyy.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_year">
            <summary>A formatter for a four digit year: yyyy.</summary>
        </member>
        <member name="F:Nest.DateFormat.year_month">
            <summary>A formatter for a four digit year and two digit month of year: yyyy-MM.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_year_month">
            <summary>A formatter for a four digit year and two digit month of year: yyyy-MM.</summary>
        </member>
        <member name="F:Nest.DateFormat.year_month_day">
            <summary>A formatter for a four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
        </member>
        <member name="F:Nest.DateFormat.strict_year_month_day">
            <summary>A formatter for a four digit year, two digit month of year, and two digit day of month: yyyy-MM-dd.</summary>
        </member>
        <member name="T:Nest.IRange">
            <summary>
            Range that defines a bucket for either the <see cref="T:Nest.RangeAggregation"/> or
            <see cref="T:Nest.GeoDistanceAggregation"/>. If you are looking to store ranges as
            part of your document please use explicit range class e.g DateRange, FloatRange etc
            </summary>
        </member>
        <member name="T:Nest.IAggregationRange">
            <summary>
            Range that defines a bucket for either the <see cref="T:Nest.RangeAggregation"/> or
            <see cref="T:Nest.GeoDistanceAggregation"/>. If you are looking to store ranges as
            part of your document please use explicit range class e.g DateRange, FloatRange etc
            </summary>
        </member>
        <member name="T:Nest.Range">
            <inheritdoc/>
        </member>
        <member name="T:Nest.AggregationRange">
            <inheritdoc/>
        </member>
        <member name="T:Nest.RangeDescriptor">
            <inheritdoc/>
        </member>
        <member name="T:Nest.AggregationRangeDescriptor">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.BackOffTime">
            <summary> In case of a 429 (too busy) how long should we wait before retrying</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.BackOffRetries">
            <summary> In case of a 429 (too busy) how many times should we automatically back off before failing</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Size">
            <summary> The number of documents to send per bulk</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Documents">
            <summary>
             The documents to send to elasticsearch, try to keep the IEnumerable lazy.
             The bulk observable will ToList() each partitioned page in a lazy fashion, to keep memory consumption to a minimum.
             It makes no sense to set this to an list of 1 million records because all of those million records need to be in memory
             Make use of c#'s lazy generator!
            </summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.MaxDegreeOfParallelism">
            <summary>The maximum number of bulk operations we want to have in flight at a time</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Index">
            <summary>Default index for items which don't provide one</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Type">
            <summary>Default document type for items which don't provide one</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.WaitForActiveShards">
            <summary>
            Sets the number of shard copies that must be active before proceeding with the bulk operation.
            Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any
            non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)
            </summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Refresh">
            <summary>Refresh the index after performing each operation (elasticsearch will refresh locally)</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.RefreshOnCompleted">
            <summary>Refresh the index after performing ALL the bulk operations (NOTE this is an additional request)</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Routing">
            <summary>Specific per bulk operation routing value</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Timeout">
            <summary>Explicit per operation timeout</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.Pipeline">
            <summary>The pipeline id to preprocess all the incoming documents with</summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.BufferToBulk">
            <summary>
            By default the bulkall helper simply calls BulkDescriptor.IndexMany on the buffer.
            There might be case where you'd like more control over this. By setting this callback you are in complete control
            of describing how the buffer should be translated to a bulk operation.
            </summary>
        </member>
        <member name="P:Nest.IBulkAllRequest`1.BackPressure">
            <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each bulk request will call <see cref="M:Nest.ProducerConsumerBackPressure.Release"/>
            </summary>
        </member>
        <member name="P:Nest.BulkAllRequest`1.BackOffTime">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Size">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.MaxDegreeOfParallelism">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.BackOffRetries">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Documents">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Index">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Type">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.WaitForActiveShards">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Refresh">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.RefreshOnCompleted">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Routing">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Timeout">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.Pipeline">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.BufferToBulk">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllRequest`1.BackPressure">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.MaxDegreeOfParallelism(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Size(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.BackOffRetries(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.BackOffTime(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Index(Nest.IndexName)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Index``1">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Type(Nest.TypeName)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Type``1">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.RefreshOnCompleted(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Refresh(Elasticsearch.Net.Refresh)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Routing(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Timeout(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.Pipeline(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.BufferToBulk(System.Action{Nest.BulkDescriptor,System.Collections.Generic.IList{`0}})">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkAllDescriptor`1.BackPressure(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each scroll request will additionally wait on <see cref="M:Nest.ProducerConsumerBackPressure.WaitAsync(System.Threading.CancellationToken)"/> as well as
            <see cref="M:Nest.BulkAllDescriptor`1.MaxDegreeOfParallelism(System.Nullable{System.Int32})"/> if set. Not that the consumer has to call <see cref="M:Nest.ProducerConsumerBackPressure.Release"/>
            on the same instance every time it is done.
            </summary>
            <param name="maxConcurrency">The minimum maximum concurrency which would be the bottleneck of the producer consumer pipeline</param>
            <param name="backPressureFactor">The maximum amplification back pressure of the greedier part of the producer consumer pipeline</param>
        </member>
        <member name="T:Nest.IBulkAllResponse">
            <summary>
            Notification for each bulk response, indicates the page its currently processing and how many retries it took to index this buffer
            </summary>
        </member>
        <member name="P:Nest.IBulkAllResponse.Page">
            <summary>This is the Nth buffer.</summary>
        </member>
        <member name="P:Nest.IBulkAllResponse.Retries">
            <summary>The number of back off retries were needed to store this document.</summary>
        </member>
        <member name="T:Nest.BulkAllResponse">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllResponse.Page">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllResponse.Retries">
            <inheritdoc />
        </member>
        <member name="P:Nest.BulkAllResponse.IsValid">
            <inheritdoc />
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Document(`0)">
            <summary>
            The object to update, if id is not manually set it will be inferred from the object
            </summary>
        </member>
        <member name="M:Nest.BulkCreateDescriptor`1.Pipeline(System.String)">
            <summary>
            The pipeline id to preprocess documents with
            </summary>
        </member>
        <member name="M:Nest.BulkDeleteDescriptor`1.Document(`0)">
            <summary>
            The object to infer the id off, (if id is not passed using Id())
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Document(`0)">
            <summary>
            The object to index, if id is not manually set it will be inferred from the object
            </summary>
        </member>
        <member name="M:Nest.BulkIndexDescriptor`1.Pipeline(System.String)">
            <summary>
            The pipeline id to preprocess documents with
            </summary>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Nest#IBulkOperation#GetBody">
            <summary>
            Only used for bulk update operations but in the future might come in handy for other complex bulk ops.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Index(Nest.IndexName)">
            <summary>
            Manually set the index, default to the default index or the fixed index set on the bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Type(Nest.TypeName)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed or the fixed type set on the parent bulk operation
            </summary>
        </member>
        <member name="M:Nest.BulkOperationDescriptorBase`2.Id(Nest.Id)">
            <summary>
            Manually set the id for the newly created object
            </summary>
        </member>
        <member name="P:Nest.IBulkUpdateOperation`2.IdFrom">
            <summary>
            Infers the id of the object to update from the provided object.
            See <see cref="P:Nest.IBulkUpdateOperation`2.Doc"/> to apply a partial object merge.
            </summary>
        </member>
        <member name="P:Nest.IBulkUpdateOperation`2.Upsert">
            <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
        </member>
        <member name="P:Nest.IBulkUpdateOperation`2.Doc">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="P:Nest.IBulkUpdateOperation`2.DocAsUpsert">
            <summary>
            Instead of sending a partial doc with <see cref="P:Nest.IBulkUpdateOperation`2.Doc"/> plus an upsert doc
            with <see cref="P:Nest.IBulkUpdateOperation`2.Upsert"/>, setting <see cref="P:Nest.IBulkUpdateOperation`2.DocAsUpsert"/> to <c>true</c> will
            use the contents of doc as the upsert value.
            </summary>
        </member>
        <member name="P:Nest.IBulkUpdateOperation`2.ScriptedUpsert">
            <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
        </member>
        <member name="P:Nest.IBulkUpdateOperation`2.Script">
            <summary>
            A script to specify the update.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateOperation`2.#ctor(`0,System.Boolean)">
            <summary>
            Create a new bulk operation
            </summary>
            <param name="idFrom">Use this document to infer the id from</param>
            <param name="useIdFromAsUpsert">Use the document to infer on as the upsert document in this update operation</param>
        </member>
        <member name="M:Nest.BulkUpdateOperation`2.#ctor(`0,`1,System.Boolean)">
            <summary>
            Create a new Bulk Operation
            </summary>
            <param name="idFrom">Use this document to infer the id from</param>
            <param name="update">The partial update document (doc) to send as update</param>
            <param name="useIdFromAsUpsert">Use the document to infer on as the upsert document in this update operation</param>
        </member>
        <member name="P:Nest.BulkUpdateOperation`2.IdFrom">
            <summary>
            Infers the id of the object to update from the provided object.
            See <see cref="P:Nest.BulkUpdateOperation`2.Doc"/> to apply a partial object merge.
            </summary>
        </member>
        <member name="P:Nest.BulkUpdateOperation`2.Upsert">
            <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
        </member>
        <member name="P:Nest.BulkUpdateOperation`2.Doc">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="P:Nest.BulkUpdateOperation`2.DocAsUpsert">
            <summary>
            Instead of sending a partial doc with <see cref="P:Nest.BulkUpdateOperation`2.Doc"/> plus an upsert doc
            with <see cref="P:Nest.BulkUpdateOperation`2.Upsert"/>, setting <see cref="P:Nest.BulkUpdateOperation`2.DocAsUpsert"/> to <c>true</c> will
            use the contents of doc as the upsert value.
            </summary>
        </member>
        <member name="P:Nest.BulkUpdateOperation`2.ScriptedUpsert">
            <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
        </member>
        <member name="P:Nest.BulkUpdateOperation`2.Script">
            <summary>
            A script to specify the update.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.IdFrom(`0,System.Boolean)">
            <summary>
            Infers the id of the object to update from the provided <param name="object">object</param>.
            See <see cref="M:Nest.BulkUpdateDescriptor`2.Doc(`1)"/> to apply a partial object merge.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Upsert(`0)">
            <summary>
            A document to upsert when the specified document to be updated is not found
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Doc(`1)">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.DocAsUpsert(System.Boolean)">
            <summary>
            Instead of sending a partial doc with <see cref="M:Nest.BulkUpdateDescriptor`2.Doc(`1)"/> plus an upsert doc
            with <see cref="M:Nest.BulkUpdateDescriptor`2.Upsert(`0)"/>, setting <see cref="M:Nest.BulkUpdateDescriptor`2.DocAsUpsert(System.Boolean)"/> to <c>true</c> will
            use the contents of doc as the upsert value.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.ScriptedUpsert(System.Boolean)">
            <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.Script(System.Func{Nest.ScriptDescriptor,Nest.IScript})">
            <summary>
            A script to specify the update.
            </summary>
        </member>
        <member name="M:Nest.BulkUpdateDescriptor`2.RetriesOnConflict(System.Nullable{System.Int32})">
            <summary>
            How many times an update should be retried in the case of a version conflict.
            </summary>
        </member>
        <member name="T:Nest.BulkRequest">
            <summary>Request parameters for Bulk <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html</pre></summary>
        </member>
        <member name="M:Nest.BulkRequest.#ctor">
            <summary>/_bulk</summary>
        </member>
        <member name="M:Nest.BulkRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_bulk</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.BulkRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_bulk</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.BulkRequest.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.BulkRequest.Refresh">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.BulkRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.BulkRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.BulkRequest.Fields">
            <summary>Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request</summary>
        </member>
        <member name="P:Nest.BulkRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request</summary>
        </member>
        <member name="P:Nest.BulkRequest.SourceExclude">
            <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="P:Nest.BulkRequest.SourceInclude">
            <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="P:Nest.BulkRequest.Pipeline">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="P:Nest.BulkRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.BulkRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.BulkRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.BulkRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.BulkRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.BulkDescriptor">
            <summary>descriptor for Bulk <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html</pre></summary>
        </member>
        <member name="M:Nest.BulkDescriptor.CreateMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkCreateDescriptor{``0},``0,Nest.IBulkCreateOperation{``0}})">
            <summary>
            CreateMany, convenience method to create many documents at once.
            </summary>
            <param name="objects">the objects to create</param>
            <param name="bulkCreateSelector">A func called on each object to describe the individual create operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.IndexMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkIndexDescriptor{``0},``0,Nest.IBulkIndexOperation{``0}})">
            <summary>
            IndexMany, convenience method to pass many objects at once.
            </summary>
            <param name="objects">the objects to index</param>
            <param name="bulkIndexSelector">A func called on each object to describe the individual index operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkDeleteDescriptor{``0},``0,Nest.IBulkDeleteOperation{``0}})">
            <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
            <param name="objects">the objects to delete</param>
            <param name="bulkDeleteSelector">A func called on each object to describe the individual delete operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{System.String},System.Func{Nest.BulkDeleteDescriptor{``0},System.String,Nest.IBulkDeleteOperation{``0}})">
            <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
            <param name="ids">Enumerable of string ids to delete</param>
            <param name="bulkDeleteSelector">A func called on each ids to describe the individual delete operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.DeleteMany``1(System.Collections.Generic.IEnumerable{System.Int64},System.Func{Nest.BulkDeleteDescriptor{``0},System.Int64,Nest.IBulkDeleteOperation{``0}})">
            <summary>
            DeleteMany, convenience method to delete many objects at once.
            </summary>
            <param name="ids">Enumerable of int ids to delete</param>
            <param name="bulkDeleteSelector">A func called on each ids to describe the individual delete operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.UpdateMany``1(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkUpdateDescriptor{``0,``0},``0,Nest.IBulkUpdateOperation{``0,``0}})">
            <summary>
            Updatemany, convenience method to pass many objects at once to do multiple updates.
            </summary>
            <param name="objects">the objects to update</param>
            <param name="bulkUpdateSelector">An func called on each object to describe the individual update operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.UpdateMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{Nest.BulkUpdateDescriptor{``0,``1},``0,Nest.IBulkUpdateOperation{``0,``1}})">
            <summary>
            Updatemany, convenience method to pass many objects at once to do multiple updates.
            </summary>
            <param name="objects">the objects to update</param>
            <param name="bulkUpdateSelector">An func called on each object to describe the individual update operation</param>
        </member>
        <member name="M:Nest.BulkDescriptor.#ctor">
            <summary>/_bulk</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Index(Nest.IndexName)">
            <summary>Default index for items which don't provide one</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Type(Nest.TypeName)">
            <summary>Default document type for items which don't provide one</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Fields(System.String[])">
            <summary>Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.SourceExclude(System.String[])">
            <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.SourceExclude``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.SourceInclude(System.String[])">
            <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.SourceInclude``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Pipeline(System.String)">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.BulkDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.BulkIndexResponseItem.Matches">
            <summary>
            Null if Percolation was not requested while indexing this doc, otherwise returns the percolator _ids that matched (if any)
            </summary>
        </member>
        <member name="P:Nest.BulkResponseItemBase.IsValid">
            <summary>
            Specifies wheter this particular bulk operation succeeded or not
            </summary>
        </member>
        <member name="T:Nest.DeleteManyExtensions">
            <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
        </member>
        <member name="M:Nest.DeleteManyExtensions.DeleteMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName,Nest.TypeName)">
            <summary>
            Shortcut into the Bulk call that deletes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to delete</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="M:Nest.DeleteManyExtensions.DeleteManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName,Nest.TypeName,System.Threading.CancellationToken)">
            <summary>
            Shortcut into the Bulk call that deletes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to delete</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="T:Nest.IndexManyExtensions">
            <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
        </member>
        <member name="M:Nest.IndexManyExtensions.IndexMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName,Nest.TypeName)">
            <summary>
            Shortcut into the Bulk call that indexes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to index, Id will be inferred (Id property or IdProperty attribute on type)</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="M:Nest.IndexManyExtensions.IndexManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{``0},Nest.IndexName,Nest.TypeName,System.Threading.CancellationToken)">
            <summary>
            Shortcut into the Bulk call that indexes the specified objects
            <para> </para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-bulk.html
            </summary>
            <param name="client"></param>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="objects">List of objects to index, Id will be inferred (Id property or IdProperty attribute on type)</param>
            <param name="index">Override the inferred indexname for T</param>
            <param name="type">Override the inferred typename for T</param>
        </member>
        <member name="T:Nest.DeleteByQueryRequest">
            <summary>Request parameters for DeleteByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteByQueryRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_delete_by_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteByQueryRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_delete_by_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.From">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Conflicts">
            <summary>What to do when the delete-by-query hits version conflicts?</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SearchTimeout">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Size">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Sort">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.TerminateAfter">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Version">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.ScrollSize">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.WaitForCompletion">
            <summary>Should the request should block until the delete-by-query is complete.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.RequestsPerSecond">
            <summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Slices">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.StoredFields">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.DocvalueFields">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest.TrackScores">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="T:Nest.DeleteByQueryRequest`1">
            <summary>Request parameters for DeleteByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteByQueryRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_delete_by_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteByQueryRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_delete_by_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.From">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Conflicts">
            <summary>What to do when the delete-by-query hits version conflicts?</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SearchTimeout">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Size">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Sort">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.TerminateAfter">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Version">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.ScrollSize">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.WaitForCompletion">
            <summary>Should the request should block until the delete-by-query is complete.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.RequestsPerSecond">
            <summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Slices">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.StoredFields">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.DocvalueFields">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.DeleteByQueryRequest`1.TrackScores">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="T:Nest.DeleteByQueryDescriptor`1">
            <summary>descriptor for DeleteByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.#ctor(Nest.Indices)">
             <summary>/{index}/_delete_by_query</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.From(System.Int64)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Conflicts(Elasticsearch.Net.Conflicts)">
            <summary>What to do when the delete-by-query hits version conflicts?</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SearchTimeout(Nest.Time)">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Size(System.Int64)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.TerminateAfter(System.Int64)">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Timeout(Nest.Time)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.ScrollSize(System.Int64)">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the delete-by-query is complete.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.RequestsPerSecond(System.Int64)">
            <summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Slices(System.Int64)">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.DocvalueFields(System.String[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.DocvalueFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SuggestField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.DeleteByQueryDescriptor`1.TrackScores(System.Boolean)">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="P:Nest.IDeleteByQueryResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="T:Nest.GetManyExtensions">
            <summary>
            Provides GetMany extensions that make it easier to get many documents given a list of ids
            </summary>
        </member>
        <member name="M:Nest.GetManyExtensions.GetMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},Nest.IndexName,Nest.TypeName)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as string for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.GetManyExtensions.GetMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},Nest.IndexName,Nest.TypeName)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as ints for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.GetManyExtensions.GetManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},Nest.IndexName,Nest.TypeName,System.Threading.CancellationToken)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as string for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="M:Nest.GetManyExtensions.GetManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},Nest.IndexName,Nest.TypeName,System.Threading.CancellationToken)">
            <summary>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">IEnumerable of ids as ints for the documents to fetch</param>
            <param name="index">Optionally override the default inferred index name for T</param>
            <param name="type">Optionally overiide the default inferred typename for T</param>
        </member>
        <member name="T:Nest.SourceManyExtensions">
            <summary>
            Provides convenience extension methods to get many _source's given a list of ids.
            </summary>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as string</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceMany``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as int</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as string</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.SourceManyExtensions.SourceManyAsync``1(Nest.IElasticClient,System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            SourceMany allows you to get a list of T documents out of elasticsearch, internally it calls into MultiGet()
            <para>
            Multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing).
            The response includes a docs array with all the fetched documents, each element similar in structure to a document
            provided by the get API.
            </para>
            <para> </para>>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/docs-multi-get.html
            </summary>
            <typeparam name="T">The type used to infer the default index and typename</typeparam>
            <param name="client"></param>
            <param name="ids">A list of ids as int</param>
            <param name="index">Optionally override the default inferred indexname for T</param>
            <param name="type">Optionally override the default inferred indexname for T</param>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.#ctor(System.Boolean)">
            <summary>
            when rest.action.multi.allow_explicit_index is set to false you can use this constructor to generate a multiget operation
            with no index and type set
            <pre>
            See also: https://github.com/elasticsearch/elasticsearch/issues/3636
            </pre>
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Index(Nest.IndexName)">
            <summary>
            Manually set the index, default to the default index or the index set for the type on the connectionsettings.
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Type(Nest.TypeName)">
            <summary>
            Manualy set the type to get the object from, default to whatever
            T will be inferred to if not passed.
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Source(System.Nullable{System.Boolean})">
            <summary>
            Control how the document's source is loaded
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Source(System.Func{Nest.SourceFilterDescriptor{`0},Nest.ISourceFilter})">
            <summary>
            Control how the document's source is loaded
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.Routing(System.String)">
            <summary>
            Set the routing for the get operation
            </summary>
        </member>
        <member name="M:Nest.MultiGetOperationDescriptor`1.StoredFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <summary>
            Allows to selectively load specific fields for each document
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="T:Nest.MultiGetRequest">
            <summary>Request parameters for Mget <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html</pre></summary>
        </member>
        <member name="M:Nest.MultiGetRequest.#ctor">
            <summary>/_mget</summary>
        </member>
        <member name="M:Nest.MultiGetRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_mget</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiGetRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_mget</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiGetRequest.StoredFields">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.MultiGetRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiGetDescriptor">
            <summary>descriptor for Mget <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html</pre></summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.#ctor">
            <summary>/_mget</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.StoredFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceExclude``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.SourceInclude``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.MultiGetDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiTermVectorsRequest">
            <summary>Request parameters for Mtermvectors <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.MultiTermVectorsRequest.#ctor">
            <summary>/_mtermvectors</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_mtermvectors</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiTermVectorsRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_mtermvectors</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.TermStatistics">
            <summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.FieldStatistics">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Fields">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Offsets">
            <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Positions">
            <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Payloads">
            <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Routing">
            <summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Parent">
            <summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Realtime">
            <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.MultiTermVectorsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiTermVectorsDescriptor">
            <summary>descriptor for Mtermvectors <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.#ctor">
            <summary>/_mtermvectors</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Index(Nest.IndexName)">
            <summary>The index in which the document resides.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Type(Nest.TypeName)">
            <summary>The type of the document.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.TermStatistics(System.Boolean)">
            <summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.FieldStatistics(System.Boolean)">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Offsets(System.Boolean)">
            <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Positions(System.Boolean)">
            <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Payloads(System.Boolean)">
            <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Routing(System.String)">
            <summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Parent(System.String)">
            <summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Realtime(System.Boolean)">
            <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.MultiTermVectorsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ReindexOnServerRequest">
            <summary>Request parameters for Reindex <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html</pre></summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.WaitForCompletion">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.RequestsPerSecond">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Slices">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ReindexOnServerRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ReindexOnServerDescriptor">
            <summary>descriptor for Reindex <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Timeout(Nest.Time)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.RequestsPerSecond(System.Int64)">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Slices(System.Int64)">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ReindexOnServerDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IReindexOnServerResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="P:Nest.ReindexOnServerResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to <c>false</c> on the request
            </summary>
        </member>
        <member name="M:Nest.ReindexRouting.#ctor(System.String)">
            <summary>
            Use ReindexRouting.Keep or ReindexRouting.Discard if you want to sent "keep" or "discard", this
            constructor always sends newRoutingValue prefixed with '='
            </summary>
        </member>
        <member name="T:Nest.ReindexRethrottleRequest">
            <summary>Request parameters for ReindexRethrottle <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.ReindexRethrottleRequest.#ctor(Nest.TaskId)">
             <summary>/_reindex/{task_id}/_rethrottle</summary>
            <param name="task_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ReindexRethrottleRequest.RequestsPerSecond">
            <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
        </member>
        <member name="P:Nest.ReindexRethrottleRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ReindexRethrottleRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ReindexRethrottleRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ReindexRethrottleRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ReindexRethrottleRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ReindexRethrottleDescriptor">
            <summary>descriptor for ReindexRethrottle <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html</pre></summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.#ctor">
            <summary>/_reindex/{task_id}/_rethrottle</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.TaskId(Nest.TaskId)">
            <summary>The task id to rethrottle</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.RequestsPerSecond(System.Int64)">
            <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ReindexRethrottleDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.ReindexObservable`2.CreateIndexIfNeeded(Nest.Indices,System.String)">
            <summary>
            Tries to create the target index if it does not exist already, if the source points to a single index we'll
            use the original index settings to bootstrap the create index request if not provided
            </summary>
            <returns>Either the number of shards from to source or the target as a slice hint to ScrollAll</returns>
        </member>
        <member name="T:Nest.IReindexRequest`2">
             <summary>
             A reindex implementation that uses ScrollAll() BulkAll() to compose a reindex pipeline.
            
             <para> This differs from ReindexOnServer() in that documents are fetched from Elasticsearch, transformed on the client side,
             then sent back to Elasticsearch.
             </para>
            
             <para> This will create the target index if it doesn't exist already. If <see cref="P:Nest.IReindexRequest`2.CreateIndexRequest" /> is not specified
             and the source of the reindex  points to a single index we try and reuse the settings from source.
             You can completely opt out of all of this using <see cref="P:Nest.IReindexRequest`2.OmitIndexCreation"/>
             </para>
            
             </summary>
        </member>
        <member name="P:Nest.IReindexRequest`2.BackPressureFactor">
            <summary>
            The scroll typically outperforms the bulk operations by a long shot. If we'd leave things unbounded you'd quickly have way too many pending scroll
            requests. What this property allows you to express is that for each bucket in the max concurrency of the minimum max concurrency between
            producer and consumer amply the maximum overal pending of the other side by this factor. Typically the concurrency of the consumer (bulkall) will
            be lower and with this factor we can dampen the overall pending scroll requests while we are still processing bulk requests.
            <para>defaults to 4 if not provided</para>
            </summary>
        </member>
        <member name="P:Nest.IReindexRequest`2.ScrollAll">
            <summary>
            Describes the scroll operation where we need to fetch the documents from.
            <para>
            Note that <see cref="P:Nest.IScrollAllRequest.BackPressure"/> can be overriden by our own.
            </para>
            </summary>
        </member>
        <member name="P:Nest.IReindexRequest`2.BulkAll">
            <summary>
            Provide a factory for the bulk all request, the first argument is the lazy collection of scroll results which is a mandatory
            argument to create <see cref="T:Nest.BulkAllRequest`1" /> or <see cref="T:Nest.BulkAllDescriptor`1"/>
            <para>
            Note that <see cref="P:Nest.IBulkAllRequest`1.BufferToBulk"/> is always overriden as well as
            <see cref="P:Nest.IBulkAllRequest`1.BackPressure"/>
            </para>
            </summary>
        </member>
        <member name="P:Nest.IReindexRequest`2.OmitIndexCreation">
            <summary>
            Do not send a create index call on the target index, assume the index has been created outside of the reindex.
            Reindex will never create the index if it already exists however this will also omit the IndexExists call.
            </summary>
        </member>
        <member name="P:Nest.IReindexRequest`2.CreateIndexRequest">
            <summary>
            Describe how the newly created index should be created. Remember you can also register Index Templates for more dynamic usecases.
            </summary>
        </member>
        <member name="T:Nest.IReindexRequest`1">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ReindexRequest`2">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ReindexRequest`2.Nest#IReindexRequest{TSource,TTarget}#ScrollAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ReindexRequest`2.Nest#IReindexRequest{TSource,TTarget}#BulkAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ReindexRequest`2.Nest#IReindexRequest{TSource,TTarget}#Map">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ReindexRequest`2.OmitIndexCreation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ReindexRequest`2.CreateIndexRequest">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ReindexRequest`2.BackPressureFactor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ReindexRequest`2.#ctor(Nest.IScrollAllRequest,System.Func{`0,`1},System.Func{System.Collections.Generic.IEnumerable{Nest.IHitMetadata{`1}},Nest.IBulkAllRequest{Nest.IHitMetadata{`1}}})">
            <inheritdoc/>
            <param name="scrollSource">The scroll operation yielding the source documents for the reindex operation</param>
            <param name="map">A function that converts from a source document to a target document</param>
            <param name="bulkAllTarget">A factory that instantiates the bulk all operation over the lazy stream of search result hits</param>
        </member>
        <member name="M:Nest.ReindexDescriptor`2.ScrollAll(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{`0},Nest.IScrollAllRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ReindexDescriptor`2.BackPressureFactor(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ReindexDescriptor`2.BulkAll(System.Func{Nest.BulkAllDescriptor{Nest.IHitMetadata{`1}},Nest.IBulkAllRequest{Nest.IHitMetadata{`1}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ReindexDescriptor`2.OmitIndexCreation(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ReindexDescriptor`2.CreateIndex(System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IScrollAllRequest.ScrollTime">
            <summary>
            The ammount of time to keep the scroll alive on the server
            </summary>
        </member>
        <member name="P:Nest.IScrollAllRequest.Search">
            <summary>
            An optional search request that describes the search we want to scroll over.
            Defaults to matchall on the index and type of T in the <see cref="T:Nest.ScrollAllObserver`1"/>.
            Note: both scroll and slice information WILL be overriden.
            </summary>
        </member>
        <member name="P:Nest.IScrollAllRequest.Slices">
            <summary>
            The maximum number of slices to partition the scroll over
            </summary>
        </member>
        <member name="P:Nest.IScrollAllRequest.MaxDegreeOfParallelism">
            <summary>
            The maximum degree of parallelism we should drain the sliced scroll, defaults to the value of <see cref="P:Nest.IScrollAllRequest.Slices"/>
            </summary>
        </member>
        <member name="P:Nest.IScrollAllRequest.BackPressure">
            <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each scroll request will additionally wait on <see cref="M:Nest.ProducerConsumerBackPressure.WaitAsync(System.Threading.CancellationToken)"/> as well as
            <see cref="P:Nest.IScrollAllRequest.MaxDegreeOfParallelism"/> if set. Not that the consumer has to call <see cref="M:Nest.ProducerConsumerBackPressure.Release"/>
            on the same instance every time it is done.
            </summary>
        </member>
        <member name="P:Nest.IScrollAllRequest.RoutingField">
            <summary>
            Set a different routing field, has to have doc_values enabled
            </summary>
        </member>
        <member name="P:Nest.ScrollAllRequest.Search">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ScrollAllRequest.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ScrollAllRequest.MaxDegreeOfParallelism">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ScrollAllRequest.BackPressure">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ScrollAllDescriptor`1.MaxDegreeOfParallelism(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ScrollAllDescriptor`1.RoutingField(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ScrollAllDescriptor`1.RoutingField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ScrollAllDescriptor`1.Search(System.Func{Nest.SearchDescriptor{`0},Nest.ISearchRequest})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ScrollAllDescriptor`1.BackPressure(System.Int32,System.Nullable{System.Int32})">
            <summary>
            Simple back pressure implementation that makes sure the minimum max concurrency between producer and consumer
            is not amplified by the greedier of the two by more then a given back pressure factor
            When set each bulk request will call <see cref="M:Nest.ProducerConsumerBackPressure.Release"/>
            </summary>
            <param name="maxConsumers">The minimum maximum concurrency which would be the bottleneck of the producer consumer pipeline</param>
            <param name="backPressureFactor">The maximum amplification back pressure of the greedier part of the producer consumer pipeline</param>
        </member>
        <member name="T:Nest.IScrollAllResponse`1">
            <summary> A response returned for each scroll in ScrollAll() </summary>
        </member>
        <member name="P:Nest.IScrollAllResponse`1.SearchResponse">
            <summary>
            The scroll result
            </summary>
        </member>
        <member name="P:Nest.IScrollAllResponse`1.Scroll">
            <summary>
            The nth scroll this response represents
            </summary>
        </member>
        <member name="P:Nest.IScrollAllResponse`1.Slice">
            <summary>
            The nth slice this response belongs to
            </summary>
        </member>
        <member name="T:Nest.ScrollAllResponse`1">
            <summary> A response returned for each scroll in ScrollAll() </summary>
        </member>
        <member name="P:Nest.ScrollAllResponse`1.SearchResponse">
            <inheritdoc />
        </member>
        <member name="P:Nest.ScrollAllResponse`1.Scroll">
            <inheritdoc />
        </member>
        <member name="P:Nest.ScrollAllResponse`1.Slice">
            <inheritdoc />
        </member>
        <member name="P:Nest.ScrollAllResponse`1.IsValid">
            <inheritdoc />
        </member>
        <member name="T:Nest.UpdateByQueryRequest">
            <summary>Request parameters for UpdateByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateByQueryRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_update_by_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateByQueryRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_update_by_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.From">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Conflicts">
            <summary>What to do when the update by query hits version conflicts?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Pipeline">
            <summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SearchTimeout">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Size">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Sort">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.TerminateAfter">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Version">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.VersionType">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.ScrollSize">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.WaitForCompletion">
            <summary>Should the request should block until the update by query operation is complete.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.RequestsPerSecond">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Slices">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.StoredFields">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.DocvalueFields">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest.TrackScores">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="T:Nest.UpdateByQueryRequest`1">
            <summary>Request parameters for UpdateByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateByQueryRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_update_by_query</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateByQueryRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_update_by_query</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.From">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Conflicts">
            <summary>What to do when the update by query hits version conflicts?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Pipeline">
            <summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SearchTimeout">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Size">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Sort">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.TerminateAfter">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Version">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.VersionType">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Refresh">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Timeout">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.ScrollSize">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.WaitForCompletion">
            <summary>Should the request should block until the update by query operation is complete.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.RequestsPerSecond">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Slices">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.StoredFields">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.DocvalueFields">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.UpdateByQueryRequest`1.TrackScores">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="T:Nest.UpdateByQueryDescriptor`1">
            <summary>descriptor for UpdateByQuery <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.#ctor(Nest.Indices)">
             <summary>/{index}/_update_by_query</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.From(System.Int64)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Conflicts(Elasticsearch.Net.Conflicts)">
            <summary>What to do when the update by query hits version conflicts?</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Pipeline(System.String)">
            <summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SearchTimeout(Nest.Time)">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Size(System.Int64)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.TerminateAfter(System.Int64)">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.VersionType(System.Boolean)">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Timeout(Nest.Time)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.ScrollSize(System.Int64)">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the update by query operation is complete.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.RequestsPerSecond(System.Int64)">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Slices(System.Int64)">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.DocvalueFields(System.String[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.DocvalueFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.UpdateByQueryDescriptor`1.TrackScores(System.Boolean)">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="P:Nest.IUpdateByQueryResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="P:Nest.UpdateByQueryResponse.Task">
            <summary>
            Only has a value if WaitForCompletion is set to false on the request
            </summary>
        </member>
        <member name="T:Nest.CreateRequest`1">
            <summary>Request parameters for Create <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html</pre></summary>
        </member>
        <member name="M:Nest.CreateRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_create</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.CreateRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_create</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.CreateRequest`1.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Parent">
            <summary>ID of the parent document</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Refresh">
            <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Timestamp">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Ttl">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Pipeline">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CreateRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CreateDescriptor`1">
            <summary>descriptor for Create <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html</pre></summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Id(Nest.Id)">
            <summary>
            Sets the id for the document. Overrides the id that may be inferred from the document.
            </summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_create</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.CreateDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_create</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Timestamp(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Ttl(Nest.Time)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Pipeline(System.String)">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CreateDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRequest">
            <summary>Request parameters for Delete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRequest.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Parent">
            <summary>ID of parent document</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Refresh">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DeleteRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRequest`1">
            <summary>Request parameters for Delete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.DeleteRequest`1.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Parent">
            <summary>ID of parent document</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Refresh">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteDescriptor`1">
            <summary>descriptor for Delete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Parent(System.String)">
            <summary>ID of parent document</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Id">
            <summary>
            The ID of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Index">
            <summary>
            The index of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Type">
            <summary>
            The type of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Version">
            <summary>
            The version of the deleted document.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Found">
            <summary>
            Whether or not the document was found and deleted from the index.
            </summary>
        </member>
        <member name="P:Nest.IDeleteResponse.Result">
            <summary>
            The operation that was performed on the document.
            </summary>
        </member>
        <member name="T:Nest.DocumentExistsRequest">
            <summary>Request parameters for Exists <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.DocumentExistsRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DocumentExistsRequest.StoredFields">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DocumentExistsRequest`1">
            <summary>Request parameters for Exists <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.DocumentExistsRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.DocumentExistsRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.StoredFields">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DocumentExistsRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DocumentExistsDescriptor`1">
            <summary>descriptor for Exists <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document (use `_all` to fetch the first document matching the ID across all types)</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DocumentExistsDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRequest">
            <summary>Request parameters for Get <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.GetRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetRequest.StoredFields">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="P:Nest.GetRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.GetRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.GetRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.GetRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.GetRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GetRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.GetRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.GetRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.GetRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.GetRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.GetRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRequest`1">
            <summary>Request parameters for Get <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.GetRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.GetRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.GetRequest`1.StoredFields">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GetRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.GetRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.GetRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.GetRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetDescriptor`1">
            <summary>descriptor for Get <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.GetDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document (use `_all` to fetch the first document matching the ID across all types)</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndexRequest`1">
            <summary>Request parameters for Index <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html</pre></summary>
        </member>
        <member name="M:Nest.IndexRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.IndexRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.IndexRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.IndexRequest`1.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.OpType">
            <summary>Explicit operation type</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Parent">
            <summary>ID of the parent document</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Refresh">
            <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Timestamp">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Ttl">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Pipeline">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.IndexRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndexDescriptor`1">
            <summary>descriptor for Index <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html</pre></summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.IndexDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Id(Nest.Id)">
            <summary>Document ID</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.OpType(Elasticsearch.Net.OpType)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Timestamp(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Ttl(Nest.Time)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Pipeline(System.String)">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.IndexDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SourceExistsRequest">
            <summary>Request parameters for ExistsSource <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceExistsRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.SourceExistsRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SourceExistsRequest`1">
            <summary>Request parameters for ExistsSource <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceExistsRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.SourceExistsRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_source</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SourceExistsRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SourceExistsDescriptor`1">
            <summary>descriptor for ExistsSource <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_source</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document; use `_all` to fetch the first document matching the ID across all types</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SourceExistsDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SourceRequest">
            <summary>Request parameters for GetSource <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceRequest.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.SourceRequest.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.SourceRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SourceRequest.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.SourceRequest.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.SourceRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SourceRequest.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.SourceRequest.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.SourceRequest.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.SourceRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SourceRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SourceRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SourceRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SourceRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SourceRequest`1">
            <summary>Request parameters for GetSource <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.SourceRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_source</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.SourceRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Realtime">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Refresh">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SourceRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SourceDescriptor`1">
            <summary>descriptor for GetSource <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html</pre></summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_source</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.SourceDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_source</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="T"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document; use `_all` to fetch the first document matching the ID across all types</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SourceDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ITermVectorFilter">
            <summary>
            Filter terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MaximumNumberOfTerms">
            <summary>
            Maximum number of terms that must be returned per field. Defaults to 25.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MinimumTermFrequency">
            <summary>
            Ignore words with less than this frequency in the source doc. Defaults to 1.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MaximumTermFrequency">
            <summary>
            Ignore words with more than this frequency in the source doc. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MinimumDocumentFrequency">
            <summary>
            Ignore terms which do not occur in at least this many docs. Defaults to 1.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MaximumDocumentFrequency">
            <summary>
            Ignore words which occur in more than this many docs. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MinimumWordLength">
            <summary>
            The minimum word length below which words will be ignored. Defaults to 0.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorFilter.MaximumWordLength">
            <summary>
            The maximum word length above which words will be ignored. Defaults to unbounded.
            </summary>
        </member>
        <member name="T:Nest.TermVectorFilter">
            <summary>
            Filter terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MaximumNumberOfTerms">
            <summary>
            Maximum number of terms that must be returned per field. Defaults to 25.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MinimumTermFrequency">
            <summary>
            Ignore words with less than this frequency in the source doc. Defaults to 1.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MaximumTermFrequency">
            <summary>
            Ignore words with more than this frequency in the source doc. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MinimumDocumentFrequency">
            <summary>
            Ignore terms which do not occur in at least this many docs. Defaults to 1.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MaximumDocumentFrequency">
            <summary>
            Ignore words which occur in more than this many docs. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MinimumWordLength">
            <summary>
            The minimum word length below which words will be ignored. Defaults to 0.
            </summary>
        </member>
        <member name="P:Nest.TermVectorFilter.MaximumWordLength">
            <summary>
            The maximum word length above which words will be ignored. Defaults to unbounded.
            </summary>
        </member>
        <member name="T:Nest.TermVectorFilterDescriptor">
            <summary>
            Filter terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MaximimumNumberOfTerms(System.Int32)">
            <summary>
            Maximum number of terms that must be returned per field. Defaults to 25.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MinimumTermFrequency(System.Int32)">
            <summary>
            Ignore words with less than this frequency in the source doc. Defaults to 1.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MaximumTermFrequency(System.Int32)">
            <summary>
            Ignore words with more than this frequency in the source doc. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MinimumDocumentFrequency(System.Int32)">
            <summary>
            Ignore terms which do not occur in at least this many docs. Defaults to 1.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MaximumDocumentFrequency(System.Int32)">
            <summary>
            Ignore words which occur in more than this many docs. Defaults to unbounded.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MinimumWordLength(System.Int32)">
            <summary>
            The minimum word length below which words will be ignored. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.TermVectorFilterDescriptor.MaximumWordLength(System.Int32)">
            <summary>
            The maximum word length above which words will be ignored. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorsRequest`1.Document">
            <summary>
            An optional document to get term vectors for instead of using an already indexed document
            </summary>
        </member>
        <member name="P:Nest.ITermVectorsRequest`1.PerFieldAnalyzer">
            <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
        </member>
        <member name="P:Nest.ITermVectorsRequest`1.Filter">
            <summary>
            Filter the terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
        </member>
        <member name="T:Nest.TermVectorsRequest`1">
            <summary>Request parameters for Termvectors <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html</pre></summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Document">
            <summary>
            An optional document to get term vectors for instead of using an already indexed document
            </summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.PerFieldAnalyzer">
            <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Filter">
            <summary>
            Filter the terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
        </member>
        <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_termvectors</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_termvectors</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.TermVectorsRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/_termvectors</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.TermStatistics">
            <summary>Specifies if total term frequency and document frequency should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.FieldStatistics">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Fields">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Offsets">
            <summary>Specifies if term offsets should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Positions">
            <summary>Specifies if term positions should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Payloads">
            <summary>Specifies if term payloads should be returned.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Routing">
            <summary>Specific routing value.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Parent">
            <summary>Parent id of documents.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Realtime">
            <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.TermVectorsRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.TermVectorsDescriptor`1">
            <summary>descriptor for Termvectors <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html</pre></summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Document(`0)">
            <summary>
            An optional document to get term vectors for instead of using an already indexed document
            </summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.PerFieldAnalyzer(System.Func{Nest.PerFieldAnalyzerDescriptor{`0},Nest.IPromise{Nest.IPerFieldAnalyzer}})">
            <summary>
            Provide a different analyzer than the one at the field.
            This is useful in order to generate term vectors in any fashion, especially when using artificial documents.
            </summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Filter(System.Func{Nest.TermVectorFilterDescriptor,Nest.ITermVectorFilter})">
            <summary>
            Filter the terms returned based on their TF-IDF scores.
            This can be useful in order find out a good characteristic vector of a document.
            </summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_termvectors</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/_termvectors</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Index(Nest.IndexName)">
            <summary>The index in which the document resides.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Id(Nest.Id)">
            <summary>The id of the document, when not specified a doc param should be supplied.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.TermStatistics(System.Boolean)">
            <summary>Specifies if total term frequency and document frequency should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.FieldStatistics(System.Boolean)">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Fields(System.String[])">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Fields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Offsets(System.Boolean)">
            <summary>Specifies if term offsets should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Positions(System.Boolean)">
            <summary>Specifies if term positions should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Payloads(System.Boolean)">
            <summary>Specifies if term payloads should be returned.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Parent(System.String)">
            <summary>Parent id of documents.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Realtime(System.Boolean)">
            <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.TermVectorsDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IUpdateRequest`2.ScriptedUpsert">
            <summary>
            If you would like your script to run regardless of whether the document exists or not — i.e. the script handles
            initializing the document instead of the upsert element — then set scripted_upsert to true
            </summary>
        </member>
        <member name="T:Nest.UpdateRequest`2">
            <summary>Request parameters for Update <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html</pre></summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Script">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UpdateRequest`2.Upsert">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UpdateRequest`2.DocAsUpsert">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UpdateRequest`2.Doc">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UpdateRequest`2.DetectNoop">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UpdateRequest`2.ScriptedUpsert">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UpdateRequest`2.Fields">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UpdateRequest`2.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_update</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateRequest`2.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_update</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.UpdateRequest`2.WaitForActiveShards">
            <summary>Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Lang">
            <summary>The script language (default: painless)</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Parent">
            <summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Refresh">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.RetryOnConflict">
            <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Timestamp">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Ttl">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.UpdateRequest`2.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpdateDescriptor`2">
            <summary>descriptor for Update <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Upsert(`0)">
            <summary>
            The full document to be created if an existing document does not exist for a partial merge.
            </summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Doc(`1)">
            <summary>
            The partial update document to be merged on to the existing object.
            </summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_update</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_update</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Lang(System.String)">
            <summary>The script language (default: painless)</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Parent(System.String)">
            <summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.RetryOnConflict(System.Int64)">
            <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Timestamp(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Ttl(Nest.Time)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.UpdateDescriptor`2.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.ExpungeDeletesAllowed">
            <summary>
            When expungeDeletes is called, we only merge away a segment if its delete percentage 
            is over this threshold. Default is 10. 
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.FloorSegment">
            <summary>
            Segments smaller than this are "rounded up" to this size, i.e. treated as equal (floor) size for merge selection. 
            This is to prevent frequent flushing of tiny segments, thus preventing a long tail in the index. Default is 2mb.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.MaxMergeAtOnce">
            <summary>
            Maximum number of segments to be merged at a time during "normal" merging. Default is 10.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.MaxMergeAtOnceExplicit">
            <summary>
            Maximum number of segments to be merged at a time, during optimize or expungeDeletes. Default is 30.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.MaxMergedSegment">
            <summary>
            Maximum sized segment to produce during normal merging (not explicit optimize).
            This setting is approximate: the estimate of the merged segment size is made by summing 
            sizes of to-be-merged segments (compensating for percent deleted docs). Default is 5gb.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.SegmentsPerTier">
            <summary>
            Sets the allowed number of segments per tier. Smaller values mean more merging but fewer segments. 
            Default is 10. Note, this value needs to be >= than the max_merge_at_once otherwise you’ll force too 
            many merges to occur.
            </summary>
        </member>
        <member name="P:Nest.IMergePolicySettings.ReclaimDeletesWeight">
            <summary>
            Controls how aggressively merges that reclaim more deletions are favored. Higher values 
            favor selecting merges that reclaim deletions. A value of 0.0 means deletions don’t 
            impact merge selection. Defaults to 2.0
            </summary>
        </member>
        <member name="P:Nest.MergePolicySettings.ExpungeDeletesAllowed">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.FloorSegment">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.MaxMergeAtOnce">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.MaxMergeAtOnceExplicit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.MaxMergedSegment">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.ReclaimDeletesWeight">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergePolicySettings.SegmentsPerTier">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.ExpungeDeletesAllowed(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.FloorSegment(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergeAtOnce(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergeAtOnceExplicit(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.MaxMergedSegement(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.ReclaimDeletesWeight(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergePolicySettingsDescriptor.SegmentsPerTier(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IMergeSchedulerSettings.MaxThreadCount">
            <summary>
            The maximum number of threads that may be merging at once. Defaults to 
            <pre>Math.max(1, Math.min(4, Runtime.getRuntime().availableProcessors() / 2))</pre>
            which works well for a good solid-state-disk (SSD). If your index is on spinning platter drives instead,
            decrease this to 1. 
            </summary>
        </member>
        <member name="P:Nest.IMergeSchedulerSettings.AutoThrottle">
            <summary>
            If this is true (the default), then the merge scheduler will rate-limit IO (writes) for merges to an 
            adaptive value depending on how many merges are requested over time. An application with a low indexing rate 
            that unluckily suddenly requires a large merge will see that merge aggressively throttled, 
            while an application doing heavy indexing will see the throttle move higher to allow merges to keep 
            up with ongoing indexing.
            </summary>
        </member>
        <member name="P:Nest.MergeSchedulerSettings.AutoThrottle">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergeSchedulerSettings.MaxThreadCount">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSchedulerSettingsDescriptor.AutoThrottle(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSchedulerSettingsDescriptor.MaxThreadCount(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergeSettings.Policy">
            <inheritdoc/>
        </member>
        <member name="P:Nest.MergeSettings.Scheduler">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSettingsDescriptor.Policy(System.Func{Nest.MergePolicySettingsDescriptor,Nest.IMergePolicySettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.MergeSettingsDescriptor.Scheduler(System.Func{Nest.MergeSchedulerSettingsDescriptor,Nest.IMergeSchedulerSettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IQueriesCacheSettings.Enabled">
            <summary>
            Whether the query cache is enabled. <c>True</c> by default.
            </summary>
        </member>
        <member name="M:Nest.QueriesCacheSettingsDescriptor.Enabled(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.QueriesSettingsDescriptor.Cache(System.Func{Nest.QueriesCacheSettingsDescriptor,Nest.IQueriesCacheSettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AutoExpandReplicas.Enabled">
            <summary>
            Whether auto expand replicas is enabled
            </summary>
        </member>
        <member name="P:Nest.AutoExpandReplicas.MinReplicas">
            <summary>
            The lower bound of replicas
            </summary>
        </member>
        <member name="P:Nest.AutoExpandReplicas.MaxReplicas">
            <summary>
            The upper bound of replicas. Can be an integer value or a string value of "all"
            </summary>
        </member>
        <member name="M:Nest.AutoExpandReplicas.Create(System.Int32,System.Int32)">
            <summary>
            Creates an <see cref="T:Nest.AutoExpandReplicas"/> with the specified lower and upper bounds of replicas
            </summary>
        </member>
        <member name="M:Nest.AutoExpandReplicas.Create(System.Int32)">
            <summary>
            Creates an <see cref="T:Nest.AutoExpandReplicas"/> with the specified lower bound of replicas and an
            "all" upper bound of replicas
            </summary>
        </member>
        <member name="M:Nest.AutoExpandReplicas.Create(System.String)">
            <summary>
            Creates an <see cref="T:Nest.AutoExpandReplicas"/> with the specified lower and upper bounds of replicas
            </summary>
            <example>0-5</example>
            <example>0-all</example>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.NumberOfReplicas">
             <summary>
            The number of replicas each primary shard has. Defaults to 1.
             </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.AutoExpandReplicas">
             <summary>
            Auto-expand the number of replicas based on the number of available nodes.
             Set to a dash delimited lower and upper bound (e.g. 0-5) or use all for the upper bound (e.g. 0-all). Defaults to false (i.e. disabled).
             </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RefreshInterval">
            <summary>
            How often to perform a refresh operation, which makes recent changes to the index visible to search.
            Defaults to 1s. Can be set to -1 to disable refresh.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksReadOnly">
            <summary>
            Set to true to make the index and index metadata read only, false to allow writes and metadata changes.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksRead">
            <summary>
            Set to true to disable read operations against the index.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksWrite">
            <summary>
            Set to true to disable write operations against the index.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.BlocksMetadata">
            <summary>
            Set to true to disable index metadata reads and writes.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Priority">
            <summary>
            Unallocated shards are recovered in order of priority when set
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RecoveryInitialShards">
            <summary>
            A primary shard is only recovered only if there are
            enough nodes available to allocate sufficient replicas to form a quorum.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RequestsCacheEnabled">
            <summary>
            Enables the shard-level request cache. Not enabled by default.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.UnassignedNodeLeftDelayedTimeout">
            <summary>
            The allocation of replica shards which become unassigned because a node has left can be
            delayed with this dynamic setting, which defaults to 1m.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.RoutingAllocationTotalShardsPerNode">
            <summary>
            The maximum number of shards (replicas and primaries) that will be allocated to a single node. Defaults to unbounded.
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Merge">
            <summary>
            All of the settings exposed in the merge module are expert only and may be obsoleted in the future at any time!
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.SlowLog">
            <summary>
            Configure logging thresholds and levels in elasticsearch for search/fetch and indexing
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Translog">
            <summary>
            Configure translog settings. This should only be used by experts who know what they're doing
            </summary>
        </member>
        <member name="P:Nest.IDynamicIndexSettings.Analysis">
            <summary>
            Configure analysis
            </summary>
        </member>
        <member name="P:Nest.DynamicIndexSettings.NumberOfReplicas">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.AutoExpandReplicas">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksMetadata">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksRead">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.BlocksWrite">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Priority">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RequestsCacheEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Merge">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RecoveryInitialShards">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RefreshInterval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.RoutingAllocationTotalShardsPerNode">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.SlowLog">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Translog">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.UnassignedNodeLeftDelayedTimeout">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DynamicIndexSettings.Analysis">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettings.Add(System.String,System.Object)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Setting(System.String,System.Object)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.NumberOfReplicas(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.AutoExpandReplicas(Nest.AutoExpandReplicas)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksMetadata(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksRead(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksReadOnly(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.BlocksWrite(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Priority(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Merge(System.Func{Nest.MergeSettingsDescriptor,Nest.IMergeSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RecoveryInitialShards(Nest.Union{System.Int32,Nest.RecoveryInitialShards})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RequestsCacheEnabled(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.RefreshInterval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.TotalShardsPerNode(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.SlowLog(System.Func{Nest.SlowLogDescriptor,Nest.ISlowLog})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.Translog(System.Func{Nest.TranslogSettingsDescriptor,Nest.ITranslogSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DynamicIndexSettingsDescriptorBase`2.UnassignedNodeLeftDelayedTimeout(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FixedIndexSettings">
            <summary>
            const string collection of known Elasticsearch index settings that can only be provided at
            index creation time
            </summary>
        </member>
        <member name="P:Nest.IIndexSettings.NumberOfShards">
            <summary>
            The number of primary shards that an index should have. Defaults to 5.
            This setting can only be set at index creation time. It cannot be changed on a closed index.
            </summary>
        </member>
        <member name="P:Nest.IIndexSettings.RoutingPartitionSize">
            <summary>
            By defaulting, routing resolves to a single shard. Use this settings to have it resolve to a set of shards instead.
            This mitigates creating hotspots and very large shards if you have a few routing keys generating the significant data.
            <pre>Added in Elasticsearch 5.3.0</pre>
            </summary>
        </member>
        <member name="P:Nest.IIndexSettings.FileSystemStorageImplementation">
            <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            <para>EXPERT MODE toggle</para>
            </summary>
        </member>
        <member name="P:Nest.IIndexSettings.Queries">
            <summary>
            Settings associated with queries.
            </summary>
        </member>
        <member name="T:Nest.IndexSettings">
            <inheritdoc />
        </member>
        <member name="P:Nest.IndexSettings.NumberOfShards">
            <inheritdoc />
        </member>
        <member name="P:Nest.IndexSettings.RoutingPartitionSize">
            <inheritdoc />
        </member>
        <member name="P:Nest.IndexSettings.FileSystemStorageImplementation">
            <inheritdoc />
        </member>
        <member name="P:Nest.IndexSettings.Queries">
            <inheritdoc />
        </member>
        <member name="T:Nest.IndexSettingsDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.IndexSettingsDescriptor.NumberOfShards(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Nest.IndexSettingsDescriptor.RoutingPartitionSize(System.Nullable{System.Int32})">
            <inheritdoc />
        </member>
        <member name="M:Nest.IndexSettingsDescriptor.FileSystemStorageImplementation(System.Nullable{Nest.FileSystemStorageImplementation})">
            <inheritdoc />
        </member>
        <member name="T:Nest.UpdatableIndexSettings">
            <summary>
            const string collection of Elasticsearch index settings that can be updated on the fly
            </summary>
        </member>
        <member name="P:Nest.SlowLog.Indexing">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SlowLog.Search">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogDescriptor.Search(System.Func{Nest.SlowLogSearchDescriptor,Nest.ISlowLogSearch})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogDescriptor.Indexing(System.Func{Nest.SlowLogIndexingDescriptor,Nest.ISlowLogIndexing})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.LogLevel(System.Nullable{Nest.LogLevel})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.Source(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdDebug(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdInfo(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdTrace(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogIndexingDescriptor.ThresholdWarn(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchDescriptor.LogLevel(System.Nullable{Nest.LogLevel})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchDescriptor.Query(System.Func{Nest.SlowLogSearchQueryDescriptor,Nest.ISlowLogSearchQuery})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchDescriptor.Fetch(System.Func{Nest.SlowLogSearchFetchDescriptor,Nest.ISlowLogSearchFetch})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdDebug(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdInfo(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdTrace(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchFetchDescriptor.ThresholdWarn(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdDebug(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdInfo(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdTrace(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.SlowLogSearchQueryDescriptor.ThresholdWarn(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FileSystemStorageImplementation">
            <summary>
            The store module allows you to control how index data is stored and accessed on disk.
            </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.Simple">
             <summary>
            The Simple FS type is a straightforward implementation of file system storage (maps to 
             Lucene SimpleFsDirectory) using a random access file. This implementation has poor 
             concurrent performance (multiple threads will bottleneck). It is usually better to use
              the niofs when you need index persistence. 
             </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.NIO">
            <summary>
            The NIO FS type stores the shard index on the file system (maps to Lucene NIOFSDirectory)
            using NIO. It allows multiple threads to read from the same file concurrently. It is not 
            recommended on Windows because of a bug in the SUN Java implementation./
            </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.MMap">
             <summary>
            The MMap FS type stores the shard index on the file system (maps to Lucene MMapDirectory) 
             by mapping a file into memory (mmap). Memory mapping uses up a portion of the virtual memory
              address space in your process equal to the size of the file being mapped. Before using this class,
              be sure you have allowed plenty of virtual address space.
             </summary>
        </member>
        <member name="F:Nest.FileSystemStorageImplementation.Default">
            <summary>
            The default type is a hybrid of NIO FS and MMapFS, which chooses the best file system for each
            type of file. Currently only the Lucene term dictionary and doc values files are memory mapped to 
            reduce the impact on the operating system. All other files are opened using Lucene NIOFSDirectory.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.ThresholdSize">
            <summary>
            Once the translog hits this size, a flush will happen. Defaults to 512mb.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.ThresholdPeriod">
            <summary>
            How long to wait before triggering a flush regardless of translog size. Defaults to 30m.
            </summary>
        </member>
        <member name="P:Nest.ITranslogFlushSettings.Interval">
            <summary>
            How often to check if a flush is needed, randomized between
            the interval value and 2x the interval value. Defaults to 5s.
            </summary>
        </member>
        <member name="P:Nest.TranslogFlushSettings.Interval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogFlushSettings.ThresholdPeriod">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogFlushSettings.ThresholdSize">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdSize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.ThresholdPeriod(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogFlushSettingsDescriptor.Interval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ITranslogSettings.Flush">
            <summary>
            Dynamically updatable flush settings
            </summary>
        </member>
        <member name="P:Nest.ITranslogSettings.SyncInterval">
            <summary>
            How often the translog is fsynced to disk and committed, regardless of write operations. Defaults to 5s.
            </summary>
        </member>
        <member name="P:Nest.ITranslogSettings.Durability">
            <summary>
            Whether or not to fsync and commit the translog after every index, delete, update, or bulk request
            </summary>
        </member>
        <member name="P:Nest.TranslogSettings.Flush">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogSettings.SyncInterval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TranslogSettings.Durability">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.Flush(System.Func{Nest.TranslogFlushSettingsDescriptor,Nest.ITranslogFlushSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.Durability(System.Nullable{Nest.TranslogDurability})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TranslogSettingsDescriptor.SyncInterval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IBM25Similarity">
            <summary>
            BM25 Similarity. Introduced in Stephen E. Robertson, Steve Walker, Susan Jones, Micheline Hancock-Beaulieu, 
            and Mike Gatford. Okapi at TREC-3. In Proceedings of the Third Text REtrieval Conference (TREC 1994). Gaithersburg, USA, November 1994.
            </summary>
        </member>
        <member name="P:Nest.IBM25Similarity.B">
            <summary>
            Controls to what degree document length normalizes tf values.
            </summary>
        </member>
        <member name="P:Nest.IBM25Similarity.DiscountOverlaps">
            <summary>
            Sets whether overlap tokens (Tokens with 0 position increment) are ignored when computing norm.
            </summary>
        </member>
        <member name="P:Nest.IBM25Similarity.K1">
             <summary>
            Controls non-linear term frequency normalization (saturation).
             </summary>
        </member>
        <member name="T:Nest.BM25Similarity">
            <inheritdoc/>
        </member>
        <member name="P:Nest.BM25Similarity.K1">
            <inheritdoc/>
        </member>
        <member name="P:Nest.BM25Similarity.B">
            <inheritdoc/>
        </member>
        <member name="P:Nest.BM25Similarity.DiscountOverlaps">
            <inheritdoc/>
        </member>
        <member name="T:Nest.BM25SimilarityDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.BM25SimilarityDescriptor.DiscountOverlaps(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.BM25SimilarityDescriptor.K1(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.BM25SimilarityDescriptor.B(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CustomSimilarity">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CustomSimilarityDescriptor">
            <inheritdoc/>
        </member>
        <member name="F:Nest.DFRAfterEffect.No">
            <summary>
            Implementation used when there is no aftereffect.
            </summary>
        </member>
        <member name="F:Nest.DFRAfterEffect.B">
            <summary>
            Model of the information gain based on the ratio of two Bernoulli processes.
            </summary>
        </member>
        <member name="F:Nest.DFRAfterEffect.L">
            <summary>
            Model of the information gain based on Laplace's law of succession.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.BE">
            <summary>
            Limiting form of the Bose-Einstein model. The formula used in Lucene differs slightly from the one in the original paper: F is increased by tfn+1 and N is increased by F
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.D">
            <summary>
            Implements the approximation of the binomial model with the divergence for DFR. 
            The formula used in Lucene differs slightly from the one in the original paper: to avoid underflow for small values of N and F, N is increased by 1 and F is always increased by tfn+1.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.G">
             <summary>
            Geometric as limiting form of the Bose-Einstein model. The formula used in Lucene differs slightly from the one in the original paper: F is increased by 1 and N is increased by F.
             </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.IF">
            <summary>
            An approximation of the I(ne) model.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.IN">
            <summary>
            The basic tf-idf model of randomness.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.INE">
            <summary>
            Tf-idf model of randomness, based on a mixture of Poisson and inverse document frequency.
            </summary>
        </member>
        <member name="F:Nest.DFRBasicModel.P">
            <summary>
            Implements the Poisson approximation for the binomial model for DFR.
            </summary>
        </member>
        <member name="T:Nest.IDFRSimilarity">
            <summary>
            Implements the divergence from randomness (DFR) framework introduced in Gianni Amati and Cornelis Joost Van Rijsbergen. 2002.
            Probabilistic models of information retrieval based on measuring the divergence from randomness. ACM Trans. Inf. Syst. 20, 4 (October 2002), 357-389.
            The DFR scoring formula is composed of three separate components: the basic model, the aftereffect and an additional normalization component,
            represented by the classes BasicModel, AfterEffect and Normalization, respectively.The names of these classes were chosen to match the names of their counterparts in the Terrier IR engine.
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationH1C">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationH2C">
            <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationH3C">
            <summary>
             Dirichlet Priors normalization
            </summary>
        </member>
        <member name="P:Nest.IDFRSimilarity.NormalizationZZ">
            <summary>
            Pareto-Zipf Normalization
            </summary>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH1(System.Nullable{System.Double})">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH2(System.Nullable{System.Double})">
            <summary>
            Normalization model in which the term frequency is inversely related to the length.
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationH3(System.Nullable{System.Double})">
            <summary>
            Dirichlet Priors normalization
            </summary>
            <param name="mu">smoothing parameter μ.</param>
        </member>
        <member name="M:Nest.DFRSimilarityDescriptor.NormalizationZ(System.Nullable{System.Double})">
            <summary>
            Pareto-Zipf Normalization
            </summary>
            <param name="z">represents A/(A+1) where A measures the specificity of the language..</param>
        </member>
        <member name="F:Nest.IBLambda.DocumentFrequency">
            <summary>
            Nw/N or average number of documents where w occurs
            </summary>
        </member>
        <member name="F:Nest.IBLambda.TermFrequency">
            <summary>
            Fw/N or average number of occurrences of w in the collection
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationH1C">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationH2C">
            <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationH3C">
            <summary>
             Dirichlet Priors normalization
            </summary>
        </member>
        <member name="P:Nest.IIBSimilarity.NormalizationZZ">
            <summary>
            Pareto-Zipf Normalization
            </summary>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationH1(System.Nullable{System.Double})">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency.
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationH2(System.Nullable{System.Double})">
            <summary>
            Normalization model in which the term frequency is inversely related to the length.
            </summary>
            <param name="c">hyper-parameter that controls the term frequency normalization with respect to the document length.</param>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationH3(System.Nullable{System.Double})">
            <summary>
            Dirichlet Priors normalization
            </summary>
            <param name="mu">smoothing parameter μ.</param>
        </member>
        <member name="M:Nest.IBSimilarityDescriptor.NormalizationZ(System.Nullable{System.Double})">
            <summary>
            Pareto-Zipf Normalization
            </summary>
            <param name="z">represents A/(A+1) where A measures the specificity of the language..</param>
        </member>
        <member name="F:Nest.Normalization.No">
            <summary>
            Implementation used when there is no normalization. 
            </summary>
        </member>
        <member name="F:Nest.Normalization.H1">
            <summary>
            Normalization model that assumes a uniform distribution of the term frequency. 
            </summary>
        </member>
        <member name="F:Nest.Normalization.H2">
            <summary>
             Normalization model in which the term frequency is inversely related to the length.
            </summary>
        </member>
        <member name="F:Nest.Normalization.H3">
            <summary>
            Dirichlet Priors normalization
            </summary>
        </member>
        <member name="F:Nest.Normalization.Z">
            <summary>
            Pareto-Zipf Normalization
            </summary>
        </member>
        <member name="M:Nest.Similarities.Add(System.String,Nest.ISimilarity)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.Aliases.Add(Nest.IndexName,Nest.IAlias)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="T:Nest.AliasExistsRequest">
            <summary>Request parameters for IndicesExistsAliasForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Names)">
             <summary>/_alias/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.AliasExistsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_alias</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.AliasExistsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.AliasExistsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.AliasExistsDescriptor">
            <summary>descriptor for IndicesExistsAliasForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.#ctor">
            <summary>/_alias/{name}</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to return</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.AliasExistsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IAliasAction">
            <summary>
            Marker interface for alias operation
            </summary>
        </member>
        <member name="T:Nest.BulkAliasRequest">
            <summary>Request parameters for IndicesUpdateAliasesForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.Timeout">
            <summary>Request timeout</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.BulkAliasRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.BulkAliasDescriptor">
            <summary>descriptor for IndicesUpdateAliasesForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.Timeout(Nest.Time)">
            <summary>Request timeout</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.BulkAliasDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteAliasRequest">
            <summary>Request parameters for IndicesDeleteAlias <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteAliasRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">this parameter is required</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteAliasRequest.Timeout">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteAliasRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteAliasDescriptor">
            <summary>descriptor for IndicesDeleteAlias <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names (supports wildcards); use `_all` for all indices</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Timeout(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteAliasDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.AliasPointingToIndexExtensions.GetAliasesPointingToIndex(Nest.IElasticClient,Nest.Indices)">
            <summary>
            Returns a collection of aliases that point to the specified index, simplified version of GetAlias.
            </summary>
            <param name="client">The client</param>
            <param name="indices">The index name(s) we want to know aliases of</param>
        </member>
        <member name="M:Nest.AliasPointingToIndexExtensions.GetAliasesPointingToIndexAsync(Nest.IElasticClient,Nest.Indices)">
            <summary>
            Returns a collection of aliases that point to the specified index, simplified version of GetAlias.
            </summary>
            <param name="client">The client</param>
            <param name="indices">The index name(s) we want to know aliases of</param>
        </member>
        <member name="T:Nest.IndicesPointingToAliasExtensions">
            <summary>
            Implements several handy alias extensions.
            </summary>
        </member>
        <member name="M:Nest.IndicesPointingToAliasExtensions.GetIndicesPointingToAlias(Nest.IElasticClient,Nest.Names)">
            <summary>
            Returns a collection of indices that have the specified alias(es) applied to them. Simplified version of GetAlias.
            </summary>
            <param name="client">The client</param>
            <param name="alias">The alias name(s)</param>
        </member>
        <member name="M:Nest.IndicesPointingToAliasExtensions.GetIndicesPointingToAliasAsync(Nest.IElasticClient,Nest.Names)">
            <summary>
            Returns a collection of indices that have the specified alias(es) applied to them. Simplified version of GetAlias.
            </summary>
            <param name="client">The client</param>
            <param name="alias">The alias name(s)</param>
        </member>
        <member name="T:Nest.GetAliasRequest">
            <summary>Request parameters for IndicesGetAliasForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor">
            <summary>/_alias</summary>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor(Nest.Names)">
             <summary>/_alias/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetAliasRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_alias</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetAliasRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetAliasRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetAliasDescriptor">
            <summary>descriptor for IndicesGetAliasForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.#ctor">
            <summary>/_alias</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to filter aliases</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Name(Nest.Names)">
            <summary>A comma-separated list of alias names to return</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetAliasDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IGetAliasResponse.Error">
            <summary>
            An additional error message if an error occurs.
            </summary>
            <remarks>Applies to Elasticsearch 5.5.0+</remarks>
        </member>
        <member name="T:Nest.PutAliasRequest">
            <summary>Request parameters for IndicesPutAlias <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.PutAliasRequest.#ctor(Nest.Indices,Nest.Name)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index">this parameter is required</param>		
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutAliasRequest.Timeout">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutAliasRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutAliasDescriptor">
            <summary>descriptor for IndicesPutAlias <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html</pre></summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.#ctor(Nest.Indices,Nest.Name)">
             <summary>/{index}/_alias/{name}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Timeout(Nest.Time)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutAliasDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IAnalyzeRequest.Analyzer">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="P:Nest.IAnalyzeRequest.CharFilter">
            <summary>A collection of character filters to use for the analysis</summary>
        </member>
        <member name="P:Nest.IAnalyzeRequest.Filter">
            <summary>A collection of filters to use for the analysis</summary>
        </member>
        <member name="P:Nest.IAnalyzeRequest.Field">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="P:Nest.IAnalyzeRequest.Text">
            <summary>The text on which the analysis should be performed (when request body is not used)</summary>
        </member>
        <member name="P:Nest.IAnalyzeRequest.Tokenizer">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="T:Nest.AnalyzeRequest">
            <summary>Request parameters for IndicesAnalyzeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html</pre></summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Analyzer">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.CharFilter">
            <summary>A collection of character filters to use for the analysis</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Filter">
            <summary>A collection of filters to use for the analysis</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Field">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Text">
            <summary>The text on which the analysis should be performed</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Tokenizer">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeRequest.#ctor">
            <summary>/_analyze</summary>
        </member>
        <member name="M:Nest.AnalyzeRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_analyze</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.AnalyzeRequest.PreferLocal">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Explain">
            <summary>With `true`, outputs more advanced details. (default: false)</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Attributes">
            <summary>A comma-separated list of token attributes to output, this parameter works only with `explain=true`</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Format">
            <summary>Format of the output</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.AnalyzeRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.AnalyzeDescriptor">
            <summary>descriptor for IndicesAnalyzeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html</pre></summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Analyzer(System.String)">
            <summary>The name of the analyzer to use</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.CharFilter(System.String[])">
            <summary>A collection of character filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.CharFilter(System.Collections.Generic.IEnumerable{System.String})">
            <summary>A collection of character filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Filter(System.String[])">
            <summary>A collection of filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Filter(System.Collections.Generic.IEnumerable{System.String})">
            <summary>A collection of filters to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Field(Nest.Field)">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Field``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Use the analyzer configured for this field (instead of passing the analyzer name)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Text(System.String[])">
            <summary>The text on which the analysis should be performed</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Text(System.Collections.Generic.IEnumerable{System.String})">
            <summary>The text on which the analysis should be performed</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Tokenizer(System.String)">
            <summary>The name of the tokenizer to use for the analysis</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.#ctor">
            <summary>/_analyze</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Index(Nest.IndexName)">
            <summary>The name of the index to scope the operation</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Explain(System.Boolean)">
            <summary>With `true`, outputs more advanced details. (default: false)</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Attributes(System.String[])">
            <summary>A comma-separated list of token attributes to output, this parameter works only with `explain=true`</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Format(Elasticsearch.Net.Format)">
            <summary>Format of the output</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.AnalyzeDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CreateIndexRequest">
            <summary>Request parameters for IndicesCreate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html</pre></summary>
        </member>
        <member name="M:Nest.CreateIndexRequest.#ctor(Nest.IndexName)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.CreateIndexRequest.WaitForActiveShards">
            <summary>Set the number of active shards to wait for before the operation returns.</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.UpdateAllTypes">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CreateIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CreateIndexDescriptor">
            <summary>descriptor for IndicesCreate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html</pre></summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.#ctor(Nest.IndexName)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.WaitForActiveShards(System.String)">
            <summary>Set the number of active shards to wait for before the operation returns.</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.UpdateAllTypes(System.Boolean)">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CreateIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteIndexRequest">
            <summary>Request parameters for IndicesDelete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteIndexDescriptor">
            <summary>descriptor for IndicesDelete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetIndexRequest">
            <summary>Request parameters for IndicesGet <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.GetIndexRequest.#ctor(Nest.Indices,Nest.Features)">
             <summary>/{index}/{feature}</summary>
            <param name="index">this parameter is required</param>		
            <param name="feature">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetIndexRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.IgnoreUnavailable">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.AllowNoIndices">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.ExpandWildcards">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.IncludeDefaults">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetIndexDescriptor">
            <summary>descriptor for IndicesGet <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Feature(Nest.Features)">
            <summary>A comma-separated list of features</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndexExistsRequest">
            <summary>Request parameters for IndicesExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html</pre></summary>
        </member>
        <member name="M:Nest.IndexExistsRequest.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.IndexExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.IgnoreUnavailable">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.AllowNoIndices">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.ExpandWildcards">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.IncludeDefaults">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.IndexExistsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndexExistsDescriptor">
            <summary>descriptor for IndicesExists <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html</pre></summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.IndexExistsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CloseIndexRequest">
            <summary>Request parameters for IndicesClose <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.CloseIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_close</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.CloseIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CloseIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CloseIndexDescriptor">
            <summary>descriptor for IndicesClose <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}/_close</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma separated list of indices to close</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CloseIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.OpenIndexRequest">
            <summary>Request parameters for IndicesOpen <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.OpenIndexRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_open</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="P:Nest.OpenIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.OpenIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.OpenIndexDescriptor">
            <summary>descriptor for IndicesOpen <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html</pre></summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.#ctor(Nest.Indices)">
             <summary>/{index}/_open</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Index(Nest.Indices)">
            <summary>A comma separated list of indices to open</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.OpenIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RolloverIndexRequest">
            <summary>Request parameters for IndicesRolloverForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html</pre></summary>
        </member>
        <member name="M:Nest.RolloverIndexRequest.#ctor(Nest.Name)">
             <summary>/{alias}/_rollover</summary>
            <param name="alias">this parameter is required</param>
        </member>
        <member name="M:Nest.RolloverIndexRequest.#ctor(Nest.Name,Nest.IndexName)">
             <summary>/{alias}/_rollover/{new_index}</summary>
            <param name="alias">this parameter is required</param>		
            <param name="new_index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RolloverIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.DryRun">
            <summary>If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.WaitForActiveShards">
            <summary>Set the number of active shards to wait for on the newly created rollover index before the operation returns.</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RolloverIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RolloverIndexDescriptor">
            <summary>descriptor for IndicesRolloverForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html</pre></summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.#ctor(Nest.Name)">
             <summary>/{alias}/_rollover</summary>
            <param name="alias"> this parameter is required</param>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.NewIndex(Nest.IndexName)">
            <summary>The name of the rollover index</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.DryRun(System.Boolean)">
            <summary>If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.WaitForActiveShards(System.String)">
            <summary>Set the number of active shards to wait for on the newly created rollover index before the operation returns.</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RolloverIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ShrinkIndexRequest">
            <summary>Request parameters for IndicesShrink <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html</pre></summary>
        </member>
        <member name="M:Nest.ShrinkIndexRequest.#ctor(Nest.IndexName,Nest.IndexName)">
             <summary>/{index}/_shrink/{target}</summary>
            <param name="index">this parameter is required</param>		
            <param name="target">this parameter is required</param>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.WaitForActiveShards">
            <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ShrinkIndexRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ShrinkIndexDescriptor">
            <summary>descriptor for IndicesShrink <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html</pre></summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.#ctor(Nest.IndexName,Nest.IndexName)">
             <summary>/{index}/_shrink/{target}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="target"> this parameter is required</param>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.Index(Nest.IndexName)">
            <summary>The name of the source index to shrink</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.WaitForActiveShards(System.String)">
            <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ShrinkIndexDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.TypeExistsRequest">
            <summary>Request parameters for IndicesExistsType <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html</pre></summary>
        </member>
        <member name="M:Nest.TypeExistsRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/_mapping/{type}</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="P:Nest.TypeExistsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.TypeExistsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.TypeExistsDescriptor">
            <summary>descriptor for IndicesExistsType <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html</pre></summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/_mapping/{type}</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use `_all` to check the types across all indices</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to check</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.TypeExistsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetIndexSettingsRequest">
            <summary>Request parameters for IndicesGetSettingsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_settings</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Indices,Nest.Names)">
             <summary>/{index}/_settings/{name}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetIndexSettingsRequest.#ctor(Nest.Names)">
             <summary>/_settings/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.IncludeDefaults">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetIndexSettingsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetIndexSettingsDescriptor">
            <summary>descriptor for IndicesGetSettingsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Name(Nest.Names)">
            <summary>The name of the settings that should be included</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetIndexSettingsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteIndexTemplateRequest">
            <summary>Request parameters for IndicesDeleteTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateRequest.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteIndexTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteIndexTemplateDescriptor">
            <summary>descriptor for IndicesDeleteTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteIndexTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetIndexTemplateRequest">
            <summary>Request parameters for IndicesGetTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexTemplateRequest.#ctor">
            <summary>/_template</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateRequest.#ctor(Nest.Names)">
             <summary>/_template/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetIndexTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetIndexTemplateDescriptor">
            <summary>descriptor for IndicesGetTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.#ctor">
            <summary>/_template</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Name(Nest.Names)">
            <summary>The comma separated names of the index templates</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetIndexTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndexTemplateExistsRequest">
            <summary>Request parameters for IndicesExistsTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsRequest.#ctor(Nest.Names)">
             <summary>/_template/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.IndexTemplateExistsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndexTemplateExistsDescriptor">
            <summary>descriptor for IndicesExistsTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.#ctor(Nest.Names)">
             <summary>/_template/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.IndexTemplateExistsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutIndexTemplateRequest">
            <summary>Request parameters for IndicesPutTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.PutIndexTemplateRequest.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Create">
            <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutIndexTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutIndexTemplateDescriptor">
            <summary>descriptor for IndicesPutTemplateForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html</pre></summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.#ctor(Nest.Name)">
             <summary>/_template/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Create(System.Boolean)">
            <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutIndexTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpdateIndexSettingsRequest">
            <summary>Request parameters for IndicesPutSettingsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsRequest.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_settings</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.PreserveExisting">
            <summary>Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.FlatSettings">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.UpdateIndexSettingsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpdateIndexSettingsDescriptor">
            <summary>descriptor for IndicesPutSettingsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html</pre></summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.IndexSettings(System.Func{Nest.DynamicIndexSettingsDescriptor,Nest.IPromise{Nest.IDynamicIndexSettings}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.#ctor">
            <summary>/_settings</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.PreserveExisting(System.Boolean)">
            <summary>Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.UpdateIndexSettingsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetFieldMappingRequest">
            <summary>Request parameters for IndicesGetFieldMappingForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Fields)">
             <summary>/_mapping/field/{fields}</summary>
            <param name="fields">this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Indices,Nest.Fields)">
             <summary>/{index}/_mapping/field/{fields}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="fields">this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Types,Nest.Fields)">
             <summary>/_mapping/{type}/field/{fields}</summary>
            <param name="type">Optional, accepts null</param>		
            <param name="fields">this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingRequest.#ctor(Nest.Indices,Nest.Types,Nest.Fields)">
             <summary>/{index}/_mapping/{type}/field/{fields}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>		
            <param name="fields">this parameter is required</param>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.IncludeDefaults">
            <summary>Whether the default mapping values should be returned as well</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetFieldMappingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetFieldMappingDescriptor`1">
            <summary>descriptor for IndicesGetFieldMappingForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.#ctor(Nest.Fields)">
             <summary>/_mapping/field/{fields}</summary>
            <param name="fields"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.IncludeDefaults(System.Boolean)">
            <summary>Whether the default mapping values should be returned as well</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetFieldMappingDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetMappingRequest">
            <summary>Request parameters for IndicesGetMappingForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor">
            <summary>/_mapping</summary>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_mapping</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor(Nest.Types)">
             <summary>/_mapping/{type}</summary>
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetMappingRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/_mapping/{type}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetMappingRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetMappingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetMappingDescriptor`1">
            <summary>descriptor for IndicesGetMappingForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.#ctor">
            <summary>/_mapping</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetMappingDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutMappingRequest">
            <summary>Request parameters for IndicesPutMapping <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html</pre></summary>
        </member>
        <member name="P:Nest.PutMappingRequest.AllField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.DateDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.IncludeInAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.DynamicDateFormats">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.DynamicTemplates">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Dynamic">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Analyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.SearchAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.FieldNamesField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.IndexField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Meta">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.NumericDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.ParentField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.SizeField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest.SourceField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingRequest.#ctor(Nest.Indices,Nest.TypeName)">
             <summary>/{index}/{type}/_mapping</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PutMappingRequest.#ctor(Nest.TypeName)">
             <summary>/_mapping/{type}</summary>
            <param name="type">this parameter is required</param>
        </member>
        <member name="P:Nest.PutMappingRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.UpdateAllTypes">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutMappingRequest`1">
            <summary>Request parameters for IndicesPutMapping <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html</pre></summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.AllField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.DateDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.IncludeInAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.DynamicDateFormats">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.DynamicTemplates">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Dynamic">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Analyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.SearchAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.FieldNamesField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.IndexField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Meta">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.NumericDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.ParentField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.SizeField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutMappingRequest`1.SourceField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingRequest`1.#ctor(Nest.Indices,Nest.TypeName)">
             <summary>/{index}/{type}/_mapping</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PutMappingRequest`1.#ctor(Nest.TypeName)">
             <summary>/_mapping/{type}</summary>
            <param name="type">this parameter is required</param>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.MasterTimeout">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.UpdateAllTypes">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutMappingRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutMappingDescriptor`1">
            <summary>descriptor for IndicesPutMapping <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html</pre></summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)">
            <summary>
            Convenience method to map as much as it can based on ElasticType attributes set on the type.
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etcetera)</pre>
            <pre>Class types default to object and Enums to int</pre>
            <pre>Later calls can override whatever is set is by this call.</pre>
            </summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AutoMap(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Dynamic(Nest.Union{System.Boolean,Nest.DynamicMapping})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Dynamic(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.IncludeInAll(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Parent(Nest.TypeName)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Parent``1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Analyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.SearchAnalyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AllField(System.Func{Nest.AllFieldDescriptor,Nest.IAllField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.IndexField(System.Func{Nest.IndexFieldDescriptor,Nest.IIndexField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.SizeField(System.Func{Nest.SizeFieldDescriptor,Nest.ISizeField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DisableSizeField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DisableIndexField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DynamicDateFormats(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DateDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.NumericDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.SourceField(System.Func{Nest.SourceFieldDescriptor,Nest.ISourceField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.RoutingField(System.Func{Nest.RoutingFieldDescriptor{`0},Nest.IRoutingField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.FieldNamesField(System.Func{Nest.FieldNamesFieldDescriptor{`0},Nest.IFieldNamesField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Meta(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Properties(System.Func{Nest.PropertiesDescriptor{`0},Nest.IPromise{Nest.IProperties}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.DynamicTemplates(System.Func{Nest.DynamicTemplateContainerDescriptor{`0},Nest.IPromise{Nest.IDynamicTemplateContainer}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.#ctor(Nest.TypeName)">
             <summary>/{index}/{type}/_mapping</summary>
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Type(Nest.TypeName)">
            <summary>The name of the document type</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.UpdateAllTypes(System.Boolean)">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutMappingDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RecoveryStatusRequest">
            <summary>Request parameters for IndicesRecoveryForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.RecoveryStatusRequest.#ctor">
            <summary>/_recovery</summary>
        </member>
        <member name="M:Nest.RecoveryStatusRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_recovery</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Detailed">
            <summary>Whether to display detailed information about shard recovery</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.ActiveOnly">
            <summary>Display only those recoveries that are currently on-going</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RecoveryStatusRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RecoveryStatusDescriptor">
            <summary>descriptor for IndicesRecoveryForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html</pre></summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.#ctor">
            <summary>/_recovery</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Detailed(System.Boolean)">
            <summary>Whether to display detailed information about shard recovery</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.ActiveOnly(System.Boolean)">
            <summary>Display only those recoveries that are currently on-going</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RecoveryStatusDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SegmentsRequest">
            <summary>Request parameters for IndicesSegmentsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html</pre></summary>
        </member>
        <member name="M:Nest.SegmentsRequest.#ctor">
            <summary>/_segments</summary>
        </member>
        <member name="M:Nest.SegmentsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_segments</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SegmentsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Verbose">
            <summary>Includes detailed memory usage by Lucene.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SegmentsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SegmentsDescriptor">
            <summary>descriptor for IndicesSegmentsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html</pre></summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.#ctor">
            <summary>/_segments</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Verbose(System.Boolean)">
            <summary>Includes detailed memory usage by Lucene.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SegmentsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndicesShardStoresRequest">
            <summary>Request parameters for IndicesShardStoresForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesShardStoresRequest.#ctor">
            <summary>/_shard_stores</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_shard_stores</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.Status">
            <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.IndicesShardStoresRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndicesShardStoresDescriptor">
            <summary>descriptor for IndicesShardStoresForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.#ctor">
            <summary>/_shard_stores</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Status(System.String[])">
            <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.IndicesShardStoresDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndicesStatsRequest">
            <summary>Request parameters for IndicesStatsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor">
            <summary>/_stats</summary>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor(Elasticsearch.Net.IndicesStatsMetric)">
             <summary>/_stats/{metric}</summary>
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_stats</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.IndicesStatsRequest.#ctor(Nest.Indices,Elasticsearch.Net.IndicesStatsMetric)">
             <summary>/{index}/_stats/{metric}</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.IndicesStatsRequest.CompletionFields">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.FielddataFields">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Fields">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Groups">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Level">
            <summary>Return stats aggregated at cluster, index or shard level</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.IncludeSegmentFileSizes">
            <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.IndicesStatsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IndicesStatsDescriptor">
            <summary>descriptor for IndicesStatsForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html</pre></summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.#ctor">
            <summary>/_stats</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Metric(Elasticsearch.Net.IndicesStatsMetric)">
            <summary>Limit the information returned the specific metrics.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.CompletionFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.FielddataFields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Groups(System.String[])">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Return stats aggregated at cluster, index or shard level</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.IncludeSegmentFileSizes(System.Boolean)">
            <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.IndicesStatsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearCacheRequest">
            <summary>Request parameters for IndicesClearCacheForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html</pre></summary>
        </member>
        <member name="M:Nest.ClearCacheRequest.#ctor">
            <summary>/_cache/clear</summary>
        </member>
        <member name="M:Nest.ClearCacheRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_cache/clear</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ClearCacheRequest.FieldData">
            <summary>Clear field data</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Fields">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Query">
            <summary>Clear query caches</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Recycler">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.RequestCache">
            <summary>Clear request cache</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Request">
            <summary>Clear request cache</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClearCacheRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearCacheDescriptor">
            <summary>descriptor for IndicesClearCacheForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html</pre></summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.#ctor">
            <summary>/_cache/clear</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.FieldData(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Query(System.Boolean)">
            <summary>Clear query caches</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Recycler(System.Boolean)">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.RequestCache(System.Boolean)">
            <summary>Clear request cache</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Request(System.Boolean)">
            <summary>Clear request cache</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClearCacheDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.FlushRequest">
            <summary>Request parameters for IndicesFlushForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html</pre></summary>
        </member>
        <member name="M:Nest.FlushRequest.#ctor">
            <summary>/_flush</summary>
        </member>
        <member name="M:Nest.FlushRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_flush</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.FlushRequest.Force">
            <summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
        </member>
        <member name="P:Nest.FlushRequest.WaitIfOngoing">
            <summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.</summary>
        </member>
        <member name="P:Nest.FlushRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.FlushRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.FlushRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.FlushRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.FlushRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.FlushRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.FlushRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.FlushRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.FlushDescriptor">
            <summary>descriptor for IndicesFlushForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html</pre></summary>
        </member>
        <member name="M:Nest.FlushDescriptor.#ctor">
            <summary>/_flush</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Force(System.Boolean)">
            <summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.WaitIfOngoing(System.Boolean)">
            <summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.FlushDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ForceMergeRequest">
            <summary>Request parameters for IndicesForcemergeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html</pre></summary>
        </member>
        <member name="M:Nest.ForceMergeRequest.#ctor">
            <summary>/_forcemerge</summary>
        </member>
        <member name="M:Nest.ForceMergeRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_forcemerge</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ForceMergeRequest.Flush">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.MaxNumSegments">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.OnlyExpungeDeletes">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.WaitForMerge">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ForceMergeRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ForceMergeDescriptor">
            <summary>descriptor for IndicesForcemergeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html</pre></summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.#ctor">
            <summary>/_forcemerge</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Flush(System.Boolean)">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.MaxNumSegments(System.Int64)">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.OnlyExpungeDeletes(System.Boolean)">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.WaitForMerge(System.Boolean)">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ForceMergeDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RefreshRequest">
            <summary>Request parameters for IndicesRefreshForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html</pre></summary>
        </member>
        <member name="M:Nest.RefreshRequest.#ctor">
            <summary>/_refresh</summary>
        </member>
        <member name="M:Nest.RefreshRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_refresh</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RefreshRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.RefreshRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.RefreshRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.RefreshRequest.Force">
            <summary></summary>
        </member>
        <member name="P:Nest.RefreshRequest.OperationThreading">
            <summary></summary>
        </member>
        <member name="T:Nest.RefreshDescriptor">
            <summary>descriptor for IndicesRefreshForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html</pre></summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.#ctor">
            <summary>/_refresh</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.Force(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:Nest.RefreshDescriptor.OperationThreading(System.String)">
            <summary></summary>
        </member>
        <member name="T:Nest.SyncedFlushRequest">
            <summary>Request parameters for IndicesFlushSyncedForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html</pre></summary>
        </member>
        <member name="M:Nest.SyncedFlushRequest.#ctor">
            <summary>/_flush/synced</summary>
        </member>
        <member name="M:Nest.SyncedFlushRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_flush/synced</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SyncedFlushRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SyncedFlushRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SyncedFlushDescriptor">
            <summary>descriptor for IndicesFlushSyncedForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html</pre></summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.#ctor">
            <summary>/_flush/synced</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SyncedFlushDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpgradeRequest">
            <summary>Request parameters for IndicesUpgradeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeRequest.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_upgrade</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpgradeRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.WaitForCompletion">
            <summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.OnlyAncientSegments">
            <summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.UpgradeRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpgradeDescriptor">
            <summary>descriptor for IndicesUpgradeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.OnlyAncientSegments(System.Boolean)">
            <summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.UpgradeDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpgradeStatusRequest">
            <summary>Request parameters for IndicesGetUpgradeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeStatusRequest.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeStatusRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_upgrade</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.UpgradeStatusRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.UpgradeStatusDescriptor">
            <summary>descriptor for IndicesGetUpgradeForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html</pre></summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.#ctor">
            <summary>/_upgrade</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.UpgradeStatusDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeletePipelineRequest">
            <summary>Request parameters for IngestDeletePipeline <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.DeletePipelineRequest.#ctor(Nest.Id)">
             <summary>/_ingest/pipeline/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeletePipelineRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeletePipelineRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeletePipelineRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeletePipelineRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeletePipelineRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeletePipelineRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeletePipelineRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeletePipelineDescriptor">
            <summary>descriptor for IngestDeletePipeline <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.#ctor(Nest.Id)">
             <summary>/_ingest/pipeline/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeletePipelineDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetPipelineRequest">
            <summary>Request parameters for IngestGetPipeline <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.GetPipelineRequest.#ctor">
            <summary>/_ingest/pipeline</summary>
        </member>
        <member name="M:Nest.GetPipelineRequest.#ctor(Nest.Id)">
             <summary>/_ingest/pipeline/{id}</summary>
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetPipelineRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetPipelineRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetPipelineRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetPipelineRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetPipelineRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetPipelineRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetPipelineDescriptor">
            <summary>descriptor for IngestGetPipeline <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.#ctor">
            <summary>/_ingest/pipeline</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.Id(Nest.Id)">
            <summary>Comma separated list of pipeline ids. Wildcards supported</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetPipelineDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.PipelineDescriptor.Description(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PipelineDescriptor.Processors(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PipelineDescriptor.Processors(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PipelineDescriptor.OnFailure(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PipelineDescriptor.OnFailure(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ProcessorDescriptorBase`2.OnFailure(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ProcessorDescriptorBase`2.OnFailure(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.Attachment``1(System.Func{Nest.AttachmentProcessorDescriptor{``0},Nest.IAttachmentProcessor})">
            <summary>
            The ingest attachment plugin lets Elasticsearch extract file attachments in common formats
            (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.
            You can use the ingest attachment plugin as a replacement for the mapper attachment plugin.
            </summary>
            <remarks>
            Requires the Ingest Attachment Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.DateIndexName``1(System.Func{Nest.DateIndexNameProcessorDescriptor{``0},Nest.IDateIndexNameProcessor})">
            <summary>
            Point documents to the right time-based index based on a date or timestamp field in a document
            by using the date math index name support.
            </summary>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.DotExpander``1(System.Func{Nest.DotExpanderProcessorDescriptor{``0},Nest.IDotExpanderProcessor})">
            <summary>
            Expands a field with dots into an object field.
            This processor allows fields with dots in the name to be accessible by other processors in the pipeline.
            Otherwise these fields can’t be accessed by any processor.
            </summary>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.GeoIp``1(System.Func{Nest.GeoIpProcessorDescriptor{``0},Nest.IGeoIpProcessor})">
            <summary>
            Adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
            <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.Script(System.Func{Nest.ScriptProcessorDescriptor,Nest.IScriptProcessor})">
            <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.Sort``1(System.Func{Nest.SortProcessorDescriptor{``0},Nest.ISortProcessor})">
            <summary>
            The Sort processor sorts the elements of an array ascending or descending. Homogeneous arrays of numbers
            will be sorted numerically, while arrays of strings or heterogeneous arrays
             of strings and numbers will be sorted lexicographically.
            </summary>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.Json``1(System.Func{Nest.JsonProcessorDescriptor{``0},Nest.IJsonProcessor})">
            <summary>
            Converts a JSON string into a structured JSON object.
            </summary>
        </member>
        <member name="M:Nest.ProcessorsDescriptor.UserAgent``1(System.Func{Nest.UserAgentProcessorDescriptor{``0},Nest.IUserAgentProcessor})">
            <summary>
            The user_agent processor extracts details from the user agent string a browser sends with its web requests.
            This processor adds this information by default under the user_agent field.
            The ingest-user-agent plugin ships by default with the regexes.yaml made available by
            uap-java with an Apache 2.0 license.
            </summary>
            <remarks>
            Requires the UserAgent Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="T:Nest.IDateIndexNameProcessor">
            <summary>
            The purpose of this processor is to point documents to the right time
            based index based on a date or timestamp field in a document
            by using the date math index name support.
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.Field">
            <summary>
            The field to get the date or timestamp from.
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.IndexNamePrefix">
            <summary>
            A prefix of the index name to be prepended before the printed date.
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.DateRounding">
            <summary>
            How to round the date when formatting the date into the index name.
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.DateFormats">
            <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd’T'HH:mm:ss.SSSZ
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.TimeZone">
            <summary>
            The timezone to use when parsing the date and when date
            math index supports resolves expressions into concrete
            index names.
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.Locale">
            <summary>
            The locale to use when parsing the date from the document
            being preprocessed, relevant when parsing month names or
            week days.
            </summary>
        </member>
        <member name="P:Nest.IDateIndexNameProcessor.IndexNameFormat">
            <summary>
            The format to be used when printing the parsed date into
            the index name.
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.Field">
            <summary>
            The field to get the date or timestamp from.
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.IndexNamePrefix">
            <summary>
            A prefix of the index name to be prepended before the printed date.
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.DateRounding">
            <summary>
            How to round the date when formatting the date into the index name.
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.DateFormats">
            <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd’T'HH:mm:ss.SSSZ
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.TimeZone">
            <summary>
            The timezone to use when parsing the date and when date
            math index supports resolves expressions into concrete
            index names.
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.Locale">
            <summary>
            The locale to use when parsing the date from the document
            being preprocessed, relevant when parsing month names or
            week days.
            </summary>
        </member>
        <member name="P:Nest.DateIndexNameProcessor.IndexNameFormat">
            <summary>
            The format to be used when printing the parsed date into
            the index name.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.Field(Nest.Field)">
            <summary>
            The field to get the date or timestamp from.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            The field to get the date or timestamp from.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.IndexNamePrefix(System.String)">
            <summary>
            A prefix of the index name to be prepended before the printed date.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.DateRounding(Nest.DateRounding)">
            <summary>
            How to round the date when formatting the date into the index name.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.DateFormats(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd’T'HH:mm:ss.SSSZ
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.DateFormats(System.String[])">
            <summary>
            An array of the expected date formats for parsing
            dates / timestamps in the document being preprocessed.
            Default is yyyy-MM-dd’T'HH:mm:ss.SSSZ
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.TimeZone(System.String)">
            <summary>
            The timezone to use when parsing the date and when date
            math index supports resolves expressions into concrete
            index names.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.Locale(System.String)">
            <summary>
            The locale to use when parsing the date from the document
            being preprocessed, relevant when parsing month names or
            week days.
            </summary>
        </member>
        <member name="M:Nest.DateIndexNameProcessorDescriptor`1.IndexNameFormat(System.String)">
            <summary>
            The format to be used when printing the parsed date into
            the index name.
            </summary>
        </member>
        <member name="T:Nest.IDotExpanderProcessor">
            <summary>
            Expands a field with dots into an object field.
            This processor allows fields with dots in the name to be accessible by other processors in the pipeline.
            Otherwise these fields can’t be accessed by any processor.
            </summary>
        </member>
        <member name="P:Nest.IDotExpanderProcessor.Field">
            <summary>
            The field to expand into an object field
            </summary>
        </member>
        <member name="P:Nest.IDotExpanderProcessor.Path">
            <summary>
            The field that contains the field to expand.
            Only required if the field to expand is part another object field,
            because the field option can only understand leaf fields.
            </summary>
        </member>
        <member name="T:Nest.DotExpanderProcessor">
            <summary>
            Expands a field with dots into an object field.
            This processor allows fields with dots in the name to be accessible by other processors in the pipeline.
            Otherwise these fields can’t be accessed by any processor.
            </summary>
        </member>
        <member name="P:Nest.DotExpanderProcessor.Field">
            <summary>
            The field to expand into an object field
            </summary>
        </member>
        <member name="P:Nest.DotExpanderProcessor.Path">
            <summary>
            The field that contains the field to expand.
            Only required if the field to expand is part another object field,
            because the field option can only understand leaf fields.
            </summary>
        </member>
        <member name="T:Nest.DotExpanderProcessorDescriptor`1">
            <summary>
            Expands a field with dots into an object field.
            This processor allows fields with dots in the name to be accessible by other processors in the pipeline.
            Otherwise these fields can’t be accessed by any processor.
            </summary>
        </member>
        <member name="M:Nest.DotExpanderProcessorDescriptor`1.Field(Nest.Field)">
            <summary>
            The field to expand into an object field
            </summary>
        </member>
        <member name="M:Nest.DotExpanderProcessorDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            The field to expand into an object field
            </summary>
        </member>
        <member name="M:Nest.DotExpanderProcessorDescriptor`1.Path(System.String)">
            <summary>
            The field that contains the field to expand.
            Only required if the field to expand is part another object field,
            because the field option can only understand leaf fields.
            </summary>
        </member>
        <member name="T:Nest.IJsonProcessor">
            <summary>
            Converts a JSON string into a structured JSON object.
            </summary>
        </member>
        <member name="P:Nest.IJsonProcessor.Field">
            <summary>
            Field holding json as a string
            </summary>
        </member>
        <member name="P:Nest.IJsonProcessor.TargetField">
            <summary>
            The field to insert the converted structured object into
            </summary>
        </member>
        <member name="P:Nest.IJsonProcessor.AddToRoot">
            <summary>
            Flag that forces the serialized json to be injected into the top level of the document.
            <see cref="P:Nest.IJsonProcessor.TargetField" /> must not be set when this option is chosen.
            </summary>
        </member>
        <member name="T:Nest.JsonProcessor">
            <inheritdoc/>
        </member>
        <member name="P:Nest.JsonProcessor.Field">
            <inheritdoc/>
        </member>
        <member name="P:Nest.JsonProcessor.TargetField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.JsonProcessor.AddToRoot">
            <inheritdoc/>
        </member>
        <member name="T:Nest.JsonProcessorDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.JsonProcessorDescriptor`1.Field(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.JsonProcessorDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.JsonProcessorDescriptor`1.TargetField(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.JsonProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.JsonProcessorDescriptor`1.AddToRoot(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IKeyValueProcessor.Field">
            <summary>
            The field to be parsed
            </summary>
        </member>
        <member name="P:Nest.IKeyValueProcessor.TargetField">
            <summary>
            The field to insert the extracted keys into. Defaults to the root of the document
            </summary>
        </member>
        <member name="P:Nest.IKeyValueProcessor.FieldSplit">
            <summary>
            Regex pattern to use for splitting key-value pairs
            </summary>
        </member>
        <member name="P:Nest.IKeyValueProcessor.ValueSplit">
            <summary>
            Regex pattern to use for splitting the key from the value within a key-value pair
            </summary>
        </member>
        <member name="P:Nest.IKeyValueProcessor.IncludeKeys">
            <summary>
            List of keys to filter and insert into document. Defaults to including all keys
            </summary>
        </member>
        <member name="P:Nest.IKeyValueProcessor.IgnoreMissing">
            <summary>
            If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document
            </summary>
        </member>
        <member name="P:Nest.KeyValueProcessor.Field">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeyValueProcessor.TargetField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeyValueProcessor.FieldSplit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeyValueProcessor.ValueSplit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeyValueProcessor.IncludeKeys">
            <inheritdoc/>
        </member>
        <member name="P:Nest.KeyValueProcessor.IgnoreMissing">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.Field(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.TargetField(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.FieldSplit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.ValueSplit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.IncludeKeys(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.KeyValueProcessorDescriptor`1.IncludeKeys(System.String[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IAttachmentProcessor">
            <summary>
            The ingest attachment plugin lets Elasticsearch extract file attachments in common formats
            (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.
            You can use the ingest attachment plugin as a replacement for the mapper attachment plugin.
            </summary>
            <remarks>
            Requires the Ingest Attachment Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="P:Nest.IAttachmentProcessor.Field">
            <summary>
            The field to get the base64 encoded field from
            </summary>
        </member>
        <member name="P:Nest.IAttachmentProcessor.TargetField">
            <summary>
            The field that will hold the attachment information
            </summary>
        </member>
        <member name="P:Nest.IAttachmentProcessor.Properties">
            <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
        </member>
        <member name="P:Nest.IAttachmentProcessor.IndexedCharacters">
            <summary>
            The number of chars being used for extraction to prevent huge fields. Use -1 for no limit.
            Defaults to 100000.
            </summary>
        </member>
        <member name="P:Nest.IAttachmentProcessor.IgnoreMissing">
            <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
        </member>
        <member name="T:Nest.AttachmentProcessor">
            <summary>
            The ingest attachment plugin lets Elasticsearch extract file attachments in common formats
            (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.
            You can use the ingest attachment plugin as a replacement for the mapper attachment plugin.
            </summary>
            <remarks>
            Requires the Ingest Attachment Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="P:Nest.AttachmentProcessor.Field">
            <summary>
            The field to get the base64 encoded field from
            </summary>
        </member>
        <member name="P:Nest.AttachmentProcessor.TargetField">
            <summary>
            The field that will hold the attachment information
            </summary>
        </member>
        <member name="P:Nest.AttachmentProcessor.Properties">
            <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
        </member>
        <member name="P:Nest.AttachmentProcessor.IndexedCharacters">
            <summary>
            The number of chars being used for extraction to prevent huge fields. Use -1 for no limit.
            Defaults to 100000.
            </summary>
        </member>
        <member name="P:Nest.AttachmentProcessor.IgnoreMissing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.AttachmentProcessorDescriptor`1">
            <summary>
            The ingest attachment plugin lets Elasticsearch extract file attachments in common formats
            (such as PPT, XLS, and PDF) by using the Apache text extraction library Tika.
            You can use the ingest attachment plugin as a replacement for the mapper attachment plugin.
            </summary>
            <remarks>
            Requires the Ingest Attachment Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.Field(Nest.Field)">
            <summary>
            The field to get the base64 encoded field from
            </summary>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            The field to get the base64 encoded field from
            </summary>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.TargetField(Nest.Field)">
            <summary>
            The field that will hold the attachment information
            </summary>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            The field that will hold the attachment information
            </summary>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.IndexedCharacters(System.Int64)">
            <summary>
            The number of chars being used for extraction to prevent huge fields. Use -1 for no limit.
            Defaults to 100000.
            </summary>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.Properties(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
        </member>
        <member name="M:Nest.AttachmentProcessorDescriptor`1.Properties(System.String[])">
            <summary>
            Properties to select to be stored. Can be content, title, name, author,
            keywords, date, content_type, content_length, language. Defaults to all
            </summary>
        </member>
        <member name="T:Nest.IGeoIpProcessor">
            <summary>
            The GeoIP processor adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
            <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="P:Nest.IGeoIpProcessor.IgnoreMissing">
            <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
        </member>
        <member name="T:Nest.GeoIpProcessor">
            <summary>
            The GeoIP processor adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
            <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="P:Nest.GeoIpProcessor.IgnoreMissing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.GeoIpProcessorDescriptor`1">
            <summary>
            The GeoIP processor adds information about the geographical location of IP addresses,
            based on data from the Maxmind databases.
            This processor adds this information by default under the geoip field.
            The geoip processor can resolve both IPv4 and IPv6 addresses.
            </summary>
            <remarks>
            Requires the Ingest Geoip Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="M:Nest.GeoIpProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IUserAgentProcessor">
            <summary>
            The user_agent processor extracts details from the user agent string a browser sends with its web requests.
            This processor adds this information by default under the user_agent field.
            The ingest-user-agent plugin ships by default with the regexes.yaml made available by
            uap-java with an Apache 2.0 license.
            </summary>
            <remarks>
            Requires the UserAgent Processor Plugin to be installed on the cluster.
            </remarks>
        </member>
        <member name="P:Nest.IUserAgentProcessor.IgnoreMissing">
            <summary>
            If `true` and `field` does not exist, the processor quietly exits without modifying the document
            </summary>
        </member>
        <member name="T:Nest.UserAgentProcessor">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UserAgentProcessor.Field">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UserAgentProcessor.TargetField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UserAgentProcessor.RegexFile">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UserAgentProcessor.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.UserAgentProcessor.IgnoreMissing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.UserAgentProcessorDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.Field(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.TargetField(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.TargetField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.RegexFile(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.IgnoreMissing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.Properties(System.Collections.Generic.IEnumerable{Nest.UserAgentProperty})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.UserAgentProcessorDescriptor`1.Properties(Nest.UserAgentProperty[])">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IScriptProcessor">
            <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
        </member>
        <member name="P:Nest.IScriptProcessor.Lang">
            <summary>
            The scripting language. Defaults to painless
            </summary>
        </member>
        <member name="P:Nest.IScriptProcessor.File">
            <summary>
            The script file to refer to
            </summary>
        </member>
        <member name="P:Nest.IScriptProcessor.Id">
            <summary>
            The stored script id to refer to
            </summary>
        </member>
        <member name="P:Nest.IScriptProcessor.Inline">
            <summary>
            An inline script to be executed
            </summary>
        </member>
        <member name="P:Nest.IScriptProcessor.Params">
            <summary>
            Parameters for the script
            </summary>
        </member>
        <member name="T:Nest.ScriptProcessor">
            <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
        </member>
        <member name="P:Nest.ScriptProcessor.Lang">
            <summary>
            The scripting language. Defaults to painless
            </summary>
        </member>
        <member name="P:Nest.ScriptProcessor.File">
            <summary>
            The script file to refer to
            </summary>
        </member>
        <member name="P:Nest.ScriptProcessor.Id">
            <summary>
            The stored script id to refer to
            </summary>
        </member>
        <member name="P:Nest.ScriptProcessor.Inline">
            <summary>
            An inline script to be executed
            </summary>
        </member>
        <member name="P:Nest.ScriptProcessor.Params">
            <summary>
            Parameters for the script
            </summary>
        </member>
        <member name="T:Nest.ScriptProcessorDescriptor">
            <summary>
            Allows inline, stored, and file scripts to be executed within ingest pipelines.
            </summary>
        </member>
        <member name="M:Nest.ScriptProcessorDescriptor.Lang(System.String)">
            <summary>
            The scripting language. Defaults to painless
            </summary>
        </member>
        <member name="M:Nest.ScriptProcessorDescriptor.File(System.String)">
            <summary>
            The script file to refer to
            </summary>
        </member>
        <member name="M:Nest.ScriptProcessorDescriptor.Id(System.String)">
            <summary>
            The stored script id to refer to
            </summary>
        </member>
        <member name="M:Nest.ScriptProcessorDescriptor.Inline(System.String)">
            <summary>
            An inline script to be executed
            </summary>
        </member>
        <member name="M:Nest.ScriptProcessorDescriptor.Params(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Parameters for the script
            </summary>
        </member>
        <member name="M:Nest.ScriptProcessorDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Parameters for the script
            </summary>
        </member>
        <member name="T:Nest.ISortProcessor">
            <summary>
            Sorts the elements of an array ascending or descending. Homogeneous arrays of numbers
            will be sorted numerically, while arrays of strings or heterogeneous arrays
             of strings and numbers will be sorted lexicographically.
            </summary>
        </member>
        <member name="P:Nest.ISortProcessor.Field">
            <summary>
            The field to be sorted
            </summary>
        </member>
        <member name="P:Nest.ISortProcessor.Order">
            <summary>
            The sort order to use. Default is ascending.
            </summary>
        </member>
        <member name="T:Nest.PutPipelineRequest">
            <summary>Request parameters for IngestPutPipeline <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.PutPipelineRequest.#ctor(Nest.Id)">
             <summary>/_ingest/pipeline/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.PutPipelineRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.PutPipelineRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.PutPipelineRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutPipelineRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutPipelineRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutPipelineRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutPipelineRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutPipelineDescriptor">
            <summary>descriptor for IngestPutPipeline <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Description(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Processors(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Processors(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.OnFailure(System.Collections.Generic.IEnumerable{Nest.IProcessor})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.OnFailure(System.Func{Nest.ProcessorsDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IProcessor}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.#ctor(Nest.Id)">
             <summary>/_ingest/pipeline/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutPipelineDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SimulatePipelineRequest">
            <summary>Request parameters for IngestSimulate <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.SimulatePipelineRequest.#ctor">
            <summary>/_ingest/pipeline/_simulate</summary>
        </member>
        <member name="M:Nest.SimulatePipelineRequest.#ctor(Nest.Id)">
             <summary>/_ingest/pipeline/{id}/_simulate</summary>
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SimulatePipelineRequest.Verbose">
            <summary>Verbose mode. Display data output for each processor in executed pipeline</summary>
        </member>
        <member name="P:Nest.SimulatePipelineRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SimulatePipelineRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SimulatePipelineRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SimulatePipelineRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SimulatePipelineRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SimulatePipelineDescriptor">
            <summary>descriptor for IngestSimulate <pre>https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html</pre></summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.#ctor">
            <summary>/_ingest/pipeline/_simulate</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.Id(Nest.Id)">
            <summary>Pipeline ID</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.Verbose(System.Boolean)">
            <summary>Verbose mode. Display data output for each processor in executed pipeline</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SimulatePipelineDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="F:Nest.DynamicMapping.Strict">
            <summary>
            If new unmapped fields are passed, the whole document WON'T be added/updated
            </summary>
        </member>
        <member name="M:Nest.DynamicTemplateContainer.Add(System.String,Nest.IDynamicTemplate)">
            <summary>
            Add any setting to the index
            </summary>
        </member>
        <member name="M:Nest.SingleMappingDescriptor`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})">
            <summary>
            Number introduces a numeric mapping that defaults to `float` use .Type() to set the right type if needed or use
            Scalar instead of <see cref="M:Nest.SingleMappingDescriptor`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})"/>
            </summary>
        </member>
        <member name="P:Nest.TypeMapping.AllField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.DateDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.IncludeInAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Dynamic">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.DynamicDateFormats">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.DynamicTemplates">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.FieldNamesField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.IndexField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Meta">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.NumericDetection">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.ParentField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Properties">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.RoutingField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.Analyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.SearchAnalyzer">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.SizeField">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TypeMapping.SourceField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(Nest.IPropertyVisitor,System.Int32)">
            <summary>
            Convenience method to map as much as it can based on <see cref="T:Nest.ElasticsearchTypeAttribute"/> attributes set on the type.
            <pre>This method also automatically sets up mappings for known values types (int, long, double, datetime, etc)</pre>
            <pre>Class types default to object and Enums to int</pre>
            <pre>Later calls can override whatever is set is by this call.</pre>
            </summary>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.AutoMap(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Dynamic(Nest.Union{System.Boolean,Nest.DynamicMapping})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Dynamic(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.IncludeInAll(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Parent(Nest.TypeName)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Parent``1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Analyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.SearchAnalyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.AllField(System.Func{Nest.AllFieldDescriptor,Nest.IAllField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.IndexField(System.Func{Nest.IndexFieldDescriptor,Nest.IIndexField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.SizeField(System.Func{Nest.SizeFieldDescriptor,Nest.ISizeField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.SourceField(System.Func{Nest.SourceFieldDescriptor,Nest.ISourceField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DisableSizeField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DisableIndexField(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DynamicDateFormats(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DateDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.NumericDetection(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.RoutingField(System.Func{Nest.RoutingFieldDescriptor{`0},Nest.IRoutingField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.FieldNamesField(System.Func{Nest.FieldNamesFieldDescriptor{`0},Nest.IFieldNamesField})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Meta(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.Meta(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TypeMappingDescriptor`1.DynamicTemplates(System.Func{Nest.DynamicTemplateContainerDescriptor{`0},Nest.IPromise{Nest.IDynamicTemplateContainer}})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IDateProperty.Index">
            <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
        </member>
        <member name="P:Nest.IDateProperty.Boost">
            <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
        </member>
        <member name="P:Nest.IDateProperty.NullValue">
            <summary>
            Accepts a date value in one of the configured format's
            as the field which is substituted for any explicit null values. Defaults to null,
            which means the field is treated as missing.
            </summary>
        </member>
        <member name="P:Nest.IDateProperty.IgnoreMalformed">
            <summary>
            If true, malformed numbers are ignored. If false (default), malformed numbers throw an exception
            and reject the whole document.
            </summary>
        </member>
        <member name="P:Nest.IDateProperty.Format">
            <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat"/>
            </summary>
        </member>
        <member name="P:Nest.DateProperty.Index">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.Boost">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.NullValue">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.IncludeInAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.PrecisionStep">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.IgnoreMalformed">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.Format">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateProperty.Fielddata">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.Index(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.Boost(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.NullValue(System.DateTime)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.IncludeInAll(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.IgnoreMalformed(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.Format(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DatePropertyDescriptor`1.Fielddata(System.Func{Nest.NumericFielddataDescriptor,Nest.INumericFielddata})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.NumberAttribute">
            <summary>
            Maps a property as a number type. If no type is specified,
            the default type is float (single precision floating point).
            </summary>
        </member>
        <member name="T:Nest.IDateRangeProperty">
            <summary>
            A range of date values represented as unsigned 64-bit integer milliseconds elapsed since system epoch.
            </summary>
        </member>
        <member name="P:Nest.IDateRangeProperty.Format">
            <summary>
            The date format(s) that can be parsed. Defaults to strict_date_optional_time||epoch_millis.
            <see cref="T:Nest.DateFormat"/>
            </summary>
        </member>
        <member name="T:Nest.DateRangeProperty">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DateRangeProperty.Format">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DateRangePropertyDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DateRangePropertyDescriptor`1.Format(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IDoubleRangeProperty">
            <summary>
            A range of double-precision 64-bit IEEE 754 floating point values.
            </summary>
        </member>
        <member name="T:Nest.DoubleRangeProperty">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DoubleRangePropertyDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IFloatRangeProperty">
            <summary>
            A range of single-precision 32-bit IEEE 754 floating point values.
            </summary>
        </member>
        <member name="T:Nest.FloatRangeProperty">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FloatRangePropertyDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IIntegerRangeProperty">
            <summary>
            A range of signed 32-bit integers with a minimum value of -231 and maximum of 231-1.
            </summary>
        </member>
        <member name="T:Nest.IntegerRangeProperty">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IntegerRangePropertyDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IRangeProperty.Coerce">
            <summary>
            Try to convert strings to numbers and truncate fractions for integers. Accepts true (default) and false.
            </summary>
        </member>
        <member name="P:Nest.IRangeProperty.Boost">
            <summary>
            Mapping field-level query time boosting. Accepts a floating point number, defaults to 1.0.
            </summary>
        </member>
        <member name="P:Nest.IRangeProperty.IncludeInAll">
            <summary>
            Whether or not the field value should be included in the _all field? Accepts true or false. Defaults
            to false if index is set to false, or if a parent object field sets include_in_all to false.
            Otherwise defaults to true.
            </summary>
        </member>
        <member name="P:Nest.IRangeProperty.Index">
            <summary>
            Should the field be searchable? Accepts true (default) and false.
            </summary>
        </member>
        <member name="P:Nest.RangePropertyBase.Coerce">
            <inheritdoc/>
        </member>
        <member name="P:Nest.RangePropertyBase.Boost">
            <inheritdoc/>
        </member>
        <member name="P:Nest.RangePropertyBase.IncludeInAll">
            <inheritdoc/>
        </member>
        <member name="P:Nest.RangePropertyBase.Index">
            <inheritdoc/>
        </member>
        <member name="M:Nest.RangePropertyDescriptorBase`3.Coerce(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.RangePropertyDescriptorBase`3.Boost(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.RangePropertyDescriptorBase`3.IncludeInAll(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.RangePropertyDescriptorBase`3.Index(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="F:Nest.RangeType.IntegerRange">
            <summary>
            A range of signed 32-bit integers with a minimum value of -231 and maximum of 231-1.
            </summary>
        </member>
        <member name="F:Nest.RangeType.FloatRange">
            <summary>
            A range of single-precision 32-bit IEEE 754 floating point values.
            </summary>
        </member>
        <member name="F:Nest.RangeType.LongRange">
            <summary>
            A range of signed 64-bit integers with a minimum value of -263 and maximum of 263-1.
            </summary>
        </member>
        <member name="F:Nest.RangeType.DoubleRange">
            <summary>
            A range of double-precision 64-bit IEEE 754 floating point values.
            </summary>
        </member>
        <member name="F:Nest.RangeType.DateRange">
            <summary>
            A range of date values represented as unsigned 64-bit integer milliseconds elapsed since system epoch.
            </summary>
        </member>
        <member name="M:Nest.StringPropertyDescriptor`1.NotAnalyzed">
            <summary>
            Shortcut into .Index(FieldIndexOption.NotAnalyzed)
            </summary>
        </member>
        <member name="T:Nest.FieldType">
            <summary>
            Define the type of field content.
            </summary>
        </member>
        <member name="F:Nest.FieldType.None">
            <summary>
            Default. Will be defined by the type of property return.
            </summary>
        </member>
        <member name="F:Nest.FieldType.Attachment">
            <summary>
            The attachment type allows to index different “attachment” type field (encoded as base64), for example, microsoft office formats, open document formats, ePub, HTML...
            </summary>
        </member>
        <member name="F:Nest.FieldType.Ip">
            <summary>
            An ip mapping type allows to store ipv4 addresses in a numeric form allowing to easily sort, and range query it (using ip values).
            </summary>
        </member>
        <member name="F:Nest.FieldType.Binary">
            <summary>
            The binary type is a base64 representation of binary data that can be stored in the index.
            </summary>
        </member>
        <member name="F:Nest.FieldType.Object">
            <summary>
            object type, no need to set this manually if its not a value type this will be set.
            Only set this if you need to force a value type to be mapped to an elasticsearch object type.
            </summary>
        </member>
        <member name="F:Nest.FieldType.Murmur3Hash">
            <summary>
            Murmur hash type, for use with the cardinality aggregation.
            </summary>
        </member>
        <member name="P:Nest.IGeoShapeProperty.Strategy">
            <summary>
            defines the approach for how to represent shapes at indexing and search time.
            It also influences the capabilities available so it is recommended to let
            Elasticsearch set this parameter automatically.
            </summary>
        </member>
        <member name="F:Nest.GeoStrategy.Recursive">
            <summary>
            supports all shape types
            </summary>
        </member>
        <member name="F:Nest.GeoStrategy.Term">
            <summary>
            supports point types only
            </summary>
        </member>
        <member name="M:Nest.IPropertiesDescriptor`2.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})">
            <summary>
            Number introduces a numeric mapping that defaults to `float` use .Type() to set the right type if needed or use
            Scalar instead of <see cref="M:Nest.IPropertiesDescriptor`2.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})"/>
            </summary>
        </member>
        <member name="M:Nest.PropertiesDescriptor`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})">
            <summary>
            Number introduces a numeric mapping that defaults to <c>float</c>. use
            <see cref="P:Nest.IProperty.Type"/> to set the right type if needed, or use .Scalar()
            instead of <see cref="M:Nest.PropertiesDescriptor`1.Number(System.Func{Nest.NumberPropertyDescriptor{`0},Nest.INumberProperty})"/>
            </summary>
        </member>
        <member name="P:Nest.IProperty.LocalMetadata">
            <summary>
            Local property metadata that will NOT be stored in Elasticsearch with the mappings
            </summary>
        </member>
        <member name="P:Nest.PropertyBase.LocalMetadata">
            <summary>
            Local property metadata that will NOT be stored in Elasticsearch with the mappings
            </summary>
        </member>
        <member name="M:Nest.PropertyDescriptorBase`3.LocalMetadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Local property metadata that will NOT be stored in Elasticsearch with the mappings
            </summary>
        </member>
        <member name="P:Nest.Attachment.Author">
            <summary>
            The author.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Content">
            <summary>
            The base64 encoded content. Can be explicitly set
            </summary>
        </member>
        <member name="P:Nest.Attachment.ContentLength">
            <summary>
            The length of the content before text extraction.
            </summary>
        </member>
        <member name="P:Nest.Attachment.ContentType">
            <summary>
            The content type of the attachment. Can be explicitly set
            </summary>
        </member>
        <member name="P:Nest.Attachment.Date">
            <summary>
            The date of the attachment.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Keywords">
            <summary>
            The keywords in the attachment.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Language">
            <summary>
            The language of the attachment. Can be explicitly set.
            </summary>
        </member>
        <member name="P:Nest.Attachment.DetectLanguage">
            <summary>
            Detect the language of the attachment. Language detection is
            disabled by default.
            </summary>
        </member>
        <member name="P:Nest.Attachment.Name">
            <summary>
            The name of the attachment. Can be explicitly set
            </summary>
        </member>
        <member name="P:Nest.Attachment.Title">
            <summary>
            The title of the attachment.
            </summary>
        </member>
        <member name="P:Nest.Attachment.IndexedCharacters">
            <summary>
            Determines how many characters are extracted when indexing the content.
            By default, 100000 characters are extracted when indexing the content.
            -1 can be set to extract all text, but note that all the text needs to be
            allowed to be represented in memory
            </summary>
        </member>
        <member name="P:Nest.Attachment.ContainsMetadata">
            <summary>
            Whether the attachment contains explicit metadata in addition to the
            content. Used at indexing time to determine the serialized form of the
            attachment.
            </summary>
        </member>
        <member name="T:Nest.IGenericProperty">
            <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
        </member>
        <member name="T:Nest.GenericProperty">
            <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
        </member>
        <member name="T:Nest.GenericPropertyDescriptor`1">
            <summary>
            A generic property to map properties that may be of different types.
            Not all methods are valid for all types.
            </summary>
            <typeparam name="T">the type on which the property is declared</typeparam>
        </member>
        <member name="P:Nest.IAllocationAwarenessSettings.Attributes">
            <summary>Determines which node attributes are taken into account when balancing shards across the shards</summary>
        </member>
        <member name="P:Nest.IAllocationAwarenessSettings.Forced">
            <summary>With forced awareness shard copies are NEVER allicated within the same attribute</summary>
        </member>
        <member name="P:Nest.AllocationAwarenessSettings.Attributes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationAwarenessSettings.Forced">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationAwarenessSettingsDescriptor.Nest#IAllocationAwarenessSettings#Attributes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationAwarenessSettingsDescriptor.Nest#IAllocationAwarenessSettings#Forced">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Attributes(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Attributes(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Force(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationAwarenessSettingsDescriptor.Force(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IAllocationFilteringSettings.Include">
            <summary>Assign the index to a node whose {attribute} has at least one of the comma-separated values.</summary>
        </member>
        <member name="P:Nest.IAllocationFilteringSettings.Exclude">
            <summary>Assign the index to a node whose {attribute} has all of the comma-separated values.</summary>
        </member>
        <member name="P:Nest.IAllocationFilteringSettings.Require">
            <summary>Assign the index to a node whose {attribute} has none of the comma-separated values.</summary>
        </member>
        <member name="P:Nest.AllocationFilteringSettings.Include">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettings.Exclude">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettings.Require">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Include">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Exclude">
            <inheritdoc/>
        </member>
        <member name="P:Nest.AllocationFilteringSettingsDescriptor.Nest#IAllocationFilteringSettings#Require">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Include(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Include(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Exlude(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Exclude(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Require(Nest.IAllocationAttributes)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.AllocationFilteringSettingsDescriptor.Require(System.Func{Nest.AllocationAttributesDescriptor,Nest.IAllocationAttributes})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IClusterModuleSettings">
            <summary> Settings to control where, when, and how shards are allocated to nodes. </summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.ReadOnly">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.Logger">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.AllocationAwareness">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.AllocationFiltering">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.DiskBasedShardAllocation">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.ShardAllocation">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.ShardBalancingHeuristics">
            <summary></summary>
        </member>
        <member name="P:Nest.IClusterModuleSettings.ShardRebalancing">
            <summary></summary>
        </member>
        <member name="T:Nest.ClusterModuleSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ReadOnly">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.Logger">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.AllocationAwareness">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.AllocationFiltering">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.DiskBasedShardAllocation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ShardAllocation">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ShardBalancingHeuristics">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ClusterModuleSettings.ShardRebalancing">
            <inheritdoc/>
        </member>
        <member name="T:Nest.ClusterModuleSettingsDescriptor">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardRebalancing(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.Logger(System.Collections.Generic.IDictionary{System.String,Nest.LogLevel})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.Logger(System.Func{Nest.FluentDictionary{System.String,Nest.LogLevel},Nest.FluentDictionary{System.String,Nest.LogLevel}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.AllocationAwareness(System.Func{Nest.AllocationAwarenessSettings,Nest.IAllocationAwarenessSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.AllocationFiltering(System.Func{Nest.AllocationFilteringSettingsDescriptor,Nest.IAllocationFilteringSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.DiskBasedShardAllocation(System.Func{Nest.DiskBasedShardAllocationSettingsDescriptor,Nest.IDiskBasedShardAllocationSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardAllocation(System.Func{Nest.ShardAllocationSettingsDescriptor,Nest.IShardAllocationSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardBalancingHeuristics(System.Func{Nest.ShardBalancingHeuristicsSettingsDescriptor,Nest.IShardBalancingHeuristicsSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ClusterModuleSettingsDescriptor.ShardRebalancing(System.Func{Nest.ShardRebalancingSettingsDescriptor,Nest.IShardRebalancingSettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.ThresholdEnabled">
            <summary>Defaults to true. Set to false to disable the disk allocation decider.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.LowWatermark">
            <summary>Controls the low watermark for disk usage. It defaults to 85%, meaning ES will not allocate new shards to nodes once they have more than 85% disk used. It can also be set 
            to an absolute byte value (like 500mb) to prevent ES from allocating shards if less than the configured amount of space is available.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.HighWatermark">
            <summary> 
            Controls the high watermark. It defaults to 90%, meaning ES will attempt to relocate shards to another node if the node disk usage rises above 90%. 
            It can also be set to an absolute byte value (similar to the low watermark) to relocate shards once less than the
             configured amount of space is available on the node.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.UpdateInterval">
            <summary>How often Elasticsearch should check on disk usage for each node in the cluster. Defaults to 30s.</summary>
        </member>
        <member name="P:Nest.IDiskBasedShardAllocationSettings.IncludeRelocations">
            <summary>
            Defaults to true, which means that Elasticsearch will take into account shards that are currently being relocated to the target node when computing 
            a node’s disk usage. Taking relocating shards' sizes into account may, however, mean that the disk usage for a node is incorrectly estimated on the high side,
            since the relocation could be 90% complete and a recently retrieved disk usage would include the total size of the 
            relocating shard as well as the space already used by the running relocation.
            </summary>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.ThresholdEnabled">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.LowWatermark">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.HighWatermark">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.UpdateInterval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.DiskBasedShardAllocationSettings.IncludeRelocations">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.ThresholdEnabled(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.LowWatermark(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.HighWatermark(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.UpdateInterval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.DiskBasedShardAllocationSettingsDescriptor.IncludeRelocations(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="F:Nest.AllocationEnable.All">
            <summary>
             (default) Allows shard allocation for all kinds of shards.
            </summary>
        </member>
        <member name="F:Nest.AllocationEnable.Primaries">
            <summary>
            Allows shard allocation only for primary shards.
            </summary>
        </member>
        <member name="F:Nest.AllocationEnable.NewPrimaries">
            <summary>
            Allows shard allocation only for primary shards for new indices.
            </summary>
        </member>
        <member name="F:Nest.AllocationEnable.None">
            <summary>
            No shard allocations of any kind are allowed for any indices.
            </summary>
        </member>
        <member name="F:Nest.AllowRebalance.All">
            <summary>
            (default) Always allow rebalancing.
            </summary>
        </member>
        <member name="F:Nest.AllowRebalance.Primaries">
            <summary>
            Only when all primaries in the cluster are allocated.
            </summary>
        </member>
        <member name="F:Nest.AllowRebalance.Replicas">
            <summary>
            Only when all shards (primaries and replicas) in the cluster are allocated.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.All">
            <summary>
            (default) Allows shard balancing for all kinds of shards.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.Primaries">
            <summary>
            Allows shard balancing only for primary shards.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.Replicas">
            <summary>
            Allows shard balancing only for replica shards.
            </summary>
        </member>
        <member name="F:Nest.RebalanceEnable.None">
            <summary>
            No shard balancing of any kind are allowed for any indices.
            </summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.AllocationEnable">
            <summary> Enable or disable allocation for specific kinds of shards, defaults to all</summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.NodeConcurrentRecoveries">
            <summary>How many concurrent shard recoveries are allowed to happen on a node. Defaults to 2.</summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.NodeInitialPrimariesRecoveries">
            <summary> 
            While the recovery of replicas happens over the network, the recovery of an unassigned primary after node restart uses 
            data from the local disk. These should be fast so more initial primary recoveries can happen in 
            parallel on the same node. Defaults to 4.</summary>
        </member>
        <member name="P:Nest.IShardAllocationSettings.SameShardHost">
            <summary>Allows to perform a check to prevent allocation of multiple instances of 
            the same shard on a single host, based on host name and host address. 
            Defaults to false, meaning that no check is performed by default. This setting only 
            applies if multiple nodes are started on the same machine.</summary>
        </member>
        <member name="P:Nest.ShardAllocationSettings.AllocationEnable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardAllocationSettings.NodeConcurrentRecoveries">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardAllocationSettings.NodeInitialPrimariesRecoveries">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardAllocationSettings.SameShardHost">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.AllocationEnable(System.Nullable{Nest.AllocationEnable})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.NodeConcurrentRecoveries(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.NodeInitialPrimariesRecoveries(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardAllocationSettingsDescriptor.SameShardHost(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceShard">
            <summary>Defines the weight factor for shards allocated on a node (float). Defaults to 0.45f.
             Raising this raises the tendency to equalize the number of shards across all nodes in the cluster.</summary>
        </member>
        <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceIndex">
            <summary>Defines a factor to the number of shards per index allocated on a specific node (float). Defaults to 0.55f. 
            Raising this raises the tendency to equalize the number of shards per index across all nodes in the cluster.</summary>
        </member>
        <member name="P:Nest.IShardBalancingHeuristicsSettings.BalanceThreshold">
            <summary>Minimal optimization value of operations that should be performed (non negative float). Defaults to 1.0f.
             Raising this will cause the cluster to be less aggressive about optimizing the shard balance</summary>
        </member>
        <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceShard">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceIndex">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardBalancingHeuristicsSettings.BalanceThreshold">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceShard(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceIndex(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardBalancingHeuristicsSettingsDescriptor.BalanceThreshold(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IShardRebalancingSettings.RebalanceEnable">
            <summary>Enable or disable rebalancing for specific kinds of shards</summary>
        </member>
        <member name="P:Nest.IShardRebalancingSettings.AllowRebalance">
            <summary>Specify when shard rebalancing is allowed</summary>
        </member>
        <member name="P:Nest.IShardRebalancingSettings.ConcurrentRebalance">
            <summary>Allow to control how many concurrent shard rebalances are allowed cluster wide. Defaults to 2.</summary>
        </member>
        <member name="P:Nest.ShardRebalancingSettings.RebalanceEnable">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardRebalancingSettings.AllowRebalance">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ShardRebalancingSettings.ConcurrentRebalance">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardRebalancingSettingsDescriptor.RebalanceEnable(System.Nullable{Nest.RebalanceEnable})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardRebalancingSettingsDescriptor.AllowRebalance(System.Nullable{Nest.AllowRebalance})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.ShardRebalancingSettingsDescriptor.ConcurrentRebalance(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.GatewaySettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.ExpectedNodes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.ExpectedMasterNodes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.ExpectedDataNodes">
            <inheritdoc/>
        </member>
        <member name="P:Nest.GatewaySettings.RecoveryAfterTime">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.TotalLimit">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.FielddataLimit">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.FielddataOverhead">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.RequestLimit">
            <summary></summary>
        </member>
        <member name="P:Nest.ICircuitBreakerSettings.RequestOverhead">
            <summary></summary>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.TotalLimit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.FielddataLimit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.FielddataOverhead">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.RequestLimit">
            <inheritdoc/>
        </member>
        <member name="P:Nest.CircuitBreakerSettings.RequestOverhead">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.TotalLimit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.FielddataLimit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.RequestLimit(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.FielddataOverhead(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CircuitBreakerSettingsDescriptor.RequestOverhead(System.Nullable{System.Single})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FielddataSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FielddataSettings.CacheSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FielddataSettings.CacheExpire">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IndexingBufferSettings">
            <summary>
            The indexing buffer is used to store newly indexed documents. When it fills up, the documents in the buffer are written to a segment on disk. It is divided between all shards on the node.
            <para>The following settings are static and must be configured on every data node in the cluster</para>
            </summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.IndexBufferSize">
            <summary>Accepts either a percentage or a byte size value. It defaults to 10%, meaning that 10% of the total heap allocated to a node will be used as the indexing buffer size.</summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.IndexBufferSizeMinimum">
            <summary>If the index_buffer_size is specified as a percentage, then this setting can be used to specify an absolute minimum. Defaults to 48mb.</summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.IndexBufferSizeMaximum">
            <summary>If the index_buffer_size is specified as a percentage, then this setting can be used to specify an absolute maximum. Defaults to unbounded.</summary>
        </member>
        <member name="P:Nest.IndexingBufferSettings.ShardBufferSizeMinimum">
            <summary>Sets a hard lower limit for the memory allocated per shard for its own indexing buffer. Defaults to 4mb.</summary>
        </member>
        <member name="T:Nest.IIndicesModuleSettings">
            <summary> Settings to control where, when, and how shards are allocated to nodes. </summary>
        </member>
        <member name="P:Nest.IIndicesModuleSettings.QeueriesCacheSize">
            <summary></summary>
        </member>
        <member name="P:Nest.IIndicesModuleSettings.CircuitBreakerSettings">
            <summary></summary>
        </member>
        <member name="P:Nest.IIndicesModuleSettings.FielddataSettings">
            <summary></summary>
        </member>
        <member name="P:Nest.IIndicesModuleSettings.RecoverySettings">
            <summary></summary>
        </member>
        <member name="T:Nest.IndicesModuleSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.QeueriesCacheSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.CircuitBreakerSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.FielddataSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettings.RecoverySettings">
            <inheritdoc/>
        </member>
        <member name="T:Nest.IndicesModuleSettingsDescriptor">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#QeueriesCacheSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#CircuitBreakerSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#FielddataSettings">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesModuleSettingsDescriptor.Nest#IIndicesModuleSettings#RecoverySettings">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesModuleSettingsDescriptor.CircuitBreaker(System.Func{Nest.CircuitBreakerSettingsDescriptor,Nest.ICircuitBreakerSettings})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesModuleSettingsDescriptor.IndicesRecovery(System.Func{Nest.IndicesRecoverySettingsDescriptor,Nest.IIndicesRecoverySettings})">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.ConcurrentStreams">
            <summary> defaults to 3</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.ConcurrentSmallFileStreams">
            <summary> defaults to 2</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.FileChunkSize">
            <summary> defaults to 512kb</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.TranslogOperations">
            <summary> defaults to 1000</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.TranslogSize">
            <summary> defaults to 512kb</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.Compress">
            <summary> defaults to true</summary>
        </member>
        <member name="P:Nest.IIndicesRecoverySettings.MaxBytesPerSecond">
            <summary> defaults to 40mb</summary>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.ConcurrentStreams">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.ConcurrentSmallFileStreams">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.FileChunkSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.TranslogOperations">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.TranslogSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.Compress">
            <inheritdoc/>
        </member>
        <member name="P:Nest.IndicesRecoverySettings.MaxBytesPerSecond">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.ConcurrentStreams(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.ConcurrentSmallFileStreams(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.FileChunkSize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.TranslogOperations(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.TranslogSize(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.Compress(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.IndicesRecoverySettingsDescriptor.MaxBytesPerSecond(System.String)">
            <inheritdoc/>
        </member>
        <member name="P:Nest.ITtlIntervalSettings.Interval">
            <summary>How often the deletion process runs. Defaults to 60s.</summary>
        </member>
        <member name="P:Nest.ITtlIntervalSettings.BulkSize">
            <summary>The deletions are processed with a bulk request. The number of deletions processed can be configured with this settings. Defaults to 10000.</summary>
        </member>
        <member name="P:Nest.TtlIntervalSettings.Interval">
            <inheritdoc/>
        </member>
        <member name="P:Nest.TtlIntervalSettings.BulkSize">
            <summary> defaults to 2</summary>
        </member>
        <member name="M:Nest.TtlIntervalSettingsDescriptor.Interval(Nest.Time)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.TtlIntervalSettingsDescriptor.BulkSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.DeleteScriptRequest">
            <summary>Request parameters for DeleteScript <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteScriptRequest.#ctor(Nest.Name)">
             <summary>/_scripts/{lang}</summary>
            <param name="lang">this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteScriptRequest.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteScriptRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteScriptRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteScriptDescriptor">
            <summary>descriptor for DeleteScript <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.#ctor(Nest.Name)">
             <summary>/_scripts/{lang}</summary>
            <param name="lang"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteScriptDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetScriptRequest">
            <summary>Request parameters for GetScript <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.GetScriptRequest.#ctor(Nest.Name)">
             <summary>/_scripts/{lang}</summary>
            <param name="lang">this parameter is required</param>
        </member>
        <member name="M:Nest.GetScriptRequest.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetScriptRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetScriptRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetScriptDescriptor">
            <summary>descriptor for GetScript <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.#ctor(Nest.Name)">
             <summary>/_scripts/{lang}</summary>
            <param name="lang"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetScriptDescriptor.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetScriptDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetScriptDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutScriptRequest">
            <summary>Request parameters for PutScript <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.PutScriptRequest.#ctor(Nest.Name)">
             <summary>/_scripts/{lang}</summary>
            <param name="lang">this parameter is required</param>
        </member>
        <member name="M:Nest.PutScriptRequest.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.PutScriptRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutScriptRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutScriptDescriptor">
            <summary>descriptor for PutScript <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html</pre></summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.#ctor(Nest.Name)">
             <summary>/_scripts/{lang}</summary>
            <param name="lang"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutScriptDescriptor.#ctor(Nest.Name,Nest.Id)">
             <summary>/_scripts/{lang}/{id}</summary>
            <param name="lang"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutScriptDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutScriptDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.Container(System.String)">
            <summary>
            Container name. Defaults to elasticsearch-snapshots
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.BasePath(System.String)">
             <summary>
            Specifies the path within container to repository data. Defaults to empty (root directory).
             </summary>
             <param name="basePath"></param>
             <returns></returns>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't 
            affect index files that are already compressed by default. Defaults to false.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.AzureRepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Defaults to 64m (64m max)
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="T:Nest.CreateRepositoryRequest">
            <summary>Request parameters for SnapshotCreateRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CreateRepositoryRequest.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Verify">
            <summary>Whether to verify the repository after creation</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CreateRepositoryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.CreateRepositoryDescriptor">
            <summary>descriptor for SnapshotCreateRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.FileSystem(System.Func{Nest.FileSystemRepositoryDescriptor,Nest.IFileSystemRepository})">
            <summary>
            The shared file system repository ("type": "fs") is using shared file system to store snapshot.
            The path specified in the location parameter should point to the same location in the shared
            filesystem and be accessible on all data and master nodes.
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.ReadOnlyUrl(System.Func{Nest.ReadOnlyUrlRepositoryDescriptor,Nest.IReadOnlyUrlRepository})">
            <summary>
            The URL repository ("type": "url") can be used as an alternative read-only way to access data
            created by shared file system repository is using shared file system to store snapshot.
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Azure(System.Func{Nest.AzureRepositoryDescriptor,Nest.IAzureRepository})">
            <summary>
            Specify an azure storage container to snapshot and restore to. (defaults to a container named elasticsearch-snapshots)
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Hdfs(System.Func{Nest.HdfsRepositoryDescriptor,Nest.IHdfsRepository})">
            <summary>
            Create an snapshot/restore repository that points to an HDFS filesystem
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.S3(System.Func{Nest.S3RepositoryDescriptor,Nest.IS3Repository})">
            <summary>
            Snapshot and restore to an Amazon S3 bucket
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Custom(Nest.ISnapshotRepository)">
            <summary>
            Register a custom repository
            </summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Verify(System.Boolean)">
            <summary>Whether to verify the repository after creation</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CreateRepositoryDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRepositoryRequest">
            <summary>Request parameters for SnapshotDeleteRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRepositoryRequest.#ctor(Nest.Names)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteRepositoryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRepositoryDescriptor">
            <summary>descriptor for SnapshotDeleteRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.#ctor(Nest.Names)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteRepositoryDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.Location(System.String)">
            <summary>
            Location of the snapshots. Mandatory.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            Turns on compression of the snapshot files. Defaults to true.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
            Big files can be broken down into chunks during snapshotting if needed. 
            The chunk size can be specified in bytes or by using size value notation, i.e. 1g, 10m, 5k. 
            Defaults to null (unlimited chunk size).
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.RestoreBytesPerSecondMaximum(System.String)">
            <summary>
            Throttles per node restore rate. Defaults to 20mb per second.
            </summary>
            <param name="maximumBytesPerSecond"></param>
        </member>
        <member name="M:Nest.FileSystemRepositorySettingsDescriptor.SnapshotBytesPerSecondMaximum(System.String)">
            <summary>
            Throttles per node snapshot rate. Defaults to 20mb per second. 
            </summary>
            <param name="maximumBytesPerSecond"></param>
        </member>
        <member name="T:Nest.GetRepositoryRequest">
            <summary>Request parameters for SnapshotGetRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetRepositoryRequest.#ctor">
            <summary>/_snapshot</summary>
        </member>
        <member name="M:Nest.GetRepositoryRequest.#ctor(Nest.Names)">
             <summary>/_snapshot/{repository}</summary>
            <param name="repository">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GetRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetRepositoryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRepositoryDescriptor">
            <summary>descriptor for SnapshotGetRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.#ctor">
            <summary>/_snapshot</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.RepositoryName(Nest.Names)">
            <summary>A comma-separated list of repository names</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetRepositoryDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.Uri(System.String)">
            <summary>
            optional - Hadoop file-system URI
            </summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.Path(System.String)">
             <summary>
            required - path with the file-system where data is stored/loaded
             </summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.LoadDefaults(System.Boolean)">
            <summary>
            whether to load the default Hadoop configuration (default) or not
            </summary>
            <param name="loadDefaults"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.ConfigurationLocation(System.String)">
            <summary>
            Hadoop configuration XML to be loaded (use commas for multi values)
            </summary>
            <param name="configurationLocation"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.InlinedHadoopConfiguration(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            'inlined' key=value added to the Hadoop configuration
            </summary>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't
            affect index files that are already compressed by default. Defaults to false.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.HdfsRepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
             Big files can be broken down into chunks during snapshotting if needed.
             The chunk size can be specified in bytes or by using size value notation,
             i.e. 1g, 10m, 5k. Disabled by default
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="M:Nest.ReadOnlyUrlRepositorySettingsDescriptor.Location(System.String)">
            <summary>
            Location of the snapshots. Mandatory.
            </summary>
            <param name="location"></param>
        </member>
        <member name="M:Nest.ReadOnlyUrlRepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.Bucket(System.String)">
            <summary>
            The name of the bucket to be used for snapshots. (Mandatory)
            </summary>
            <param name="bucket"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.Region(System.String)">
            <summary>
            The region where bucket is located. Defaults to US Standard
            </summary>
            <param name="region"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.BasePath(System.String)">
            <summary>
            Specifies the path within bucket to repository data. Defaults to root directory.
            </summary>
            <param name="basePath"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.AccessKey(System.String)">
            <summary>
            The access key to use for authentication. Defaults to value of cloud.aws.access_key.
            </summary>
            <param name="accessKey"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.SecretKey(System.String)">
            <summary>
            The secret key to use for authentication. Defaults to value of cloud.aws.secret_key.
            </summary>
            <param name="secretKey"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.Compress(System.Boolean)">
            <summary>
            When set to true metadata files are stored in compressed format. This setting doesn't 
            affect index files that are already compressed by default. Defaults to false.
            </summary>
            <param name="compress"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.ConcurrentStreams(System.Int32)">
            <summary>
            Throttles the number of streams (per node) preforming snapshot operation. Defaults to 5
            </summary>
            <param name="concurrentStreams"></param>
        </member>
        <member name="M:Nest.S3RepositorySettingsDescriptor.ChunkSize(System.String)">
            <summary>
             Big files can be broken down into chunks during snapshotting if needed. 
            The chunk size can be specified in bytes or by using size value notation, 
            i.e. 1g, 10m, 5k. Defaults to 100m.
            </summary>
            <param name="chunkSize"></param>
        </member>
        <member name="T:Nest.VerifyRepositoryRequest">
            <summary>Request parameters for SnapshotVerifyRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.VerifyRepositoryRequest.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}/_verify</summary>
            <param name="repository">this parameter is required</param>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.VerifyRepositoryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.VerifyRepositoryDescriptor">
            <summary>descriptor for SnapshotVerifyRepository <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}/_verify</summary>
            <param name="repository"> this parameter is required</param>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.VerifyRepositoryDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IVerifyRepositoryResponse.Nodes">
            <summary>
             A dictionary of nodeId => nodeinfo of nodes that verified the repository
            </summary>
        </member>
        <member name="P:Nest.VerifyRepositoryResponse.Nodes">
            <summary>
             A dictionary of nodeId => nodeinfo of nodes that verified the repository
            </summary>
        </member>
        <member name="T:Nest.RestoreRequest">
            <summary>Request parameters for SnapshotRestore <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.RestoreRequest.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}/_restore</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.RestoreRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.RestoreRequest.WaitForCompletion">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="P:Nest.RestoreRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RestoreRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RestoreRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RestoreRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RestoreRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RestoreDescriptor">
            <summary>descriptor for SnapshotRestore <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}/_restore</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.RestoreDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RestoreDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteSnapshotRequest">
            <summary>Request parameters for SnapshotDelete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSnapshotRequest.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteSnapshotRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteSnapshotDescriptor">
            <summary>descriptor for SnapshotDelete <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteSnapshotDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetSnapshotRequest">
            <summary>Request parameters for SnapshotGet <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetSnapshotRequest.#ctor(Nest.Name,Nest.Names)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.GetSnapshotRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.IgnoreUnavailable">
            <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.Verbose">
            <summary>Whether to show verbose snapshot info or only show the basic info found in the repository index blob</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetSnapshotRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetSnapshotDescriptor">
            <summary>descriptor for SnapshotGet <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.#ctor(Nest.Name,Nest.Names)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.Verbose(System.Boolean)">
            <summary>Whether to show verbose snapshot info or only show the basic info found in the repository index blob</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetSnapshotDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SnapshotStatusRequest">
            <summary>Request parameters for SnapshotStatus <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotStatusRequest.#ctor">
            <summary>/_snapshot/_status</summary>
        </member>
        <member name="M:Nest.SnapshotStatusRequest.#ctor(Nest.Name)">
             <summary>/_snapshot/{repository}/_status</summary>
            <param name="repository">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SnapshotStatusRequest.#ctor(Nest.Name,Nest.Names)">
             <summary>/_snapshot/{repository}/{snapshot}/_status</summary>
            <param name="repository">Optional, accepts null</param>		
            <param name="snapshot">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.IgnoreUnavailable">
            <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SnapshotStatusRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SnapshotStatusDescriptor">
            <summary>descriptor for SnapshotStatus <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.#ctor">
            <summary>/_snapshot/_status</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.RepositoryName(Nest.Name)">
            <summary>A repository name</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.Snapshot(Nest.Names)">
            <summary>A comma-separated list of snapshot names</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SnapshotStatusDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SnapshotRequest">
            <summary>Request parameters for SnapshotCreate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotRequest.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository">this parameter is required</param>		
            <param name="snapshot">this parameter is required</param>
        </member>
        <member name="P:Nest.SnapshotRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.WaitForCompletion">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SnapshotRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SnapshotDescriptor">
            <summary>descriptor for SnapshotCreate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html</pre></summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.#ctor(Nest.Name,Nest.Name)">
             <summary>/_snapshot/{repository}/{snapshot}</summary>
            <param name="repository"> this parameter is required</param>		
            <param name="snapshot"> this parameter is required</param>
        </member>
        <member name="M:Nest.SnapshotDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.WaitForCompletion(System.Boolean)">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SnapshotDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Raw(System.String)">
            <summary>
            A query defined using a raw json string.
            <para>The query must be enclosed within '{' and '}'</para>
            </summary>
            <param name="rawJson">The query dsl json</param>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.QueryString(System.Func{Nest.QueryStringQueryDescriptor{`0},Nest.IQueryStringQuery})">
            <summary>
            A query that uses a query parser in order to parse its content.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SimpleQueryString(System.Func{Nest.SimpleQueryStringQueryDescriptor{`0},Nest.ISimpleQueryStringQuery})">
            <summary>
            A query that uses the SimpleQueryParser to parse its context.
            Unlike the regular query_string query, the simple_query_string query will
            never throw an exception, and discards invalid parts of the query.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Terms(System.Func{Nest.TermsQueryDescriptor{`0},Nest.ITermsQuery})">
            <summary>
            A query that match on any (configurable) of the provided terms.
            This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Fuzzy(System.Func{Nest.FuzzyQueryDescriptor{`0},Nest.IFuzzyQuery})">
            <summary>
            A fuzzy based query that uses similarity based on Levenshtein (edit distance) algorithm.
            Warning: this query is not very scalable with its default prefix length of 0 – in this case,
            every term will be enumerated and cause an edit score calculation or max_expansions is not set.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Match(System.Func{Nest.MatchQueryDescriptor{`0},Nest.IMatchQuery})">
            <summary>
            The default text query is of type boolean. It means that the text provided is analyzed and the analysis
            process constructs a boolean query from the provided text.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchPhrase(System.Func{Nest.MatchPhraseQueryDescriptor{`0},Nest.IMatchQuery})">
            <summary>
            The text_phrase query analyzes the text and creates a phrase query out of the analyzed text.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchPhrasePrefix(System.Func{Nest.MatchPhrasePrefixQueryDescriptor{`0},Nest.IMatchQuery})">
            <summary>
            The text_phrase_prefix is the same as text_phrase, expect it allows for prefix matches on the last term
            in the text
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MultiMatch(System.Func{Nest.MultiMatchQueryDescriptor{`0},Nest.IMultiMatchQuery})">
            <summary>
            The multi_match query builds further on top of the match query by allowing multiple fields to be specified.
            The idea here is to allow to more easily build a concise match type query over multiple fields instead of using a
            relatively more expressive query by using multiple match queries within a bool query.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Nested(System.Func{Nest.NestedQueryDescriptor{`0},Nest.INestedQuery})">
            <summary>
            Nested query allows to query nested objects / docs (see nested mapping). The query is executed against the
            nested objects / docs as if they were indexed as separate docs (they are, internally) and resulting in the
            root parent doc (or parent nested mapping).
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Conditionless(System.Func{Nest.ConditionlessQueryDescriptor{`0},Nest.IConditionlessQuery})">
            <summary>
            A thin wrapper allowing fined grained control what should happen if a query is conditionless
            if you need to fallback to something other than a match_all query
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Indices(System.Func{Nest.IndicesQueryDescriptor{`0},Nest.IIndicesQuery})">
            <summary>
            The indices query can be used when executed across multiple indices, allowing to have a query that executes
            only when executed on an index that matches a specific list of indices, and another query that executes
            when it is executed on an index that does not match the listed indices.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Range(System.Func{Nest.NumericRangeQueryDescriptor{`0},Nest.INumericRangeQuery})">
            <summary>
            Matches documents with fields that have terms within a certain numeric range.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.DateRange(System.Func{Nest.DateRangeQueryDescriptor{`0},Nest.IDateRangeQuery})">
            <summary>
            Matches documents with fields that have terms within a certain date range.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.TermRange(System.Func{Nest.TermRangeQueryDescriptor{`0},Nest.ITermRangeQuery})">
            <summary>
            Matches documents with fields that have terms within a certain term range.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MoreLikeThis(System.Func{Nest.MoreLikeThisQueryDescriptor{`0},Nest.IMoreLikeThisQuery})">
            <summary>
            More like this query find documents that are “like” provided text by running it against one or more fields.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeEnvelope(System.Func{Nest.GeoShapeEnvelopeQueryDescriptor{`0},Nest.IGeoShapeEnvelopeQuery})">
            <summary>
            A geo_shape query with an envelope finds documents
            that have a geometry that matches for the given spatial relation and input envelope
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeCircle(System.Func{Nest.GeoShapeCircleQueryDescriptor{`0},Nest.IGeoShapeCircleQuery})">
            <summary>
            A geo_shape query with a circle finds documents
            that have a geometry that matches for the given spatial relation and input circle
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoIndexedShape(System.Func{Nest.GeoIndexedShapeQueryDescriptor{`0},Nest.IGeoIndexedShapeQuery})">
            <summary>
            A geo_shape query that finds documents
            that have a geometry that matches for the given spatial relation and an indexed geo_shape
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeLineString(System.Func{Nest.GeoShapeLineStringQueryDescriptor{`0},Nest.IGeoShapeLineStringQuery})">
            <summary>
            A geo_shape query with a linestring finds documents
            that have a geometry that matches for the given spatial relation and input linestring
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeMultiLineString(System.Func{Nest.GeoShapeMultiLineStringQueryDescriptor{`0},Nest.IGeoShapeMultiLineStringQuery})">
            <summary>
            A geo_shape query with a multi linestring finds documents
            that have a geometry that matches for the given spatial relation and input multi linestring
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapePoint(System.Func{Nest.GeoShapePointQueryDescriptor{`0},Nest.IGeoShapePointQuery})">
            <summary>
            A geo_shape query with a point finds documents
            that have a geometry that matches for the given spatial relation and input point
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeMultiPoint(System.Func{Nest.GeoShapeMultiPointQueryDescriptor{`0},Nest.IGeoShapeMultiPointQuery})">
            <summary>
            A geo_shape query with a multi point finds documents
            that have a geometry that matches for the given spatial relation and input multi point
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapePolygon(System.Func{Nest.GeoShapePolygonQueryDescriptor{`0},Nest.IGeoShapePolygonQuery})">
            <summary>
            A geo_shape query with a polygon finds documents
            that have a geometry that matches for the given spatial relation and input polygon
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeMultiPolygon(System.Func{Nest.GeoShapeMultiPolygonQueryDescriptor{`0},Nest.IGeoShapeMultiPolygonQuery})">
            <summary>
            A geo_shape query with a multi polygon finds documents
            that have a geometry that matches for the given spatial relation and input multi polygon
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoShapeGeometryCollection(System.Func{Nest.GeoShapeGeometryCollectionQueryDescriptor{`0},Nest.IGeoShapeGeometryCollectionQuery})">
            <summary>
            A geo_shape query with a geometry collection finds documents
            that have a geometry that matches for the given spatial relation and input geometry collection
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoPolygon(System.Func{Nest.GeoPolygonQueryDescriptor{`0},Nest.IGeoPolygonQuery})">
            <summary>
            Matches documents with a geo_point type field that falls within a polygon of points
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoDistanceRange(System.Func{Nest.GeoDistanceRangeQueryDescriptor{`0},Nest.IGeoDistanceRangeQuery})">
            <summary>
            Matches documents with a geo_point type field to include only those
            that exist within a specific distance range from a given geo_point
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoDistance(System.Func{Nest.GeoDistanceQueryDescriptor{`0},Nest.IGeoDistanceQuery})">
            <summary>
            Matches documents with a geo_point type field to include only those
            that exist within a specific distance from a given geo_point
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.GeoBoundingBox(System.Func{Nest.GeoBoundingBoxQueryDescriptor{`0},Nest.IGeoBoundingBoxQuery})">
            <summary>
            Matches documents with a geo_point type field to include only those that exist within a bounding box
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.CommonTerms(System.Func{Nest.CommonTermsQueryDescriptor{`0},Nest.ICommonTermsQuery})">
            <summary>
            The common terms query is a modern alternative to stopwords which improves the precision and recall
            of search results (by taking stopwords into account), without sacrificing performance.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.HasChild``1(System.Func{Nest.HasChildQueryDescriptor{``0},Nest.IHasChildQuery})">
            <summary>
            The has_child query works the same as the has_child filter, by automatically wrapping the filter with a
            constant_score.
            </summary>
            <typeparam name="TChild">Type of the child</typeparam>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.HasParent``1(System.Func{Nest.HasParentQueryDescriptor{``0},Nest.IHasParentQuery})">
            <summary>
            The has_parent query works the same as the has_parent filter, by automatically wrapping the filter with a
            constant_score.
            </summary>
            <typeparam name="TParent">Type of the parent</typeparam>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.DisMax(System.Func{Nest.DisMaxQueryDescriptor{`0},Nest.IDisMaxQuery})">
            <summary>
            A query that generates the union of documents produced by its subqueries, and that scores each document
            with the maximum score for that document as produced by any subquery, plus a tie breaking increment for
            any additional matching subqueries.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.ConstantScore(System.Func{Nest.ConstantScoreQueryDescriptor{`0},Nest.IConstantScoreQuery})">
            <summary>
            A query that wraps a filter or another query and simply returns a constant score equal to the query boost
            for every document in the filter. Maps to Lucene ConstantScoreQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Bool(System.Func{Nest.BoolQueryDescriptor{`0},Nest.IBoolQuery})">
            <summary>
            A query that matches documents matching boolean combinations of other queries. The bool query maps to
            Lucene BooleanQuery.
            It is built using one or more boolean clauses, each clause with a typed occurrence
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Boosting(System.Func{Nest.BoostingQueryDescriptor{`0},Nest.IBoostingQuery})">
            <summary>
            A query that can be used to effectively demote results that match a given query.
            Unlike the "must_not" clause in bool query, this still selects documents that contain
            undesirable terms, but reduces their overall score.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchAll(System.Func{Nest.MatchAllQueryDescriptor,Nest.IMatchAllQuery})">
            <summary>
            A query that matches all documents. Maps to Lucene MatchAllDocsQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.MatchNone(System.Func{Nest.MatchNoneQueryDescriptor,Nest.IMatchNoneQuery})">
            <summary>
            A query that matches no documents. This is the inverse of the match_all query.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Term(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Object,System.Nullable{System.Double},System.String)">
            <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Term(Nest.Field,System.Object,System.Nullable{System.Double},System.String)">
            <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Term(System.Func{Nest.TermQueryDescriptor{`0},Nest.ITermQuery})">
            <summary>
            Matches documents that have fields that contain a term (not analyzed).
            The term query maps to Lucene TermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate
            over many terms. In order to prevent extremely slow wildcard queries, a wildcard term should
            not start with one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(Nest.Field,System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms.
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Wildcard(System.Func{Nest.WildcardQueryDescriptor{`0},Nest.IWildcardQuery})">
            <summary>
            Matches documents that have fields matching a wildcard expression (not analyzed).
            Supported wildcards are *, which matches any character sequence (including the empty one), and ?,
            which matches any single character. Note this query can be slow, as it needs to iterate over many terms.
            In order to prevent extremely slow wildcard queries, a wildcard term should not start with
            one of the wildcards * or ?. The wildcard query maps to Lucene WildcardQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Prefix(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Prefix(Nest.Field,System.String,System.Nullable{System.Double},Nest.MultiTermQueryRewrite,System.String)">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Prefix(System.Func{Nest.PrefixQueryDescriptor{`0},Nest.IPrefixQuery})">
            <summary>
            Matches documents that have fields containing terms with a specified prefix (not analyzed).
            The prefix query maps to Lucene PrefixQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Ids(System.Func{Nest.IdsQueryDescriptor,Nest.IIdsQuery})">
            <summary>
            Matches documents that only have the provided ids.
            Note, this filter does not require the _id field to be indexed since
            it works using the _uid field.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanTerm(System.Func{Nest.SpanTermQueryDescriptor{`0},Nest.ISpanTermQuery})">
            <summary>
            Matches spans containing a term. The span term query maps to Lucene SpanTermQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanFirst(System.Func{Nest.SpanFirstQueryDescriptor{`0},Nest.ISpanFirstQuery})">
            <summary>
            Matches spans near the beginning of a field. The span first query maps to Lucene SpanFirstQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanNear(System.Func{Nest.SpanNearQueryDescriptor{`0},Nest.ISpanNearQuery})">
            <summary>
            Matches spans which are near one another. One can specify slop, the maximum number of
            intervening unmatched positions, as well as whether matches are required to be in-order.
            The span near query maps to Lucene SpanNearQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanOr(System.Func{Nest.SpanOrQueryDescriptor{`0},Nest.ISpanOrQuery})">
            <summary>
            Matches the union of its span clauses.
            The span or query maps to Lucene SpanOrQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanNot(System.Func{Nest.SpanNotQueryDescriptor{`0},Nest.ISpanNotQuery})">
            <summary>
            Removes matches which overlap with another span query.
            The span not query maps to Lucene SpanNotQuery.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanMultiTerm(System.Func{Nest.SpanMultiTermQueryDescriptor{`0},Nest.ISpanMultiTermQuery})">
            <summary>
            Wrap a multi term query (one of fuzzy, prefix, term range or regexp query)
            as a span query so it can be nested.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanContaining(System.Func{Nest.SpanContainingQueryDescriptor{`0},Nest.ISpanContainingQuery})">
            <summary>
            Returns matches which enclose another span query.
            The span containing query maps to Lucene SpanContainingQuery
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanWithin(System.Func{Nest.SpanWithinQueryDescriptor{`0},Nest.ISpanWithinQuery})">
            <summary>
            Returns Matches which are enclosed inside another span query.
            The span within query maps to Lucene SpanWithinQuery
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.SpanFieldMasking(System.Func{Nest.SpanFieldMaskingQueryDescriptor{`0},Nest.ISpanFieldMaskingQuery})">
            <summary>
            Wraps span queries to allow them to participate in composite single-field Span queries by 'lying' about their search field.
            That is, the masked span query will function as normal, but the field points back to the set field of the query.
            This can be used to support queries like SpanNearQuery or SpanOrQuery across different fields,
            which is not ordinarily permitted.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Regexp(System.Func{Nest.RegexpQueryDescriptor{`0},Nest.IRegexpQuery})">
            <summary>
            Allows you to use regular expression term queries.
            "term queries" means that Elasticsearch will apply the regexp to the terms produced
            by the tokenizer for that field, and not to the original text of the field.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.FunctionScore(System.Func{Nest.FunctionScoreQueryDescriptor{`0},Nest.IFunctionScoreQuery})">
            <summary>
            The function_score query allows you to modify the score of documents that are retrieved by a query.
            This can be useful if, for example, a score function is computationally expensive and it is
            sufficient to compute the score on a filtered set of documents.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Template(System.Func{Nest.TemplateQueryDescriptor{`0},Nest.ITemplateQuery})">
            <summary>
            A query that accepts a query template and a map of key/value pairs to fill in template parameters.
            Templating is based on Mustache.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.Percolate(System.Func{Nest.PercolateQueryDescriptor{`0},Nest.IPercolateQuery})">
            <summary>
            Used to match queries stored in an index.
            The percolate query itself contains the document that will be used as query
            to match with the stored queries.
            </summary>
        </member>
        <member name="M:Nest.QueryContainerDescriptor`1.ParentId(System.Func{Nest.ParentIdQueryDescriptor{`0},Nest.IParentIdQuery})">
            <summary>
            Used to find child documents which belong to a particular parent.
            </summary>
        </member>
        <member name="M:Nest.BoolQueryAndExtensions.TryHandleUnmergableBools(Nest.QueryContainer,Nest.QueryContainer,Nest.IBoolQuery,Nest.IBoolQuery,Nest.QueryContainer@)">
            <summary>
            Handles cases where either side is a bool which indicates it can't be merged yet the other side is mergable.
            A side is considered unmergable if its locked (has important metadata) or has should clauses.
            Instead of always wrapping these cases in another bool we merge to unmergable side into to others must clause therefor flattening the generated graph
            </summary>
        </member>
        <member name="M:Nest.BoolQueryAndExtensions.TryHandleBoolsWithOnlyShouldClauses(Nest.QueryContainer,Nest.QueryContainer,Nest.IBoolQuery,Nest.IBoolQuery,Nest.QueryContainer@)">
            <summary>
            Both Sides are bools, but one of them has only should clauses so we should wrap into a new container.
            Unless we know one of the sides is a bool with only a must who's clauses are all bools with only shoulds.
            This is a piece of metadata we set at the bools creation time so we do not have to itterate the clauses on each combination
            In this case we can optimize the generated graph by merging and preventing stack overflows
            </summary>
        </member>
        <member name="P:Nest.IQuery.Name">
            <summary>
            The _name of the query. this allows you to retrieve for each document what part of the query it matched on
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.Must">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.MustNot">
            <summary>
            The clause (query) must not appear in the matching documents.
            Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.Should">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="P:Nest.IBoolQuery.MinimumShouldMatch"/>.
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.Filter">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.MinimumShouldMatch">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
        </member>
        <member name="P:Nest.IBoolQuery.DisableCoord">
            <summary>
            Specifies if the coordination factor for the query should be disabled.
            The coordination factor is used to reward documents that contain a higher
            percentage of the query terms. The more query terms that appear in the document,
            the greater the chances that the document is a good match for the query.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.Must">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.MustNot">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.Should">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="P:Nest.BoolQuery.MinimumShouldMatch"/>.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.Filter">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.MinimumShouldMatch">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
        </member>
        <member name="P:Nest.BoolQuery.DisableCoord">
            <summary>
            Specifies if the coordination factor for the query should be disabled.
            The coordination factor is used to reward documents that contain a higher
            percentage of the query terms. The more query terms that appear in the document,
            the greater the chances that the document is a good match for the query.
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.DisableCoord(System.Nullable{System.Boolean})">
            <summary>
            Specifies if the coordination factor for the query should be disabled.
            The coordination factor is used to reward documents that contain a higher
            percentage of the query terms. The more query terms that appear in the document,
            the greater the chances that the document is a good match for the query.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
            <summary>
            Specifies a minimum number of the optional BooleanClauses which must be satisfied.
            </summary>
            <param name="minimumShouldMatches"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Must(Nest.QueryContainer[])">
            <summary>
            The clause(s) that must appear in matching documents
            </summary>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.MustNot(Nest.QueryContainer[])">
            <summary>
            The clause (query) must not appear in the matching documents. Note that it is not possible to search on documents that only consists of a must_not clauses.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)"/>.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)"/>.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Should(Nest.QueryContainer[])">
            <summary>
            The clause (query) should appear in the matching document. A boolean query with no must clauses, one or more should clauses must match a document.
            The minimum number of should clauses to match can be set using <see cref="M:Nest.BoolQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)"/>.
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}[])">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Filter(System.Collections.Generic.IEnumerable{System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer}})">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.BoolQueryDescriptor`1.Filter(Nest.QueryContainer[])">
            <summary>
            The clause (query) which is to be used as a filter (in filter context).
            </summary>
            <param name="queries"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.Query(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.HighFrequencyOperator(System.Nullable{Nest.Operator})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.Analyzer(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.CutoffFrequency(System.Nullable{System.Double})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.MinimumShouldMatch(Nest.MinimumShouldMatch)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.CommonTermsQueryDescriptor`1.DisableCoord(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="T:Nest.MatchPhrasePrefixQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms.
            It allows for prefix matches on the last term in the text.
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="T:Nest.MatchPhraseQueryDescriptor`1">
            <summary>
            A Query that matches documents containing a particular sequence of terms. A PhraseQuery is built by QueryParser for input like "new york".
            </summary>
            <typeparam name="T">Type of document</typeparam>
        </member>
        <member name="P:Nest.IMultiMatchQuery.Fuzziness">
            <summary>
            Allows fuzzy matching based on the type of field being queried.
            Cannot be used with the
            <see cref="F:Nest.TextQueryType.CrossFields"/>,
            <see cref="F:Nest.TextQueryType.Phrase"/> or
            <see cref="F:Nest.TextQueryType.PhrasePrefix"/> types.
            </summary>
        </member>
        <member name="P:Nest.MultiMatchQuery.Fuzziness">
            <summary>
            Allows fuzzy matching based on the type of field being queried.
            Cannot be used with the
            <see cref="F:Nest.TextQueryType.CrossFields"/>,
            <see cref="F:Nest.TextQueryType.Phrase"/> or
            <see cref="F:Nest.TextQueryType.PhrasePrefix"/> types.
            </summary>
        </member>
        <member name="M:Nest.MultiMatchQueryDescriptor`1.Fuzziness(Nest.Fuzziness)">
            <summary>
            Allows fuzzy matching based on the type of field being queried.
            Cannot be used with the
            <see cref="F:Nest.TextQueryType.CrossFields"/>,
            <see cref="F:Nest.TextQueryType.Phrase"/> or
            <see cref="F:Nest.TextQueryType.PhrasePrefix"/> types.
            </summary>
        </member>
        <member name="T:Nest.GeoLocation">
            <summary>
            Represents a Latitude/Longitude as a 2 dimensional point that gets serialized as { lat, lon }
            </summary>
        </member>
        <member name="P:Nest.GeoLocation.Latitude">
            <summary>
            Latitude
            </summary>
        </member>
        <member name="P:Nest.GeoLocation.Longitude">
            <summary>
            Longitude
            </summary>
        </member>
        <member name="M:Nest.GeoLocation.#ctor(System.Double,System.Double)">
            <summary>
            Represents a Latitude/Longitude as a 2 dimensional point. 
            </summary>
            <param name="latitude">Value between -90 and 90</param>
            <param name="longitude">Value between -180 and 180</param>
            <exception cref="T:System.ArgumentOutOfRangeException">If <paramref name="latitude"/> or <paramref name="longitude"/> are invalid</exception>
        </member>
        <member name="M:Nest.GeoLocation.IsValidLatitude(System.Double)">
            <summary>
            True if <paramref name="latitude"/> is a valid latitude. Otherwise false.
            </summary>
            <param name="latitude"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.GeoLocation.IsValidLongitude(System.Double)">
            <summary>
            True if <paramref name="longitude"/> is a valid longitude. Otherwise false.
            </summary>
            <param name="longitude"></param>
            <returns></returns>
        </member>
        <member name="M:Nest.GeoLocation.TryCreate(System.Double,System.Double)">
            <summary>
            Try to create a <see cref="T:Nest.GeoLocation"/>. 
            Return <value>null</value> if either <paramref name="latitude"/> or <paramref name="longitude"/> are invalid.
            </summary>
            <param name="latitude">Value between -90 and 90</param>
            <param name="longitude">Value between -180 and 180</param>
            <returns></returns>
        </member>
        <member name="T:Nest.GeoCoordinate">
            <summary>
            Represents a Latitude/Longitude as a 2 dimensional point that gets serialized as new [] { lon, lat }
            </summary>
        </member>
        <member name="P:Nest.IGeoShapeQuery.Relation">
            <summary>
            Controls the spatial relation operator to use at search time.
            </summary>
        </member>
        <member name="P:Nest.IGeoShapeQuery.IgnoreUnmapped">
            <summary>
            Will ignore an unmapped field and will not match any documents for this query.
            This can be useful when querying multiple indexes which might have different mappings.
            </summary>
        </member>
        <member name="P:Nest.GeoShapeQueryBase.Relation">
            <summary>
            Controls the spatial relation operator to use at search time.
            </summary>
        </member>
        <member name="P:Nest.GeoShapeQueryBase.IgnoreUnmapped">
            <summary>
            Will ignore an unmapped field and will not match any documents for this query.
            This can be useful when querying multiple indexes which might have different mappings.
            </summary>
        </member>
        <member name="M:Nest.GeoShapeQueryDescriptorBase`3.Relation(Nest.GeoShapeRelation)">
            <summary>
            Controls the spatial relation operator to used at search time.
            </summary>
        </member>
        <member name="M:Nest.GeoShapeQueryDescriptorBase`3.IgnoreUnmapped(System.Nullable{System.Boolean})">
            <summary>
            Will ignore an unmapped field and will not match any documents for this query.
            This can be useful when querying multiple indexes which might have different mappings.
            </summary>
        </member>
        <member name="P:Nest.IHasChildQuery.MaxChildren">
            <summary>
            Specify how many child documents are allowed to match.
            </summary>
        </member>
        <member name="P:Nest.HasChildQuery.MaxChildren">
            <summary>
            Specify how many child documents are allowed to match.
            </summary>
        </member>
        <member name="P:Nest.HasChildQueryDescriptor`1.Nest#IHasChildQuery#MaxChildren">
            <summary>
            Specify how many child documents are allowed to match.
            </summary>
        </member>
        <member name="M:Nest.HasChildQueryDescriptor`1.MaxChildren(System.Nullable{System.Int32})">
            <summary>
            Specify how many child documents are allowed to match.
            </summary>
        </member>
        <member name="P:Nest.IHasParentQuery.Score">
            <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent document.
            The default is false which ignores the score from the parent document.
            </summary>
        </member>
        <member name="P:Nest.HasParentQuery.Score">
            <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent document.
            The default is false which ignores the score from the parent document.
            </summary>
        </member>
        <member name="P:Nest.HasParentQueryDescriptor`1.Nest#IHasParentQuery#Score">
            <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent document.
            The default is false which ignores the score from the parent document.
            </summary>
        </member>
        <member name="M:Nest.HasParentQueryDescriptor`1.Score(System.Nullable{System.Boolean})">
            <summary>
            Determines whether the score of the matching parent document is aggregated into the child documents belonging to the matching parent document.
            The default is false which ignores the score from the parent document.
            </summary>
        </member>
        <member name="T:Nest.IParentIdQuery">
            <summary>
            The parent_id query can be used to find child documents which belong to a particular parent.
            </summary>
        </member>
        <member name="P:Nest.IParentIdQuery.Type">
            <summary>
            The child type. This must be a type with _parent field.
            </summary>
        </member>
        <member name="P:Nest.IParentIdQuery.Id">
            <summary>
            The id of the parent document to get children for.
            </summary>
        </member>
        <member name="P:Nest.IParentIdQuery.IgnoreUnmapped">
            <summary>
            When set to true this will ignore an unmapped type and will not match any documents for
            this query. This can be useful when querying multiple indexes which might have different mappings.
            </summary>
        </member>
        <member name="P:Nest.IMatchAllQuery.NormField">
            <summary>
            When indexing, a boost value can either be associated on the document level, or per field.
            The match all query does not take boosting into account by default. In order to take
            boosting into account, the norms_field needs to be provided in order to explicitly specify which
            field the boosting will be done on (Note, this will result in slower execution time).
            </summary>
        </member>
        <member name="P:Nest.MatchAllQuery.NormField">
            <inheritdoc />
        </member>
        <member name="M:Nest.MatchAllQueryDescriptor.NormField(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Nest.RewriteMultiTerm">
            <summary>
            Multi term query rewrite method
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.ConstantScore">
            <summary>
             A rewrite method that performs like constant_score_boolean when there are few matching terms and otherwise
             visits all matching terms in sequence and marks documents for that term. Matching documents are assigned a
             constant score equal to the query’s boost.
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.ScoringBoolean">
            <summary>
            A rewrite method that first translates each term into a should clause in a boolean query, and keeps the scores
             as computed by the query. Note that typically such scores are meaningless to the user, and require non-trivial
             CPU to compute, so it’s almost always better to use constant_score_auto. This rewrite method will hit too many
             clauses failure if it exceeds the boolean query limit (defaults to 1024).
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.ConstantScoreBoolean">
            <summary>
            Similar to scoring_boolean except scores are not computed. Instead, each matching document receives a constant
             score equal to the query’s boost. This rewrite method will hit too many clauses failure if it exceeds the
            boolean query limit (defaults to 1024).
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.TopTermsN">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, and keeps the scores
            as computed by the query. This rewrite method only uses the top scoring terms so it will not overflow boolean
             max clause count. The N controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.TopTermsBoostN">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, but the scores are only
            computed as the boost. This rewrite method only uses the top scoring terms so it will not overflow the boolean
             max clause count. The N controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="F:Nest.RewriteMultiTerm.TopTermsBlendedFreqsN">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, but all term queries compute
             scores as if they had the same frequency. In practice the frequency which is used is the maximum frequency of all
             matching terms. This rewrite method only uses the top scoring terms so it will not overflow boolean max clause count.
            The N controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="T:Nest.MultiTermQueryRewrite">
            <summary>
            Controls how a multi term query such as a wildcard or prefix query, is rewritten.
            </summary>
        </member>
        <member name="P:Nest.MultiTermQueryRewrite.Rewrite">
            <summary>
            The type of multi term rewrite to perform
            </summary>
        </member>
        <member name="P:Nest.MultiTermQueryRewrite.Size">
            <summary>
            The size of the top scoring terms to use
            </summary>
        </member>
        <member name="P:Nest.MultiTermQueryRewrite.ConstantScore">
            <summary>
             A rewrite method that performs like constant_score_boolean when there are few matching terms and otherwise
             visits all matching terms in sequence and marks documents for that term. Matching documents are assigned a
             constant score equal to the query’s boost.
            </summary>
        </member>
        <member name="P:Nest.MultiTermQueryRewrite.ScoringBoolean">
            <summary>
            A rewrite method that first translates each term into a should clause in a boolean query, and keeps the scores
             as computed by the query. Note that typically such scores are meaningless to the user, and require non-trivial
             CPU to compute, so it’s almost always better to use constant_score_auto. This rewrite method will hit too many
             clauses failure if it exceeds the boolean query limit (defaults to 1024).
            </summary>
        </member>
        <member name="P:Nest.MultiTermQueryRewrite.ConstantScoreBoolean">
            <summary>
            Similar to scoring_boolean except scores are not computed. Instead, each matching document receives a constant
             score equal to the query’s boost. This rewrite method will hit too many clauses failure if it exceeds the
            boolean query limit (defaults to 1024).
            </summary>
        </member>
        <member name="M:Nest.MultiTermQueryRewrite.TopTerms(System.Int32)">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, and keeps the scores
            as computed by the query. This rewrite method only uses the top scoring terms so it will not overflow boolean
             max clause count. <param name="size" /> controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="M:Nest.MultiTermQueryRewrite.TopTermsBoost(System.Int32)">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, but the scores are only
            computed as the boost. This rewrite method only uses the top scoring terms so it will not overflow the boolean
             max clause count. <param name="size" /> controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="M:Nest.MultiTermQueryRewrite.TopTermsBlendedFreqs(System.Int32)">
            <summary>
            A rewrite method that first translates each term into should clause in boolean query, but all term queries compute
             scores as if they had the same frequency. In practice the frequency which is used is the maximum frequency of all
             matching terms. This rewrite method only uses the top scoring terms so it will not overflow boolean max clause count.
            <param name="size" /> controls the size of the top scoring terms to use.
            </summary>
        </member>
        <member name="T:Nest.IPercolateQuery">
            <summary>
            The percolate query can be used to match queries stored in an index
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Field">
            <summary>
            The name of the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.DocumentType">
            <summary>
            The type / mapping of the document to percolate. This is a required parameter.
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Document">
            <summary>
            The source of the document to percolate.
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Id">
            <summary>
            The id of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Index">
            <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Type">
            <summary>
            The type of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Routing">
            <summary>
            Routing to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Preference">
            <summary>
            Preference to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.IPercolateQuery.Version">
            <summary>
            The expected version of the document to be fetched for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.IPercolateQuery.Document"/>
            </summary>
        </member>
        <member name="T:Nest.PercolateQuery">
            <summary>
            The percolate query can be used to match queries stored in an index
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Field">
            <summary>
            The name fo the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.DocumentType">
            <summary>
            The type / mapping of the document to percolate. This is a required parameter.
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Document">
            <summary>
            The source of the document to percolate.
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Id">
            <summary>
            The id of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.PercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Index">
            <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.PercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Type">
            <summary>
            The type of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.PercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Routing">
            <summary>
            Routing to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.PercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Preference">
            <summary>
            Preference to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.PercolateQuery.Document"/>
            </summary>
        </member>
        <member name="P:Nest.PercolateQuery.Version">
            <summary>
            The expected version of the document to be fetched for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="P:Nest.PercolateQuery.Document"/>
            </summary>
        </member>
        <member name="T:Nest.PercolateQueryDescriptor`1">
            <summary>
            The percolate query can be used to match queries stored in an index
            </summary>
            <typeparam name="T">The document type that contains the percolated query</typeparam>
        </member>
        <member name="P:Nest.PercolateQueryDescriptor`1.Conditionless">
            <summary>
            Determines if the query is conditionless and should not be serialized
            in the request
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Field(Nest.Field)">
            <summary>
            An expression for the name fo the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
            The name fo the field containing the percolated query on an existing document. This is a required parameter.
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.DocumentType(Nest.TypeName)">
            <summary>
            The type / mapping of the document to percolate. This is a required parameter.
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.DocumentType``1">
            <summary>
            The type / mapping of the document to percolate. This is a required parameter.
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)">
            <summary>
            The source of the document to percolate.
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Id(System.String)">
            <summary>
            The id of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Index(Nest.IndexName)">
            <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Index``1">
            <summary>
            The index the document resides in for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Type(Nest.TypeName)">
            <summary>
            The type of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Type``1">
            <summary>
            The type of the document to fetch for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Routing(System.String)">
            <summary>
            Routing to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Preference(System.String)">
            <summary>
            Preference to be used to fetch the document to percolate.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.PercolateQueryDescriptor`1.Version(System.Int64)">
            <summary>
            The expected version of the document to be fetched for percolation.
            Can be specified to percolate an existing document instead of providing <see cref="M:Nest.PercolateQueryDescriptor`1.Document``1(``0)"/>
            </summary>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Inline(System.String)">
            <summary>
            Inline script to execute
            </summary>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Id(System.String)">
            <summary>
            Id of an indexed script to execute
            </summary>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.File(System.String)">
            <summary>
            File name of a script to execute
            </summary>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Params(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Scripts are compiled and cached for faster execution.
            If the same script can be used, just with different parameters provided,
            it is preferable to use the ability to pass parameters to the script itself.
            </summary>
            <example>
                script: "doc['num1'].value &gt; param1"
            	param: "param1" = 5
            </example>
            <param name="paramDictionary">param</param>
            <returns>this</returns>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Lang(System.String)">
            <summary>
            Language of script.
            </summary>
            <param name="lang">language</param>
            <returns>this</returns>
        </member>
        <member name="M:Nest.ScriptQueryDescriptor`1.Lang(Nest.ScriptLang)">
            <summary>
            Language of script.
            </summary>
            <param name="lang">language</param>
            <returns>this</returns>
        </member>
        <member name="T:Nest.TermsQueryDescriptor`1">
            <summary>
            A query that match on any (configurable) of the provided terms.
            This is a simpler syntax query for using a bool query with several term queries in the should clauses.
            </summary>
            <typeparam name="T">The type that represents the expected hit type</typeparam>
        </member>
        <member name="P:Nest.IQueryVisitor.Depth">
            <summary>
            The current depth of the node being visited
            </summary>
        </member>
        <member name="P:Nest.IQueryVisitor.Scope">
            <summary>
            Hints the relation with the parent, i,e queries inside a Must clause will have VisitorScope.Must set.
            </summary>
        </member>
        <member name="M:Nest.IQueryVisitor.Visit(Nest.IQueryContainer)">
            <summary>
            Visit the query container just before we dispatch into the query it holds
            </summary>
            <param name="queryDescriptor"></param>
        </member>
        <member name="M:Nest.IQueryVisitor.Visit(Nest.IQuery)">
            <summary>
            Visit every query item just before they are visited by their specialized Visit() implementation
            </summary>
            <param name="query">The IQuery object that will be visited</param>
        </member>
        <member name="T:Nest.CountRequest">
            <summary>Request parameters for Count <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html</pre></summary>
        </member>
        <member name="M:Nest.CountRequest.#ctor">
            <summary>/_count</summary>
        </member>
        <member name="M:Nest.CountRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_count</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.CountRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_count</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CountRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.CountRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.CountRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.CountRequest.MinScore">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="P:Nest.CountRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.CountRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.CountRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.CountRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.CountRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.CountRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.CountRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.CountRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.CountRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CountRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CountRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CountRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CountRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.CountRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.CountRequest`1">
            <summary>Request parameters for Count <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html</pre></summary>
        </member>
        <member name="M:Nest.CountRequest`1.#ctor">
            <summary>/_count<para><typeparamref name="T"/> describes an elasticsearch document type from which the index, type and id can be inferred</para></summary>
        </member>
        <member name="M:Nest.CountRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_count</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.CountRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_count</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.CountRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.MinScore">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.CountRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.CountRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.CountRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.CountDescriptor`1">
            <summary>descriptor for Count <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html</pre></summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.#ctor">
            <summary>/_count</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of indices to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of types to restrict the results</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.MinScore(System.Double)">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.CountDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Nest.CovariantSearch.CloseOverAutomagicCovariantResultSelector(Nest.Inferrer,Nest.ICovariantSearchRequest)">
            <summary>
            Based on the type information present in this descriptor create method that takes
            the returned _source and hit and returns the ClrType it should deserialize too.
            This is so that Documents[A] can contain actual instances of subclasses B, C as well.
            If you specify types using .Type(typeof(B), typeof(C)) then NEST can automagically
            create a TypeSelector based on the hits _type property.
            </summary>
        </member>
        <member name="T:Nest.ExplainRequest`1">
            <summary>Request parameters for Explain <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html</pre></summary>
        </member>
        <member name="M:Nest.ExplainRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">this parameter is required</param>
        </member>
        <member name="M:Nest.ExplainRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.ExplainRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Analyzer">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Df">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.StoredFields">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Parent">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.SourceEnabled">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.SourceExclude">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.SourceInclude">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.ExplainRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.ExplainDescriptor`1">
            <summary>descriptor for Explain <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html</pre></summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>		
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/{id}/_explain</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Index(Nest.IndexName)">
            <summary>The name of the index</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Df(System.String)">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.StoredFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceExclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.SourceInclude(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.ExplainDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.FieldCapabilitiesRequest">
            <summary>Request parameters for FieldCaps <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html</pre></summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesRequest.#ctor">
            <summary>/_field_caps</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_field_caps</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.Fields">
            <summary>A comma-separated list of field names</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.FieldCapabilitiesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.FieldCapabilitiesDescriptor">
            <summary>descriptor for FieldCaps <pre>http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html</pre></summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.#ctor">
            <summary>/_field_caps</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Fields(System.String[])">
            <summary>A comma-separated list of field names</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Fields``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}}[])">
            <summary>A comma-separated list of field names</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.FieldCapabilitiesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.FieldStatsRequest">
            <summary>Request parameters for FieldStats <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html</pre></summary>
        </member>
        <member name="M:Nest.FieldStatsRequest.#ctor">
            <summary>/_field_stats</summary>
        </member>
        <member name="M:Nest.FieldStatsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_field_stats</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.FieldStatsRequest.Level">
            <summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.FieldStatsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.FieldStatsDescriptor">
            <summary>descriptor for FieldStats <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html</pre></summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.#ctor">
            <summary>/_field_stats</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Level(Elasticsearch.Net.Level)">
            <summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.FieldStatsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.FieldStatsField.MinValue">
            <summary>
            Returns the min value of a field. In NEST 5.x this is always
            returned as a string which does not work for geo_point and geo_shape
            typed fields which return an object here since Elasticsearch 5.3
            so in 5.x this is always null for geo_point and geo_shape. Please use <see cref="P:Nest.FieldStatsField.MinValueAsString"/>
            </summary>
        </member>
        <member name="P:Nest.FieldStatsField.MaxValue">
            <summary>
            Returns the max value of a field. In NEST 5.x this is always
            returned as a string which does not work for geo_point and geo_shape
            typed fields which return an object here since Elasticsearch 5.3
            so in 5.x this is always null for geo_point and geo_shape. Please use <see cref="P:Nest.FieldStatsField.MaxValueAsString"/>
            </summary>
        </member>
        <member name="T:Nest.MultiSearchRequest">
            <summary>Request parameters for Msearch <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html</pre></summary>
        </member>
        <member name="M:Nest.MultiSearchRequest.#ctor">
            <summary>/_msearch</summary>
        </member>
        <member name="M:Nest.MultiSearchRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_msearch</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiSearchRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_msearch</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiSearchRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.MaxConcurrentSearches">
            <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.TypedKeys">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.MultiSearchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiSearchDescriptor">
            <summary>descriptor for Msearch <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html</pre></summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.#ctor">
            <summary>/_msearch</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.MaxConcurrentSearches(System.Int64)">
            <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.MultiSearchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiSearchTemplateRequest">
            <summary>Request parameters for MsearchTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateRequest.#ctor">
            <summary>/_msearch/template</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_msearch/template</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiSearchTemplateRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_msearch/template</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.TypedKeys">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.MaxConcurrentSearches">
            <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.MultiSearchTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiSearchTemplateDescriptor">
            <summary>descriptor for MsearchTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.#ctor">
            <summary>/_msearch/template</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Type(Nest.Types)">
            <summary>A comma-separated list of document types to use as default</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.MaxConcurrentSearches(System.Int64)">
            <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.MultiSearchTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiPercolateRequest">
            <summary>Request parameters for Mpercolate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.MultiPercolateRequest.#ctor">
            <summary>/_mpercolate</summary>
        </member>
        <member name="M:Nest.MultiPercolateRequest.#ctor(Nest.IndexName)">
             <summary>/{index}/_mpercolate</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.MultiPercolateRequest.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_mpercolate</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.MultiPercolateRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.MultiPercolateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.MultiPercolateDescriptor">
            <summary>descriptor for Mpercolate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.#ctor">
            <summary>/_mpercolate</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Index(Nest.IndexName)">
            <summary>The index of the document being count percolated to use as default</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Type(Nest.TypeName)">
            <summary>The type of the document being percolated to use as default.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.MultiPercolateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PercolateCountRequest`1">
            <summary>Request parameters for CountPercolate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.PercolateCountRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate/count</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateCountRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_percolate/count</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.PercolateCountRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/_percolate/count</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.PercolateIndex">
            <summary>The index to count percolate the document into. Defaults to index.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.PercolateType">
            <summary>The type to count percolate document into. Defaults to type.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PercolateCountRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PercolateCountDescriptor`1">
            <summary>descriptor for CountPercolate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Document(`0)">
            <summary>
            The object to perculate
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.TrackScores(System.Boolean)">
            <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate/count</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/_percolate/count</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Index(Nest.IndexName)">
            <summary>The index of the document being count percolated.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document being count percolated.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Id(Nest.Id)">
            <summary>Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.PercolateIndex(System.String)">
            <summary>The index to count percolate the document into. Defaults to index.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.PercolateType(System.String)">
            <summary>The type to count percolate document into. Defaults to type.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PercolateCountDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PercolateRequest`1">
            <summary>Request parameters for Percolate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html</pre></summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.TrackScores">
            <summary>
            Whether the _score is included for each match. The _score is based on the query and represents
            how the query matched the percolate query’s metadata, not how the document (that is being percolated)
            matched the query. The <see cref="P:Nest.PercolateRequest`1.Query"/> option is required for this option.
            </summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Document">
            <summary>
            The object to percolate
            </summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Sort">
            <summary>
            Define a sort specification like in the search API. Currently only sorting _score reverse
            (default relevancy) is supported. Other sort fields will throw an exception.
            The <see cref="P:Nest.PercolateRequest`1.Size"/> and <see cref="P:Nest.PercolateRequest`1.Query"/> option are required for this setting. Like <see cref="P:Nest.PercolateRequest`1.TrackScores"/>
            the score is based on the query and represents how the query matched to the percolate query’s metadata
            and not how the document being percolated matched to the query.
            </summary>
        </member>
        <member name="M:Nest.PercolateRequest`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateRequest`1.#ctor(Nest.IndexName,Nest.TypeName,Nest.Id)">
             <summary>/{index}/{type}/{id}/_percolate</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">this parameter is required</param>		
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.PercolateRequest`1.#ctor(Nest.DocumentPath{`0},Nest.IndexName,Nest.TypeName,Nest.Id)">
            <summary>/{index}/{type}/_percolate</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="P:Nest.PercolateRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateIndex">
            <summary>The index to percolate the document into. Defaults to index.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateType">
            <summary>The type to percolate document into. Defaults to type.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateRouting">
            <summary>The routing value to use when percolating the existing document.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolatePreference">
            <summary>Which shard to prefer when executing the percolate request.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.PercolateFormat">
            <summary>Return an array of matching query IDs instead of objects</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Version">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.VersionType">
            <summary>Specific version type</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PercolateRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PercolateDescriptor`1">
            <summary>descriptor for Percolate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html</pre></summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Document(`0)">
            <summary>
            The object to percolate
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.TrackScores(System.Nullable{System.Boolean})">
            <summary>
            Whether the _score is included for each match. The _score is based on the query and represents
            how the query matched the percolate query’s metadata, not how the document (that is being percolated)
            matched the query. The <see cref="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})"/> option is required for this option.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Sort(System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
            <summary>
            Define a sort specification like in the search API. Currently only sorting _score reverse
            (default relevancy) is supported. Other sort fields will throw an exception.
            The <see cref="M:Nest.PercolateDescriptor`1.Size(System.Nullable{System.Int32})"/> and <see cref="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})"/> option are required for this setting. Like <see cref="M:Nest.PercolateDescriptor`1.TrackScores(System.Nullable{System.Boolean})"/>
            the score is based on the query and represents how the query matched to the percolate query’s metadata
            and not how the document being percolated matched to the query.
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Filter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.#ctor(Nest.IndexName,Nest.TypeName)">
             <summary>/{index}/{type}/_percolate</summary>
            <param name="index"> this parameter is required</param>		
            <param name="type"> this parameter is required</param>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.#ctor(Nest.DocumentPath{`0})">
            <summary>/{index}/{type}/_percolate</summary>
            <param name="document"> describes an elasticsearch document of type <typeparamref name="TDocument"/> from which the index, type and id can be inferred</param>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Index(Nest.IndexName)">
            <summary>The index of the document being percolated.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Type(Nest.TypeName)">
            <summary>The type of the document being percolated.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Id(Nest.Id)">
            <summary>Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateIndex(System.String)">
            <summary>The index to percolate the document into. Defaults to index.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateType(System.String)">
            <summary>The type to percolate document into. Defaults to type.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateRouting(System.String)">
            <summary>The routing value to use when percolating the existing document.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolatePreference(System.String)">
            <summary>Which shard to prefer when executing the percolate request.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.PercolateFormat(Elasticsearch.Net.PercolateFormat)">
            <summary>Return an array of matching query IDs instead of objects</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PercolateDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.PercolateCountResponse.Error">
            <summary>
            The individual error for separate requests on the _mpercolate API
            </summary>
        </member>
        <member name="M:Nest.RegisterPercolatorDescriptor`1.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <summary>
            Add metadata associated with this percolator query document that can later be used to query or filter specific percolated queries
            </summary>
        </member>
        <member name="M:Nest.RegisterPercolatorDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            The query to perform the percolation
            </summary>
        </member>
        <member name="T:Nest.ClearScrollRequest">
            <summary>Request parameters for ClearScroll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html</pre></summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClearScrollRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearScrollDescriptor">
            <summary>descriptor for ClearScroll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html</pre></summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.#ctor">
            <summary>/_search/scroll</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClearScrollDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ScrollRequest">
            <summary>Request parameters for Scroll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html</pre></summary>
        </member>
        <member name="P:Nest.ScrollRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ScrollRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ScrollRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ScrollRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ScrollRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ScrollDescriptor`1">
            <summary>descriptor for Scroll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html</pre></summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.#ctor">
            <summary>/_search/scroll</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ScrollDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SearchShardsRequest">
            <summary>Request parameters for SearchShards <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html</pre></summary>
        </member>
        <member name="M:Nest.SearchShardsRequest.#ctor">
            <summary>/{index}/{type}/_search_shards</summary>
        </member>
        <member name="M:Nest.SearchShardsRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchShardsRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchShardsRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SearchShardsRequest`1">
            <summary>Request parameters for SearchShards <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html</pre></summary>
        </member>
        <member name="M:Nest.SearchShardsRequest`1.#ctor">
            <summary>/{index}/{type}/_search_shards<para><typeparamref name="T"/> describes an elasticsearch document type from which the index, type and id can be inferred</para></summary>
        </member>
        <member name="M:Nest.SearchShardsRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchShardsRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search_shards</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SearchShardsRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SearchShardsDescriptor`1">
            <summary>
            A descriptor wich describes a search operation for _search_shards
            </summary>
            <summary>descriptor for SearchShards <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html</pre></summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.#ctor">
            <summary>/{index}/{type}/_search_shards</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SearchShardsDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteSearchTemplateRequest">
            <summary>Request parameters for DeleteTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteSearchTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteSearchTemplateDescriptor">
            <summary>descriptor for DeleteTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteSearchTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetSearchTemplateRequest">
            <summary>Request parameters for GetTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.GetSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetSearchTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetSearchTemplateDescriptor">
            <summary>descriptor for GetTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetSearchTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutSearchTemplateRequest">
            <summary>Request parameters for PutTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.PutSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutSearchTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutSearchTemplateDescriptor">
            <summary>descriptor for PutTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.#ctor(Nest.Id)">
             <summary>/_search/template/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutSearchTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RenderSearchTemplateRequest">
            <summary>Request parameters for RenderSearchTemplate <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateRequest.#ctor">
            <summary>/_render/template</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateRequest.#ctor(Nest.Id)">
             <summary>/_render/template/{id}</summary>
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RenderSearchTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RenderSearchTemplateDescriptor">
            <summary>descriptor for RenderSearchTemplate <pre>http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.#ctor">
            <summary>/_render/template</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.Id(Nest.Id)">
            <summary>The id of the stored search template</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RenderSearchTemplateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SearchTemplateRequest">
            <summary>Request parameters for SearchTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</pre></summary>
        </member>
        <member name="M:Nest.SearchTemplateRequest.#ctor">
            <summary>/_search/template</summary>
        </member>
        <member name="M:Nest.SearchTemplateRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search/template</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchTemplateRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search/template</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchTemplateRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Explain">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Profile">
            <summary>Specify whether to profile the query execution</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.TypedKeys">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SearchTemplateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SearchTemplateDescriptor`1">
            <summary>descriptor for SearchTemplate <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html</pre></summary>
        </member>
        <member name="P:Nest.SearchTemplateDescriptor`1._Strict">
            <summary>
            Whether conditionless queries are allowed or not
            </summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.#ctor">
            <summary>/_search/template</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Profile(System.Boolean)">
            <summary>Specify whether to profile the query execution</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SearchTemplateDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IFieldCollapse">
            <summary>
            Allows to collapse search results based on field values.
            The collapsing is done by selecting only the top sorted document per collapse key.
            For instance the query below retrieves the best tweet for each user and sorts them by number of likes.
            <para>
            NOTE: The collapsing is applied to the top hits only and does not affect aggregations.
            </para>
            </summary>
        </member>
        <member name="P:Nest.IFieldCollapse.Field">
            <summary>
            The field used for collapsing must be a single valued keyword or number field with doc-values activated
            </summary>
        </member>
        <member name="P:Nest.IFieldCollapse.InnerHits">
            <summary>
            It is also possible to expand each collapsed top hits with the `inner_hits` option.
            </summary>
        </member>
        <member name="T:Nest.FieldCollapse">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FieldCollapse.Field">
            <inheritdoc/>
        </member>
        <member name="T:Nest.FieldCollapseDescriptor`1">
            <inheritdoc/>
        </member>
        <member name="P:Nest.FieldCollapseDescriptor`1.Nest#IFieldCollapse#Field">
            <inheritdoc/>
        </member>
        <member name="F:Nest.BoundaryScanner.Characters">
            <summary>
            (default mode for the FVH): allows to configure which characters (boundary_chars) constitute a boundary for highlighting. It’s a single
            string with each boundary character defined in it (defaults to .,!? \t\n). It also allows configuring the boundary_max_scan to
            control how far to look for boundary characters (defaults to 20). Works only with the Fast Vector Highlighter.
            </summary>
        </member>
        <member name="F:Nest.BoundaryScanner.Sentence">
            <summary>
            sentence and word: use Java’s BreakIterator to break the highlighted fragments at the next sentence or word boundary.
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
        </member>
        <member name="F:Nest.BoundaryScanner.Word">
            <summary>
            sentence and word: use Java’s BreakIterator to break the highlighted fragments at the next sentence or word boundary.
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.PreTags">
            <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.PostTags">
            <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.FragmentSize">
            <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
        </member>
        <member name="P:Nest.IHighlight.NoMatchSize">
            <summary>
            In the case where there is no matching fragment to highlight, the default is to not return anything. Instead, we can return a snippet of text from
            the beginning of the field by setting no_match_size (default 0) to the length of the text that you want returned. The actual length may be
            shorter or longer than specified as it tries to break on a word boundary. When using the postings highlighter it is not possible to control the
            actual size of the snippet, therefore the first sentence gets returned whenever no_match_size is greater than 0.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.NumberOfFragments">
            <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.FragmentOffset">
            <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
        </member>
        <member name="P:Nest.IHighlight.BoundaryMaxScan">
            <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.Encoder">
            <summary>
            Define how highlighted text will be encoded.
            It can be either default (no encoding) or html (will escape html, if you use html highlighting tags).
            </summary>
        </member>
        <member name="P:Nest.IHighlight.Order">
            <summary>
            The order in which highlighted fragments are sorted
            </summary>
        </member>
        <member name="P:Nest.IHighlight.TagsSchema">
            <summary>
            Use a specific "tag" schemas.
            </summary>
            <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
        </member>
        <member name="P:Nest.IHighlight.RequireFieldMatch">
            <summary>
            Use a specific "tag" schemas.
            </summary>
            <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
        </member>
        <member name="P:Nest.IHighlight.BoundaryChars">
            <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
        </member>
        <member name="P:Nest.IHighlight.BoundaryScanner">
            <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break the highlighted
            fragments using boundary_scanner
            </summary>
        </member>
        <member name="P:Nest.IHighlight.BoundaryScannerLocale">
             <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
             </summary>
        </member>
        <member name="P:Nest.IHighlight.Fragmenter">
            <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
        </member>
        <member name="T:Nest.HighlighterFragmenter">
            <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
        </member>
        <member name="F:Nest.HighlighterFragmenter.Simple">
            <summary>
            Breaks up text into same sized fragments.
            </summary>
        </member>
        <member name="F:Nest.HighlighterFragmenter.Span">
            <summary>
            Same as the simple fragmenter, but tries not to break up text between highlighted terms (this is applicable
            when using phrase like queries). This is the default.
            </summary>
        </member>
        <member name="T:Nest.HighlighterType">
            <summary>
            Type of highlighter
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Plain">
            <summary>
            Plain Highlighter.
            The default choice of highlighter is of type plain and uses the Lucene highlighter.
            It tries hard to reflect the query matching logic in terms of understanding word
            importance and any word positioning criteria in phrase queries.
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Postings">
            <summary>
            Postings Highlighter.
            If index_options is set to offsets in the mapping the postings highlighter
            will be used instead of the plain highlighter
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Fvh">
            <summary>
            Fast Vector Highlighter.
            If term_vector information is provided by setting term_vector to with_positions_offsets
            in the mapping then the fast vector highlighter will be used instead of the plain highlighter
            </summary>
        </member>
        <member name="F:Nest.HighlighterType.Unified">
            <summary>
            Unified Highlighter.
            The unified highlighter can extract offsets from either postings, term vectors, or via re-analyzing text.
            Under the hood it uses Lucene UnifiedHighlighter which picks its strategy depending on the field and the query to highlight.
            Independently of the strategy this highlighter breaks the text into sentences and scores individual sentences as if
            they were documents in this corpus, using the BM25 algorithm. It supports accurate phrase and multi-term
            (fuzzy, prefix, regex) highlighting
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.Field">
            <summary>
            The field on which to perform highlighting.
            </summary>
            <remarks>
            In order to perform highlighting, the actual content of the field is required.
            If the field in question is stored (has store set to true in the mapping) it will be used,
            otherwise, the actual _source will be loaded and the relevant field will be extracted from it.
            </remarks>
        </member>
        <member name="P:Nest.IHighlightField.PreTags">
            <summary>
            Controls the pre tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.PostTags">
            <summary>
            Controls the post tag in which to wrap highights.
            By default, the highlighting will wrap highlighted text in &lt;em&gt; and &lt;/em&gt;.
            Using the fast vector highlighter, there can be more tags, and the importance is ordered.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.FragmentSize">
            <summary>
            The size of the highlighted fragment, in characters. Defaults to 100
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.NoMatchSize">
            <summary>
            The length of a snippet of text from the beginning of the field to return
            when no match for highlighting is found. Default behaviour is to not return anything when a match is not found.
            The actual length may be shorter than specified as it tries to break on a word boundary.
            </summary>
            <remarks>
            When using the postings highlighter, it is not possible to control the actual size of the snippet,
            therefore the first sentence gets returned whenever no_match_size is greater than 0.
            </remarks>
        </member>
        <member name="P:Nest.IHighlightField.NumberOfFragments">
            <summary>
            The maximum number of fragments to return. Defaults to 5.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.FragmentOffset">
            <summary>
            Controls the margin to start highlighting from when using the fast vector highlighter
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.BoundaryMaxScan">
            <summary>
            Controls how far to look for boundary characters. Defaults to 20.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.Encoder">
            <summary>
            Define how highlighted text will be encoded.
            It can be either default (no encoding) or html (will escape html, if you use html highlighting tags).
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.Order">
            <summary>
            The order in which highlighted fragments are sorted
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.TagsSchema">
            <summary>
            Use a specific "tag" schemas.
            </summary>
            <remarks>
            Currently a single schema called "styled" with the following pre_tags:
            &lt;em class="hlt1"&gt;, &lt;em class="hlt2"&gt;, &lt;em class="hlt3"&gt;,
            &lt;em class="hlt4"&gt;, &lt;em class="hlt5"&gt;, &lt;em class="hlt6"&gt;,
            &lt;em class="hlt7"&gt;, &lt;em class="hlt8"&gt;, &lt;em class="hlt9"&gt;,
            &lt;em class="hlt10"&gt;
            </remarks>
        </member>
        <member name="P:Nest.IHighlightField.RequireFieldMatch">
            <summary>
            Determines if only fields that hold a query match will be highlighted. Set to <c>false</c>
            will cause any field to be highlighted regardless of whether the query matched specifically on them. Default behaviour is <c>true</c>.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.BoundaryChars">
            <summary>
            Defines what constitutes a boundary for highlighting when using the fast vector highlighter.
            It's a single string with each boundary character defined in it. It defaults to .,!? \t\n.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.BoundaryScanner">
            <summary>
            When highlighting a field using the unified highlighter or the fast vector highlighter, you can specify how to break the highlighted
            fragments using boundary_scanner
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.BoundaryScannerLocale">
             <summary>
            You can further specify boundary_scanner_locale to control which Locale is used to search the text for these boundaries.
             </summary>
        </member>
        <member name="P:Nest.IHighlightField.Fragmenter">
            <summary>
            Fragmenter can control how text should be broken up in highlight snippets. However, this option is
            applicable only for the Plain Highlighter
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.Type">
            <summary>
            The type of highlighter to use. Can be a defined or custom highlighter
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.ForceSource">
            <summary>
            Forces the highlighting to highlight fields based on the source even if fields are stored separately.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.MatchedFields">
            <summary>
            Combine matches on multiple fields to highlight a single field when using the fast vector highighter.
            This is most intuitive for multifields that analyze the same string in different ways.
            All matched fields must have term_vector set to with_positions_offsets, but only the field to
            which the matches are combined is loaded so only that field would benefit from having store set to yes.
            </summary>
        </member>
        <member name="P:Nest.IHighlightField.HighlightQuery">
            <summary>
            The query to use for highlighting
            </summary>
        </member>
        <member name="P:Nest.HighlightField.Field">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.PreTags">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.PostTags">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.FragmentSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.NoMatchSize">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.NumberOfFragments">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.FragmentOffset">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.BoundaryMaxScan">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.Encoder">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.Order">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.TagsSchema">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.RequireFieldMatch">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.BoundaryChars">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.MaxFragmentLength">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.BoundaryScanner">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.BoundaryScannerLocale">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.Fragmenter">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.Type">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.ForceSource">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.MatchedFields">
            <inheritdoc/>
        </member>
        <member name="P:Nest.HighlightField.HighlightQuery">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Field(Nest.Field)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Field(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.AllField">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.TagsSchema(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.ForceSource(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Type(Nest.HighlighterType)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Type(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.PreTags(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.PostTags(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.PreTags(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.PostTags(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.FragmentSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.NoMatchSize(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.NumberOfFragments(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.FragmentOffset(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Encoder(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Order(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.RequireFieldMatch(System.Nullable{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryCharacters(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryMaxScan(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.MatchedFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.HighlightQuery(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.MaxFragmentLength(System.Nullable{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryScanner(System.Nullable{Nest.BoundaryScanner})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.BoundaryScannerLocale(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.HighlightFieldDescriptor`1.Fragmenter(System.Nullable{Nest.HighlighterFragmenter})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.InnerHitsResult.Documents``1">
            <summary>
            Retrieve <see cref="P:Nest.InnerHitsResult.Hits"/> documents as a strongly typed
            collection
            </summary>
            <typeparam name="T">The hits document type</typeparam>
        </member>
        <member name="M:Nest.InnerHitsDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter.
            </summary>
        </member>
        <member name="P:Nest.AggregationProfile.Type">
            <summary>
            The Elasticsearch aggregation type
            </summary>
        </member>
        <member name="P:Nest.AggregationProfile.Description">
            <summary>
            The user defined name of the aggregation
            </summary>
        </member>
        <member name="P:Nest.AggregationProfile.Time">
            <summary>
            The time this aggregation took
            </summary>
        </member>
        <member name="P:Nest.AggregationProfile.TimeInNanoseconds">
            <summary>
            The time this aggregation took, in nanoseconds
            </summary>
        </member>
        <member name="P:Nest.AggregationProfile.Breakdown">
            <summary>
            Detailed stats about how the time was spent
            </summary>
        </member>
        <member name="P:Nest.QueryProfile.Type">
            <summary>
            The lucene class name for the type of query
            </summary>
        </member>
        <member name="P:Nest.QueryProfile.Description">
            <summary>
            The lucene explanation text for the query
            </summary>
        </member>
        <member name="P:Nest.QueryProfile.Time">
            <summary>
            The time that this query took, inclusive of all children
            </summary>
        </member>
        <member name="P:Nest.QueryProfile.TimeInNanoseconds">
            <summary>
            The time that this query took in nanoseconds
            </summary>
        </member>
        <member name="P:Nest.QueryProfile.Breakdown">
            <summary>
            Detailed stats about how the time was spent
            </summary>
        </member>
        <member name="P:Nest.QueryProfile.Children">
            <summary>
            Sub-queries of this query
            </summary>
        </member>
        <member name="T:Nest.SearchRequest">
            <summary>Request parameters for Search <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html</pre></summary>
        </member>
        <member name="M:Nest.SearchRequest.#ctor">
            <summary>/_search</summary>
        </member>
        <member name="M:Nest.SearchRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_search</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.SearchRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.SearchRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest.DocvalueFields">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.SearchRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.SearchRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchRequest.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.SearchRequest.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.SearchRequest.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.SearchRequest.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.SearchRequest.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.SearchRequest.TypedKeys">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="P:Nest.SearchRequest.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.SearchRequest.BatchedReduceSize">
            <summary>The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.</summary>
        </member>
        <member name="P:Nest.SearchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SearchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SearchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SearchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.SearchRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.SearchRequest`1">
            <summary>Request parameters for Search <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html</pre></summary>
        </member>
        <member name="M:Nest.SearchRequest`1.#ctor">
            <summary>/_search<para><typeparamref name="T"/> describes an elasticsearch document type from which the index, type and id can be inferred</para></summary>
        </member>
        <member name="M:Nest.SearchRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_search</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.SearchRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_search</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SearchRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.DocvalueFields">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Routing">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Scroll">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SearchType">
            <summary>Search operation type</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Stats">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestField">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestMode">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestSize">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.SuggestText">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.TypedKeys">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.RequestCache">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.BatchedReduceSize">
            <summary>The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.SearchRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.SearchDescriptor`1">
            <summary>
            A descriptor wich describes a search operation for _search and _msearch
            </summary>
            <summary>descriptor for Search <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html</pre></summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Size(System.Int32)">
            <summary>
            The number of hits to return. Defaults to 10.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Take(System.Int32)">
            <summary>
            The number of hits to return. Alias for <see cref="M:Nest.SearchDescriptor`1.Size(System.Int32)"/>. Defaults to 10.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.From(System.Int32)">
            <summary>
            The starting from index of the hits to return. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Skip(System.Int32)">
            <summary>
            The starting from index of the hits to return. Alias for <see cref="M:Nest.SearchDescriptor`1.From(System.Int32)"/>. Defaults to 0.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Timeout(System.String)">
            <summary>
            A search timeout, bounding the search request to be executed within the
            specified time value and bail with the hits accumulated up
            to that point when expired. Defaults to no timeout.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Explain(System.Boolean)">
            <summary>
            Enables explanation for each hit on how its score was computed.
            (Use .DocumentsWithMetaData on the return results)
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Version(System.Boolean)">
            <summary>
            Returns a version for each search hit. (Use .DocumentsWithMetaData on the return results)
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.TrackScores(System.Boolean)">
            <summary>
            Make sure we keep calculating score even if we are sorting on a field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Profile(System.Boolean)">
            <summary>
            The Profile API provides detailed timing information about the execution of individual components in a query.
            It gives the user insight into how queries are executed at a low level so that the user can understand
            why certain queries are slow, and take steps to improve their slow queries.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.MinScore(System.Double)">
            <summary>
            Allows to filter out documents based on a minimum score:
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.TerminateAfter(System.Int64)">
            <summary>
            The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.
            If set, the response will have a boolean field terminated_early to indicate whether the query execution has actually terminated_early.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPrimary">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed only on the primary shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPrimaryFirst">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will go and be executed on the primary shard, and if not available (failover),
            will execute on other shards.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnLocalShard">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            The operation will prefer to be executed on a local allocated shard is possible.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnNode(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Restricts the search to execute only on a node with the provided node id
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExecuteOnPreferredNode(System.String)">
            <summary>
            <para>
            Controls a preference of which shard replicas to execute the search request on.
            By default, the operation is randomized between the each shard replicas.
            </para>
            <para>
            Prefers execution on the node with the provided node id if applicable.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.IndicesBoost(System.Func{Nest.FluentDictionary{Nest.IndexName,System.Double},Nest.FluentDictionary{Nest.IndexName,System.Double}})">
            <summary>
            Allows to configure different boost level per index when searching across
            more than one indices. This is very handy when hits coming from one index
            matter more than hits coming from another index (think social graph where each user has an index).
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.StoredFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <summary>
            Allows to selectively load specific fields for each document
            represented by a search hit. Defaults to load the internal _source field.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FielddataFields(System.Func{Nest.FieldsDescriptor{`0},Nest.IPromise{Nest.Fields}})">
            <summary>
            A comma-separated list of fields to return as the field data representation of a field for each hit
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Sort(System.Func{Nest.SortDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.ISort}}})">
            <summary>
            A comma-separated list of fields to return as the field data representation of a field for each hit
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SearchAfter(System.Collections.Generic.IList{System.Object})">
            <summary>
             Sort values that can be used to start returning results "after" any document in the result list.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SearchAfter(System.Object[])">
            <summary>
             Sort values that can be used to start returning results "after" any document in the result list.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Suggest(System.Func{Nest.SuggestContainerDescriptor{`0},Nest.IPromise{Nest.ISuggestContainer}})">
            <summary>
             The suggest feature suggests similar looking terms based on a provided text by using a suggester
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Query(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Describe the query to perform using a query descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Slice(System.Func{Nest.SlicedScrollDescriptor{`0},Nest.ISlicedScroll})">
            <summary>
            For scroll queries that return a lot of documents it is possible to split the scroll in multiple slices which can be consumed independently
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.MatchAll(System.Func{Nest.MatchAllQueryDescriptor,Nest.IMatchAllQuery})">
            <summary>
            Shortcut to default to a match all query
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.PostFilter(System.Func{Nest.QueryContainerDescriptor{`0},Nest.QueryContainer})">
            <summary>
            Filter search using a filter descriptor lambda
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Highlight(System.Func{Nest.HighlightDescriptor{`0},Nest.IHighlight})">
            <summary>
            Allow to highlight search results on one or more fields. The implementation uses the either lucene fast-vector-highlighter or highlighter.
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Collapse(System.Func{Nest.FieldCollapseDescriptor{`0},Nest.IFieldCollapse})">
            <summary>
            Allows to collapse search results based on field values.
            The collapsing is done by selecting only the top sorted document per collapse key.
            For instance the query below retrieves the best tweet for each user and sorts them by number of likes.
            <para>
            NOTE: The collapsing is applied to the top hits only and does not affect aggregations.
            </para>
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Rescore(System.Func{Nest.RescoringDescriptor{`0},Nest.IPromise{System.Collections.Generic.IList{Nest.IRescore}}})">
            <summary>
            Allows you to specify one or more queries to use for rescoring
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ConcreteTypeSelector(System.Func{System.Object,Nest.Hit{System.Object},System.Type})">
            <summary>
            Specify the concrete types to deserialize to when returning covariant search results
            </summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.#ctor">
            <summary>/_search</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.DocvalueFields(System.String[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.DocvalueFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Scroll(Nest.Time)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestField(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.BatchedReduceSize(System.Int64)">
            <summary>The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.SearchDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Shards">
            <summary>
            Gets the meta data about the shards on which the search query was executed.
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.HitsMetaData">
            <summary>
            Gets the meta data about the hits that match the search query criteria.
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Aggregations">
            <summary>
            Gets the collection of aggregations
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Profile">
            <summary>
            Gets the results of profiling the search query. Has a value only when
            <see cref="P:Nest.ISearchRequest.Profile"/> is set to <c>true</c> on the search request.
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Aggs">
            <summary>
            Gets the aggregations helper that can be used to more easily handle aggregation
            results.
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Suggest">
            <summary>
            Gets the suggester results.
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Took">
            <summary>
            Time in milliseconds for Elasticsearch to execute the search
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.TimedOut">
            <summary>
            Gets a value indicating whether the search timed out or not
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.TerminatedEarly">
            <summary>
            Gets a value indicating whether the search was terminated early
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.ScrollId">
            <summary>
            Gets the scroll id which can be passed to the Scroll API in order to retrieve the next batch
            of results. Has a value only when <see cref="P:Nest.SearchRequest`1.Scroll"/> is specified on the
            search request
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Total">
            <summary>
            Gets the total number of documents matching the search query criteria
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.MaxScore">
            <summary>
            Gets the maximum score for documents matching the search query criteria
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.NumberOfReducePhases">
            <summary>
            Number of times the server performed an incremental reduce phase
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Documents">
            <summary>
            Gets the documents inside the hits, by deserializing <see cref="P:Nest.IHitMetadata`1.Source"/> into T.
            <para>NOTE: if you use <see cref="P:Nest.ISearchRequest.StoredFields"/> on the search request,
            <see cref="P:Nest.ISearchResponse`1.Documents"/> will be empty and you should use <see cref="P:Nest.ISearchResponse`1.Fields"/>
            instead to get the field values. As an alternative to
            <see cref="P:Nest.ISearchResponse`1.Fields"/>, try source filtering using <see cref="P:Nest.ISearchRequest.Source"/> on the
            search request to return <see cref="P:Nest.ISearchResponse`1.Documents"/> with partial fields selected
            </para>
            </summary>
        </member>
        <member name="P:Nest.ISearchResponse`1.Hits">
            <summary>
            Gets the collection of hits that matched the query
            </summary>
            <value>
            The hits.
            </value>
        </member>
        <member name="P:Nest.ISearchResponse`1.Fields">
            <summary>
            Gets the field values inside the hits, when the search request uses
            <see cref="P:Nest.SearchRequest`1.StoredFields"/>.
            </summary>
        </member>
        <member name="P:Nest.SearchResponse`1.ScrollId">
            <summary>
            Only set when search type = scan and scroll specified
            </summary>
        </member>
        <member name="P:Nest.SearchResponse`1.Documents">
            <inheritdoc/>
        </member>
        <member name="P:Nest.SearchResponse`1.Fields">
            <inheritdoc/>
        </member>
        <member name="T:Nest.CompletionField">
            <summary>
            Convenience class for use when indexing completion fields.
            </summary>
        </member>
        <member name="M:Nest.SuggestContainerDescriptor`1.Term(System.String,System.Func{Nest.TermSuggesterDescriptor{`0},Nest.ITermSuggester})">
            <summary>
            The term suggester suggests terms based on edit distance. The provided suggest text is analyzed before terms are suggested.
            The suggested terms are provided per analyzed suggest text token. The term suggester doesn’t take the query into account that is part of request.
            </summary>
        </member>
        <member name="M:Nest.SuggestContainerDescriptor`1.Phrase(System.String,System.Func{Nest.PhraseSuggesterDescriptor{`0},Nest.IPhraseSuggester})">
            <summary>
            The phrase suggester adds additional logic on top of the term suggester to select entire corrected phrases
            instead of individual tokens weighted based on ngram-langugage models.
            </summary>
        </member>
        <member name="M:Nest.SuggestContainerDescriptor`1.Completion(System.String,System.Func{Nest.CompletionSuggesterDescriptor{`0},Nest.ICompletionSuggester})">
            <summary>
            The completion suggester is a so-called prefix suggester.
            It does not do spell correction like the term or phrase suggesters but allows basic auto-complete functionality.
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Frequency">
            <summary>
            Term suggester only
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Index">
            <summary>
            Completion suggester only, the index of the completed document
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Type">
            <summary>
            Completion suggester only, the type of the completed document
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Id">
            <summary>
            Completion suggester only, the id of the completed document
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Source">
            <summary>
            Completion suggester only, the source of the completed document
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Contexts">
            <summary>
            Completion suggester only, the contexts associated with the completed document
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.Highlighted">
            <summary>
            Phrase suggester only, higlighted version of text
            </summary>
        </member>
        <member name="P:Nest.SuggestOption`1.CollateMatch">
            <summary>
            Phrase suggestions only, true if matching documents for the collate query were found,
            </summary>
        </member>
        <member name="T:Nest.SuggestRequest">
            <summary>Request parameters for Suggest <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html</pre></summary>
        </member>
        <member name="M:Nest.SuggestRequest.#ctor">
            <summary>/_suggest</summary>
        </member>
        <member name="M:Nest.SuggestRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_suggest</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SuggestRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SuggestRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SuggestRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SuggestRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SuggestRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SuggestRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SuggestRequest`1">
            <summary>Request parameters for Suggest <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html</pre></summary>
        </member>
        <member name="M:Nest.SuggestRequest`1.#ctor">
            <summary>/_suggest. Will infer the index from the generic type</summary>
        </member>
        <member name="M:Nest.SuggestRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_suggest</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="P:Nest.SuggestRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.Preference">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.SuggestRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.SuggestDescriptor`1">
            <summary>descriptor for Suggest <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html</pre></summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.GlobalText(System.String)">
            <summary>
            To avoid repetition of the suggest text, it is possible to define a global text.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Term(System.String,System.Func{Nest.TermSuggesterDescriptor{`0},Nest.ITermSuggester})">
            <summary>
            The term suggester suggests terms based on edit distance. The provided suggest text is analyzed before terms are suggested.
            The suggested terms are provided per analyzed suggest text token. The term suggester doesn’t take the query into account that is part of request.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Phrase(System.String,System.Func{Nest.PhraseSuggesterDescriptor{`0},Nest.IPhraseSuggester})">
            <summary>
            The phrase suggester adds additional logic on top of the term suggester to select entire corrected phrases
            instead of individual tokens weighted based on ngram-langugage models.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Completion(System.String,System.Func{Nest.CompletionSuggesterDescriptor{`0},Nest.ICompletionSuggester})">
            <summary>
            The completion suggester is a so-called prefix suggester.
            It does not do spell correction like the term or phrase suggesters but allows basic auto-complete functionality.
            </summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.#ctor">
            <summary>/_suggest. Will infer the index from the generic type</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.SuggestDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ValidateQueryRequest">
            <summary>Request parameters for IndicesValidateQueryForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html</pre></summary>
        </member>
        <member name="M:Nest.ValidateQueryRequest.#ctor">
            <summary>/_validate/query</summary>
        </member>
        <member name="M:Nest.ValidateQueryRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ValidateQueryRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Explain">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Rewrite">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.AllShards">
            <summary>Execute validation on all shards instead of one random shard per index</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.ValidateQueryRequest`1">
            <summary>Request parameters for IndicesValidateQueryForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html</pre></summary>
        </member>
        <member name="M:Nest.ValidateQueryRequest`1.#ctor">
            <summary>/_validate/query<para><typeparamref name="T"/> describes an elasticsearch document type from which the index, type and id can be inferred</para></summary>
        </member>
        <member name="M:Nest.ValidateQueryRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ValidateQueryRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_validate/query</summary>
            <param name="index">Optional, accepts null</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Explain">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.IgnoreUnavailable">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.AllowNoIndices">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.ExpandWildcards">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.OperationThreading">
            <summary>TODO: ?</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.QueryOnQueryString">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Analyzer">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.AnalyzeWildcard">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.DefaultOperator">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Df">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Lenient">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Rewrite">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.AllShards">
            <summary>Execute validation on all shards instead of one random shard per index</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.ValidateQueryRequest`1.LowercaseExpandedTerms">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Nest.ValidateQueryDescriptor`1">
            <summary>descriptor for IndicesValidateQueryForAll <pre>https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html</pre></summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.#ctor">
            <summary>/_validate/query</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Explain(System.Boolean)">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Rewrite(System.Boolean)">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.AllShards(System.Boolean)">
            <summary>Execute validation on all shards instead of one random shard per index</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.ValidateQueryDescriptor`1.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="P:Nest.ValidateQueryResponse.Explanations">
            <summary>
            Gets the explanations if Explain() was set.
            </summary>
        </member>
        <member name="T:Nest.GraphExploreRequest">
            <summary>Request parameters for XpackGraphExplore <pre>https://www.elastic.co/guide/en/graph/current/explore.html</pre></summary>
        </member>
        <member name="M:Nest.GraphExploreRequest.#ctor(Nest.Indices)">
             <summary>/{index}/_xpack/_graph/_explore</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.GraphExploreRequest.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_xpack/_graph/_explore</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GraphExploreRequest.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GraphExploreRequest`1">
            <summary>Request parameters for XpackGraphExplore <pre>https://www.elastic.co/guide/en/graph/current/explore.html</pre></summary>
        </member>
        <member name="M:Nest.GraphExploreRequest`1.#ctor(Nest.Indices)">
             <summary>/{index}/_xpack/_graph/_explore</summary>
            <param name="index">this parameter is required</param>
        </member>
        <member name="M:Nest.GraphExploreRequest`1.#ctor(Nest.Indices,Nest.Types)">
             <summary>/{index}/{type}/_xpack/_graph/_explore</summary>
            <param name="index">this parameter is required</param>		
            <param name="type">Optional, accepts null</param>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Routing">
            <summary>Specific routing value</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Timeout">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GraphExploreRequest`1.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GraphExploreDescriptor`1">
            <summary>descriptor for XpackGraphExplore <pre>https://www.elastic.co/guide/en/graph/current/explore.html</pre></summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.#ctor(Nest.Indices)">
             <summary>/{index}/_xpack/_graph/_explore</summary>
            <param name="index"> this parameter is required</param>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Index(Nest.Indices)">
            <summary>A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Index``1">
            <summary>a shortcut into calling Index(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.AllIndices">
            <summary>A shortcut into calling Index(Indices.All)</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Type(Nest.Types)">
            <summary>A comma-separated list of document types to search; leave empty to perform the operation on all types</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Type``1">
            <summary>a shortcut into calling Type(typeof(TOther))</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.AllTypes">
            <summary>a shortcut into calling Type(Types.All)</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Timeout(Nest.Time)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GraphExploreDescriptor`1.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.XPackInfoRequest">
            <summary>Request parameters for XpackInfo <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</pre></summary>
        </member>
        <member name="P:Nest.XPackInfoRequest.Human">
            <summary>Presents additional info for humans (feature descriptions and X-Pack tagline)</summary>
        </member>
        <member name="P:Nest.XPackInfoRequest.Categories">
            <summary>Comma-separated list of info categories. Can be any of: build, license, features</summary>
        </member>
        <member name="P:Nest.XPackInfoRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.XPackInfoRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.XPackInfoRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.XPackInfoRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.XPackInfoDescriptor">
            <summary>descriptor for XpackInfo <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html</pre></summary>
        </member>
        <member name="M:Nest.XPackInfoDescriptor.Human(System.Boolean)">
            <summary>Presents additional info for humans (feature descriptions and X-Pack tagline)</summary>
        </member>
        <member name="M:Nest.XPackInfoDescriptor.Categories(System.String[])">
            <summary>Comma-separated list of info categories. Can be any of: build, license, features</summary>
        </member>
        <member name="M:Nest.XPackInfoDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.XPackInfoDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.XPackInfoDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.XPackInfoDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.XPackUsageRequest">
            <summary>Request parameters for XpackUsage <pre>Retrieve information about xpack features usage</pre></summary>
        </member>
        <member name="P:Nest.XPackUsageRequest.MasterTimeout">
            <summary>Specify timeout for watch write operation</summary>
        </member>
        <member name="P:Nest.XPackUsageRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.XPackUsageRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.XPackUsageRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.XPackUsageRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.XPackUsageRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.XPackUsageDescriptor">
            <summary>descriptor for XpackUsage <pre>Retrieve information about xpack features usage</pre></summary>
        </member>
        <member name="M:Nest.XPackUsageDescriptor.MasterTimeout(Nest.Time)">
            <summary>Specify timeout for watch write operation</summary>
        </member>
        <member name="M:Nest.XPackUsageDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.XPackUsageDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.XPackUsageDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.XPackUsageDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.XPackUsageDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteLicenseRequest">
            <summary>Request parameters for XpackLicenseDelete <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteLicenseRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteLicenseDescriptor">
            <summary>descriptor for XpackLicenseDelete <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteLicenseDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetLicenseRequest">
            <summary>Request parameters for XpackLicenseGet <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.Local">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetLicenseRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetLicenseDescriptor">
            <summary>descriptor for XpackLicenseGet <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetLicenseDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.LicenseAcknowledgement">
            <summary>
            If the license is valid but is older or has less capabilities this will list out the reasons why a resubmission with acknowledge=true is required
            </summary>
        </member>
        <member name="T:Nest.PostLicenseRequest">
            <summary>Request parameters for XpackLicensePost <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.Acknowledge">
            <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PostLicenseRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PostLicenseDescriptor">
            <summary>descriptor for XpackLicensePost <pre>https://www.elastic.co/guide/en/shield/current/license-management.html</pre></summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.Acknowledge(System.Boolean)">
            <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PostLicenseDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IPostLicenseResponse.Acknowledge">
            <summary>
            If the license is valid but is older or has less capabilities this will list out the reasons why a resubmission with acknowledge=true is required.
            null if no acknowledge resubmission is needed
            </summary>
        </member>
        <member name="T:Nest.AuthenticateRequest">
            <summary>Request parameters for XpackSecurityAuthenticate <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html</pre></summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.AuthenticateRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.AuthenticateDescriptor">
            <summary>descriptor for XpackSecurityAuthenticate <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html</pre></summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.AuthenticateDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearCachedRealmsRequest">
            <summary>Request parameters for XpackSecurityClearCachedRealms <pre>https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsRequest.#ctor(Nest.Names)">
             <summary>/_xpack/security/realm/{realms}/_clear_cache</summary>
            <param name="realms">this parameter is required</param>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.Usernames">
            <summary>Comma-separated list of usernames to clear from the cache</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClearCachedRealmsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearCachedRealmsDescriptor">
            <summary>descriptor for XpackSecurityClearCachedRealms <pre>https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.#ctor(Nest.Names)">
             <summary>/_xpack/security/realm/{realms}/_clear_cache</summary>
            <param name="realms"> this parameter is required</param>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.Usernames(System.String[])">
            <summary>Comma-separated list of usernames to clear from the cache</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClearCachedRealmsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRoleMappingRequest">
            <summary>Request parameters for XpackSecurityDeleteRoleMapping <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping</pre></summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/role_mapping/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRoleMappingRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.DeleteRoleMappingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteRoleMappingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteRoleMappingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteRoleMappingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteRoleMappingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRoleMappingDescriptor">
            <summary>descriptor for XpackSecurityDeleteRoleMapping <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping</pre></summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.#ctor(Nest.Name)">
             <summary>/_xpack/security/role_mapping/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteRoleMappingDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRoleMappingRequest">
            <summary>Request parameters for XpackSecurityGetRoleMapping <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping</pre></summary>
        </member>
        <member name="M:Nest.GetRoleMappingRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/role_mapping/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetRoleMappingRequest.#ctor">
            <summary>/_xpack/security/role_mapping</summary>
        </member>
        <member name="P:Nest.GetRoleMappingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetRoleMappingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetRoleMappingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetRoleMappingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetRoleMappingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRoleMappingDescriptor">
            <summary>descriptor for XpackSecurityGetRoleMapping <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping</pre></summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.#ctor">
            <summary>/_xpack/security/role_mapping/{name}</summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.Name(Nest.Name)">
            <summary>Role-Mapping name</summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetRoleMappingDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutRoleMappingRequest">
            <summary>Request parameters for XpackSecurityPutRoleMapping <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping</pre></summary>
        </member>
        <member name="M:Nest.PutRoleMappingRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/role_mapping/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutRoleMappingRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.PutRoleMappingRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutRoleMappingRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutRoleMappingRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutRoleMappingRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutRoleMappingRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutRoleMappingDescriptor">
            <summary>descriptor for XpackSecurityPutRoleMapping <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping</pre></summary>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Roles(Nest.RoleMappingRuleBase)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Roles(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Roles(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Rules(System.Func{Nest.RoleMappingRuleDescriptor,Nest.RoleMappingRuleBase})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Rules(Nest.RoleMappingRuleBase)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.RunAs(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.RunAs(System.String[])">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Enabled(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Metadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.#ctor(Nest.Name)">
             <summary>/_xpack/security/role_mapping/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutRoleMappingDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearCachedRolesRequest">
            <summary>Request parameters for XpackSecurityClearCachedRoles <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRolesRequest.#ctor(Nest.Names)">
             <summary>/_xpack/security/role/{name}/_clear_cache</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ClearCachedRolesRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ClearCachedRolesDescriptor">
            <summary>descriptor for XpackSecurityClearCachedRoles <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache</pre></summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.#ctor(Nest.Names)">
             <summary>/_xpack/security/role/{name}/_clear_cache</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ClearCachedRolesDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRoleRequest">
            <summary>Request parameters for XpackSecurityDeleteRole <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role</pre></summary>
        </member>
        <member name="M:Nest.DeleteRoleRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/role/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteRoleRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.DeleteRoleRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteRoleRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteRoleRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteRoleRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteRoleRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteRoleDescriptor">
            <summary>descriptor for XpackSecurityDeleteRole <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role</pre></summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.#ctor(Nest.Name)">
             <summary>/_xpack/security/role/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteRoleDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRoleRequest">
            <summary>Request parameters for XpackSecurityGetRole <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role</pre></summary>
        </member>
        <member name="M:Nest.GetRoleRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/role/{name}</summary>
            <param name="name">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetRoleRequest.#ctor">
            <summary>/_xpack/security/role</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetRoleRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetRoleDescriptor">
            <summary>descriptor for XpackSecurityGetRole <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role</pre></summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.#ctor">
            <summary>/_xpack/security/role/{name}</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.Name(Nest.Name)">
            <summary>Role name</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetRoleDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutRoleRequest">
            <summary>Request parameters for XpackSecurityPutRole <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role</pre></summary>
        </member>
        <member name="M:Nest.PutRoleRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/role/{name}</summary>
            <param name="name">this parameter is required</param>
        </member>
        <member name="P:Nest.PutRoleRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.PutRoleRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutRoleRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutRoleRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutRoleRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutRoleRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutRoleDescriptor">
            <summary>descriptor for XpackSecurityPutRole <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role</pre></summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Indices(System.Collections.Generic.IEnumerable{Nest.IIndicesPrivileges})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Indices(System.Func{Nest.IndicesPrivilegesDescriptor,Nest.IPromise{System.Collections.Generic.IList{Nest.IIndicesPrivileges}}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Metadata(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutRoleDescriptor.#ctor(Nest.Name)">
             <summary>/_xpack/security/role/{name}</summary>
            <param name="name"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutRoleDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ChangePasswordRequest">
            <summary>Request parameters for XpackSecurityChangePassword <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html</pre></summary>
        </member>
        <member name="M:Nest.ChangePasswordRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}/_password</summary>
            <param name="username">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ChangePasswordRequest.#ctor">
            <summary>/_xpack/security/user/_password</summary>
        </member>
        <member name="P:Nest.ChangePasswordRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.ChangePasswordRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ChangePasswordRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ChangePasswordRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ChangePasswordRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ChangePasswordRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ChangePasswordDescriptor">
            <summary>descriptor for XpackSecurityChangePassword <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html</pre></summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.#ctor">
            <summary>/_xpack/security/user/{username}/_password</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.Username(Nest.Name)">
            <summary>The username of the user to change the password for</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ChangePasswordDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteUserRequest">
            <summary>Request parameters for XpackSecurityDeleteUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user</pre></summary>
        </member>
        <member name="M:Nest.DeleteUserRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}</summary>
            <param name="username">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteUserRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.DeleteUserRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteUserRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteUserRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteUserRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteUserRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteUserDescriptor">
            <summary>descriptor for XpackSecurityDeleteUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user</pre></summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}</summary>
            <param name="username"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteUserDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DisableUserRequest">
            <summary>Request parameters for XpackSecurityDisableUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html</pre></summary>
        </member>
        <member name="M:Nest.DisableUserRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}/_disable</summary>
            <param name="username">Optional, accepts null</param>
        </member>
        <member name="P:Nest.DisableUserRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.DisableUserRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DisableUserRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DisableUserRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DisableUserRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DisableUserRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DisableUserDescriptor">
            <summary>descriptor for XpackSecurityDisableUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html</pre></summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.#ctor">
            <summary>/_xpack/security/user/{username}/_disable</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.Username(Nest.Name)">
            <summary>The username of the user to disable</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DisableUserDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.EnableUserRequest">
            <summary>Request parameters for XpackSecurityEnableUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html</pre></summary>
        </member>
        <member name="M:Nest.EnableUserRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}/_enable</summary>
            <param name="username">Optional, accepts null</param>
        </member>
        <member name="P:Nest.EnableUserRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.EnableUserRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.EnableUserRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.EnableUserRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.EnableUserRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.EnableUserRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.EnableUserDescriptor">
            <summary>descriptor for XpackSecurityEnableUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html</pre></summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.#ctor">
            <summary>/_xpack/security/user/{username}/_enable</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.Username(Nest.Name)">
            <summary>The username of the user to enable</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.EnableUserDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetUserAccessTokenRequest">
            <summary>Request parameters for XpackSecurityGetToken <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token</pre></summary>
        </member>
        <member name="P:Nest.GetUserAccessTokenRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetUserAccessTokenRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetUserAccessTokenRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetUserAccessTokenRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetUserAccessTokenRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetUserAccessTokenDescriptor">
            <summary>descriptor for XpackSecurityGetToken <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token</pre></summary>
        </member>
        <member name="M:Nest.GetUserAccessTokenDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetUserAccessTokenDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetUserAccessTokenDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetUserAccessTokenDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetUserAccessTokenDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetUserRequest">
            <summary>Request parameters for XpackSecurityGetUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user</pre></summary>
        </member>
        <member name="M:Nest.GetUserRequest.#ctor(Nest.Names)">
             <summary>/_xpack/security/user/{username}</summary>
            <param name="username">Optional, accepts null</param>
        </member>
        <member name="M:Nest.GetUserRequest.#ctor">
            <summary>/_xpack/security/user</summary>
        </member>
        <member name="P:Nest.GetUserRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetUserRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetUserRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetUserRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetUserRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetUserDescriptor">
            <summary>descriptor for XpackSecurityGetUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user</pre></summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.#ctor">
            <summary>/_xpack/security/user/{username}</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.Username(Nest.Names)">
            <summary>A comma-separated list of usernames</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetUserDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.InvalidateUserAccessTokenRequest">
            <summary>Request parameters for XpackSecurityInvalidateToken <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token</pre></summary>
        </member>
        <member name="P:Nest.InvalidateUserAccessTokenRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.InvalidateUserAccessTokenRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.InvalidateUserAccessTokenRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.InvalidateUserAccessTokenRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.InvalidateUserAccessTokenRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.InvalidateUserAccessTokenDescriptor">
            <summary>descriptor for XpackSecurityInvalidateToken <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token</pre></summary>
        </member>
        <member name="M:Nest.InvalidateUserAccessTokenDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.InvalidateUserAccessTokenDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.InvalidateUserAccessTokenDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.InvalidateUserAccessTokenDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.InvalidateUserAccessTokenDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutUserRequest">
            <summary>Request parameters for XpackSecurityPutUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user</pre></summary>
        </member>
        <member name="M:Nest.PutUserRequest.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}</summary>
            <param name="username">this parameter is required</param>
        </member>
        <member name="P:Nest.PutUserRequest.Refresh">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="P:Nest.PutUserRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutUserRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutUserRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutUserRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutUserRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutUserDescriptor">
            <summary>descriptor for XpackSecurityPutUser <pre>https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user</pre></summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.#ctor(Nest.Name)">
             <summary>/_xpack/security/user/{username}</summary>
            <param name="username"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutUserDescriptor.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutUserDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.AcknowledgeWatchRequest">
            <summary>Request parameters for XpackWatcherAckWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</pre></summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{watch_id}/_ack</summary>
            <param name="watch_id">this parameter is required</param>
        </member>
        <member name="M:Nest.AcknowledgeWatchRequest.#ctor(Nest.Id,Nest.ActionIds)">
             <summary>/_xpack/watcher/watch/{watch_id}/_ack/{action_id}</summary>
            <param name="watch_id">this parameter is required</param>		
            <param name="action_id">Optional, accepts null</param>
        </member>
        <member name="P:Nest.AcknowledgeWatchRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.AcknowledgeWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.AcknowledgeWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.AcknowledgeWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.AcknowledgeWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.AcknowledgeWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.AcknowledgeWatchDescriptor">
            <summary>descriptor for XpackWatcherAckWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html</pre></summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{watch_id}/_ack</summary>
            <param name="watch_id"> this parameter is required</param>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.ActionId(Nest.ActionIds)">
            <summary>A comma-separated list of the action ids to be acked</summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.AcknowledgeWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Authentication(System.Func{Nest.HttpInputAuthenticationDescriptor,Nest.IHttpInputAuthentication})">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Body(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.ConnectionTimeout(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Headers(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Headers(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Host(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Method(Nest.HttpInputMethod)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Path(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Params(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Port(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Proxy(System.Func{Nest.HttpInputProxyDescriptor,Nest.IHttpInputProxy})">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.ReadTimeout(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Scheme(Nest.ConnectionScheme)">
            <inheritdoc />
        </member>
        <member name="M:Nest.WebhookActionDescriptor.Url(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Nest.ActivateWatchRequest">
            <summary>Request parameters for XpackWatcherActivateWatch <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</pre></summary>
        </member>
        <member name="M:Nest.ActivateWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{watch_id}/_activate</summary>
            <param name="watch_id">this parameter is required</param>
        </member>
        <member name="P:Nest.ActivateWatchRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.ActivateWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ActivateWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ActivateWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ActivateWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ActivateWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ActivateWatchDescriptor">
            <summary>descriptor for XpackWatcherActivateWatch <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html</pre></summary>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{watch_id}/_activate</summary>
            <param name="watch_id"> this parameter is required</param>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ActivateWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IConditionContainer">
            <summary>
            Conditions for a watch
            </summary>
        </member>
        <member name="P:Nest.IConditionContainer.Always">
            <summary>
            Forces the watch actions to be executed unless they are throttled.
            </summary>
        </member>
        <member name="P:Nest.IConditionContainer.Never">
            <summary>
            Watch actions are never executed when the watch is triggered.
            The watch input is executed, a record is added to the watch history,
            and the watch execution ends.
            </summary>
            <remarks>
            This condition is generally used for testing.
            </remarks>
        </member>
        <member name="P:Nest.IConditionContainer.Compare">
            <summary>
            Performs a simple comparison against a value in the watch payload.
            </summary>
        </member>
        <member name="P:Nest.IConditionContainer.ArrayCompare">
            <summary>
            Compares an array of values in the execution context to a given value.
            </summary>
        </member>
        <member name="P:Nest.IConditionContainer.Script">
            <summary>
            A watch condition that evaluates a script.
            The default scripting language is groovy.
            You can use any of the scripting languages supported by Elasticsearch as long as the
            language supports evaluating expressions to Boolean values.
            Note that the mustache and expression languages are too limited to be used by this condition.
            </summary>
            <remarks>
            For Groovy, you must explicitly enable dynamic scripts in elasticsearch.yml
            to use inline or stored scripts.
            To enable groovy scripting for watches only,
            you can set script.engine.groovy.inline.xpack_watch: true.
            </remarks>
        </member>
        <member name="T:Nest.ConditionContainer">
            <inheritdoc />
        </member>
        <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Always">
            <inheritdoc />
        </member>
        <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Never">
            <inheritdoc />
        </member>
        <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Script">
            <inheritdoc />
        </member>
        <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#Compare">
            <inheritdoc />
        </member>
        <member name="P:Nest.ConditionContainer.Nest#IConditionContainer#ArrayCompare">
            <inheritdoc />
        </member>
        <member name="T:Nest.ConditionDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.ConditionDescriptor.Always">
            <inheritdoc />
        </member>
        <member name="M:Nest.ConditionDescriptor.Never">
            <inheritdoc />
        </member>
        <member name="M:Nest.ConditionDescriptor.Compare(System.Func{Nest.CompareConditionDescriptor,Nest.ICompareCondition})">
            <inheritdoc />
        </member>
        <member name="M:Nest.ConditionDescriptor.ArrayCompare(System.Func{Nest.ArrayCompareConditionDescriptor,Nest.IArrayCompareCondition})">
            <inheritdoc />
        </member>
        <member name="M:Nest.ConditionDescriptor.Script(System.Func{Nest.ScriptConditionDescriptor,Nest.IScriptCondition})">
            <inheritdoc />
        </member>
        <member name="T:Nest.DeactivateWatchRequest">
            <summary>Request parameters for XpackWatcherDeactivateWatch <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</pre></summary>
        </member>
        <member name="M:Nest.DeactivateWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{watch_id}/_deactivate</summary>
            <param name="watch_id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeactivateWatchRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeactivateWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeactivateWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeactivateWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeactivateWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeactivateWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeactivateWatchDescriptor">
            <summary>descriptor for XpackWatcherDeactivateWatch <pre>https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html</pre></summary>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{watch_id}/_deactivate</summary>
            <param name="watch_id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeactivateWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteWatchRequest">
            <summary>Request parameters for XpackWatcherDeleteWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.DeleteWatchRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.DeleteWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.DeleteWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.DeleteWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.DeleteWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.DeleteWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.DeleteWatchDescriptor">
            <summary>descriptor for XpackWatcherDeleteWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html</pre></summary>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.DeleteWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.TriggerData">
            <summary>
            This structure will be parsed as a trigger event and used for the watch execution.
            </summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.IgnoreCondition">
            <summary>
            If this is set to true the watch execution will use the Always Condition.
            </summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.RecordExecution">
            <summary>
            If this is set to true the WatchRecord generated by executing the watch will be persisted
            to the .watcher_history index for the current time.
            Also the status of the watch is updated,
            possbily throttling subsequent executions.
            </summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.AlternativeInput">
            <summary>
            When present, the watch uses this object as a payload
            instead of executing its own input.
            </summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.ActionModes">
            <summary>
            Determines how to handle the watch actions as part of the watch execution.
            </summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.SimulatedActions">
             <summary>
            This field can either be a list of action ids or the string _all.
             If _all is set or an action that is executed by the watch appears in this list
             it will be executed in simulated mode.
             </summary>
        </member>
        <member name="P:Nest.IExecuteWatchRequest.Watch">
            <summary>
            When present, this watch is used instead of the one specified in the request.
            This watch is not persisted to the index and record_execution cannot be set.
            </summary>
        </member>
        <member name="T:Nest.ExecuteWatchRequest">
            <summary>Request parameters for XpackWatcherExecuteWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</pre></summary>
        </member>
        <member name="M:Nest.ExecuteWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}/_execute</summary>
            <param name="id">Optional, accepts null</param>
        </member>
        <member name="M:Nest.ExecuteWatchRequest.#ctor">
            <summary>/_xpack/watcher/watch/_execute</summary>
        </member>
        <member name="P:Nest.ExecuteWatchRequest.Debug">
            <summary>indicates whether the watch should execute in debug mode</summary>
        </member>
        <member name="P:Nest.ExecuteWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.ExecuteWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.ExecuteWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.ExecuteWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.ExecuteWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.ExecuteWatchDescriptor">
            <summary>descriptor for XpackWatcherExecuteWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html</pre></summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.#ctor">
            <summary>/_xpack/watcher/watch/{id}/_execute</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.Id(Nest.Id)">
            <summary>Watch ID</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.Debug(System.Boolean)">
            <summary>indicates whether the watch should execute in debug mode</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.ExecuteWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="F:Nest.ActionExecutionMode.Simulate">
             <summary>
            The action will be simulated (not actually executed)
             and it will be throttled if needed.
             </summary>
        </member>
        <member name="F:Nest.ActionExecutionMode.ForceSimulate">
            <summary>
            The action will be simulated (not actually executed) and it will
            not be throttled.
            </summary>
        </member>
        <member name="F:Nest.ActionExecutionMode.Execute">
            <summary>
            The action will be executed and it will be throttled if needed.
            </summary>
        </member>
        <member name="F:Nest.ActionExecutionMode.ForceExecute">
            <summary>
            The action will be executed and it will not be throttled.
            </summary>
        </member>
        <member name="F:Nest.ActionExecutionMode.Skip">
            <summary>
            The action will be skipped (it won't be executed nor simulated)
            - effectively it will be forcefully throttled
            </summary>
        </member>
        <member name="T:Nest.GetWatchRequest">
            <summary>Request parameters for XpackWatcherGetWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</pre></summary>
        </member>
        <member name="M:Nest.GetWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.GetWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.GetWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.GetWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.GetWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.GetWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.GetWatchDescriptor">
            <summary>descriptor for XpackWatcherGetWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html</pre></summary>
        </member>
        <member name="M:Nest.GetWatchDescriptor.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.GetWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.GetWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.GetWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.GetWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.GetWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.IChainInput">
            <summary>
             input to load data from multiple sources into the watch execution context when the watch is triggered.
            </summary>
        </member>
        <member name="P:Nest.IChainInput.Inputs">
            <summary>
            The input sources
            </summary>
        </member>
        <member name="T:Nest.ChainInput">
            <inheritdoc />
        </member>
        <member name="P:Nest.ChainInput.Inputs">
            <inheritdoc />
        </member>
        <member name="T:Nest.ChainInputDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.ChainInputDescriptor.Input(System.String,System.Func{Nest.InputDescriptor,Nest.InputContainer})">
            <inheritdoc />
        </member>
        <member name="T:Nest.IHttpInput">
            <summary>
            input to submit a request to an HTTP endpoint and load the response
            into the watch execution context when a watch is triggered.
            </summary>
        </member>
        <member name="P:Nest.IHttpInput.Extract">
            <summary>
            A array of json keys to extract from the input response and use as payload.
            In cases when an input generates a large response this can be used to filter
            the relevant piece of the response to be used as payload.
            </summary>
        </member>
        <member name="P:Nest.IHttpInput.Request">
            <summary>
            The HTTP input request details
            </summary>
        </member>
        <member name="P:Nest.IHttpInput.ResponseContentType">
            <summary>
            The expected content type the response body will contain.
            If the format is text, <see cref="P:Nest.HttpInput.Extract"/> cannot exist.
            Note that this overrides the header that is returned in the HTTP response.
            </summary>
        </member>
        <member name="T:Nest.HttpInput">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInput.Extract">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInput.Request">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInput.ResponseContentType">
            <inheritdoc />
        </member>
        <member name="T:Nest.HttpInputDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputDescriptor.Request(System.Func{Nest.HttpInputRequestDescriptor,Nest.IHttpInputRequest})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputDescriptor.Extract(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputDescriptor.Extract(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputDescriptor.ResponseContentType(Nest.ResponseContentType)">
            <inheritdoc />
        </member>
        <member name="T:Nest.IHttpInputAuthentication">
            <summary>
            The Authentication mechanism for a request to a HTTP endpoint
            </summary>
        </member>
        <member name="P:Nest.IHttpInputAuthentication.Basic">
            <summary>
            Basic Authentication credentials
            </summary>
        </member>
        <member name="T:Nest.HttpInputAuthentication">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputAuthentication.Basic">
            <inheritdoc />
        </member>
        <member name="T:Nest.HttpInputAuthenticationDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputAuthenticationDescriptor.Basic(System.Func{Nest.HttpInputBasicAuthenticationDescriptor,Nest.IHttpInputBasicAuthentication})">
            <inheritdoc />
        </member>
        <member name="T:Nest.IHttpInputBasicAuthentication">
            <summary>
            Basic Authentication credentials
            </summary>
        </member>
        <member name="P:Nest.IHttpInputBasicAuthentication.Username">
            <summary>
            Username for Basic Authentication
            </summary>
        </member>
        <member name="P:Nest.IHttpInputBasicAuthentication.Password">
            <summary>
            Password for Basic Authentication
            </summary>
        </member>
        <member name="T:Nest.HttpInputBasicAuthentication">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputBasicAuthentication.Username">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputBasicAuthentication.Password">
            <inheritdoc />
        </member>
        <member name="T:Nest.HttpInputBasicAuthenticationDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputBasicAuthenticationDescriptor.Username(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputBasicAuthenticationDescriptor.Password(System.String)">
            <inheritdoc />
        </member>
        <member name="P:Nest.IHttpInputRequest.Scheme">
            <summary>
            The url scheme
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Port">
            <summary>
            The port that the http service is listening on.
            This is required
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Host">
            <summary>
            The host to connect to. This is required
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Path">
            <summary>
            The url path. The path can be static text or contain mustache templates.
            Url query string parameters must be specified with <see cref="P:Nest.IHttpInputRequest.Params"/>
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Method">
            <summary>
            The HTTP method. Defaults to <see cref="F:Nest.HttpInputMethod.Get"/>
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Headers">
            <summary>
            The HTTP request headers.
            The header values can be static text or include mustache templates.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Params">
            <summary>
            The url query string parameters.
            The parameter values can be static text or contain mustache templates.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Url">
            <summary>
            Sets the scheme, host, port and params all at once by specifying a real URL.
            May not be combined with <see cref="P:Nest.IHttpInputRequest.Scheme"/>, <see cref="P:Nest.IHttpInputRequest.Host"/>,
            <see cref="P:Nest.IHttpInputRequest.Port"/> and <see cref="P:Nest.IHttpInputRequest.Params"/>.
            As if parameters are set, specifying them individually might overwrite them.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Authentication">
            <summary>
            Authentication related HTTP headers.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Proxy">
            <summary>
            The proxy to use when connecting to the host.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.ConnectionTimeout">
            <summary>
            The timeout for setting up the http connection.
            If the connection could not be set up within this time,
            the input will timeout and fail.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.ReadTimeout">
            <summary>
            The timeout for reading data from http connection.
            If no response was received within this time,
            the input will timeout and fail.
            </summary>
        </member>
        <member name="P:Nest.IHttpInputRequest.Body">
            <summary>
            The HTTP request body.
            The body can be static text or include mustache templates.
            </summary>
        </member>
        <member name="P:Nest.HttpInputRequest.Scheme">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Port">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Host">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Path">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Method">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Headers">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Params">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Url">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Authentication">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Proxy">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.ConnectionTimeout">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.ReadTimeout">
            <inheritdoc />
        </member>
        <member name="P:Nest.HttpInputRequest.Body">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Authentication(System.Func{Nest.HttpInputAuthenticationDescriptor,Nest.IHttpInputAuthentication})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Body(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.ConnectionTimeout(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Headers(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Headers(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Host(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Method(Nest.HttpInputMethod)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Path(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Params(System.Func{Nest.FluentDictionary{System.String,System.String},Nest.FluentDictionary{System.String,System.String}})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Params(System.Collections.Generic.Dictionary{System.String,System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Port(System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Proxy(System.Func{Nest.HttpInputProxyDescriptor,Nest.IHttpInputProxy})">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.ReadTimeout(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Scheme(Nest.ConnectionScheme)">
            <inheritdoc />
        </member>
        <member name="M:Nest.HttpInputRequestDescriptor.Url(System.String)">
            <inheritdoc />
        </member>
        <member name="T:Nest.ISearchInput">
            <summary>
            An input to load the results of an Elasticsearch search request into the execution
            context when a watch is triggered.
            </summary>
        </member>
        <member name="P:Nest.ISearchInput.Extract">
            <summary>
            A array of json keys to extract from the search response and load as the payload.
            When a search generates a large response, you can use extract
            to select the relevant fields instead of loading the entire response
            </summary>
        </member>
        <member name="P:Nest.ISearchInput.Request">
            <summary>
            The search request details
            </summary>
        </member>
        <member name="P:Nest.ISearchInput.Timeout">
            <summary>
            The timeout for waiting for the search api call to return.
            If no response is returned within this time, the search input times out and fails.
            This setting overrides the default search operations timeouts.
            </summary>
        </member>
        <member name="T:Nest.SearchInput">
            <inheritdoc />
        </member>
        <member name="P:Nest.SearchInput.Extract">
            <inheritdoc />
        </member>
        <member name="P:Nest.SearchInput.Request">
            <inheritdoc />
        </member>
        <member name="P:Nest.SearchInput.Timeout">
            <inheritdoc />
        </member>
        <member name="T:Nest.SearchInputDescriptor">
            <inheritdoc />
        </member>
        <member name="M:Nest.SearchInputDescriptor.Request(System.Func{Nest.SearchInputRequestDescriptor,Nest.ISearchInputRequest})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SearchInputDescriptor.Extract(System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Nest.SearchInputDescriptor.Extract(System.String[])">
            <inheritdoc />
        </member>
        <member name="M:Nest.SearchInputDescriptor.Timeout(Nest.Time)">
            <inheritdoc />
        </member>
        <member name="T:Nest.IPutWatchRequest">
            <summary>
            A <see cref="M:Nest.IElasticClient.PutWatch(Nest.Id,System.Func{Nest.PutWatchDescriptor,Nest.IPutWatchRequest})" /> request
            </summary>
        </member>
        <member name="P:Nest.IPutWatchRequest.Trigger">
            <summary>
            Defines when the watch should run
            </summary>
        </member>
        <member name="P:Nest.IPutWatchRequest.Input">
            <summary>
            Defines the input that loads the data for the watch
            </summary>
        </member>
        <member name="P:Nest.IPutWatchRequest.Condition">
            <summary>
            Defines if the actions should be run
            </summary>
        </member>
        <member name="P:Nest.IPutWatchRequest.Actions">
            <summary>
            The actions that will be run if the condition matches
            </summary>
        </member>
        <member name="P:Nest.IPutWatchRequest.Metadata">
            <summary>
            Metadata that will be copied into the history entries
            </summary>
        </member>
        <member name="P:Nest.IPutWatchRequest.ThrottlePeriod">
            <summary>
            The minimum time between actions being run. Defaults to 5 seconds.
            </summary>
            <remarks>
            Default can be changed in the config file with the setting <code>xpack.watcher.throttle.period.default_period</code>.
            </remarks>
        </member>
        <member name="P:Nest.IPutWatchRequest.Transform">
            <summary>
            Processes and changes the payload in the watch execution context to prepare it for the actions.
            </summary>
        </member>
        <member name="T:Nest.PutWatchRequest">
            <inheritdoc/>
            <summary>Request parameters for XpackWatcherPutWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</pre></summary>
        </member>
        <member name="P:Nest.PutWatchRequest.Metadata">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutWatchRequest.Trigger">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutWatchRequest.Input">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutWatchRequest.ThrottlePeriod">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutWatchRequest.Condition">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutWatchRequest.Transform">
            <inheritdoc/>
        </member>
        <member name="P:Nest.PutWatchRequest.Actions">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchRequest.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}</summary>
            <param name="id">this parameter is required</param>
        </member>
        <member name="P:Nest.PutWatchRequest.MasterTimeout">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="P:Nest.PutWatchRequest.Active">
            <summary>Specify whether the watch is in/active by default</summary>
        </member>
        <member name="P:Nest.PutWatchRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.PutWatchRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.PutWatchRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.PutWatchRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.PutWatchRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.PutWatchDescriptor">
            <inheritdoc/>
            <summary>descriptor for XpackWatcherPutWatch <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html</pre></summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Actions(System.Func{Nest.ActionsDescriptor,Nest.IPromise{Nest.Actions}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Condition(System.Func{Nest.ConditionDescriptor,Nest.ConditionContainer})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Input(System.Func{Nest.InputDescriptor,Nest.InputContainer})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Metadata(System.Func{Nest.FluentDictionary{System.String,System.Object},Nest.FluentDictionary{System.String,System.Object}})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Metadata(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.ThrottlePeriod(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Transform(System.Func{Nest.TransformDescriptor,Nest.TransformContainer})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Trigger(System.Func{Nest.TriggerDescriptor,Nest.TriggerContainer})">
            <inheritdoc/>
        </member>
        <member name="M:Nest.PutWatchDescriptor.#ctor(Nest.Id)">
             <summary>/_xpack/watcher/watch/{id}</summary>
            <param name="id"> this parameter is required</param>
        </member>
        <member name="M:Nest.PutWatchDescriptor.MasterTimeout(Nest.Time)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Active(System.Boolean)">
            <summary>Specify whether the watch is in/active by default</summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.PutWatchDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RestartWatcherRequest">
            <summary>Request parameters for XpackWatcherRestart <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html</pre></summary>
        </member>
        <member name="P:Nest.RestartWatcherRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.RestartWatcherRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.RestartWatcherRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.RestartWatcherRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.RestartWatcherRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.RestartWatcherDescriptor">
            <summary>descriptor for XpackWatcherRestart <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html</pre></summary>
        </member>
        <member name="M:Nest.RestartWatcherDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.RestartWatcherDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.RestartWatcherDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.RestartWatcherDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.RestartWatcherDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.StartWatcherRequest">
            <summary>Request parameters for XpackWatcherStart <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</pre></summary>
        </member>
        <member name="P:Nest.StartWatcherRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.StartWatcherRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.StartWatcherRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.StartWatcherRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.StartWatcherRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.StartWatcherDescriptor">
            <summary>descriptor for XpackWatcherStart <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html</pre></summary>
        </member>
        <member name="M:Nest.StartWatcherDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.StartWatcherDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.StartWatcherDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.StartWatcherDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.StartWatcherDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.StopWatcherRequest">
            <summary>Request parameters for XpackWatcherStop <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</pre></summary>
        </member>
        <member name="P:Nest.StopWatcherRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.StopWatcherRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.StopWatcherRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.StopWatcherRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.StopWatcherRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.StopWatcherDescriptor">
            <summary>descriptor for XpackWatcherStop <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html</pre></summary>
        </member>
        <member name="M:Nest.StopWatcherDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.StopWatcherDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.StopWatcherDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.StopWatcherDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.StopWatcherDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.ChainTransformDescriptor.Transform(System.Func{Nest.TransformDescriptor,Nest.TransformContainer})">
            <inheritdoc />
        </member>
        <member name="T:Nest.WatcherStatsRequest">
            <summary>Request parameters for XpackWatcherStats <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</pre></summary>
        </member>
        <member name="M:Nest.WatcherStatsRequest.#ctor">
            <summary>/_xpack/watcher/stats</summary>
        </member>
        <member name="M:Nest.WatcherStatsRequest.#ctor(Elasticsearch.Net.WatcherStatsMetric)">
             <summary>/_xpack/watcher/stats/{watcher_stats_metric}</summary>
            <param name="watcher_stats_metric">Optional, accepts null</param>
        </member>
        <member name="P:Nest.WatcherStatsRequest.Pretty">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="P:Nest.WatcherStatsRequest.Human">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="P:Nest.WatcherStatsRequest.ErrorTrace">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="P:Nest.WatcherStatsRequest.Source">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="P:Nest.WatcherStatsRequest.FilterPath">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Nest.WatcherStatsDescriptor">
            <summary>descriptor for XpackWatcherStats <pre>http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html</pre></summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.#ctor">
            <summary>/_xpack/watcher/stats</summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.WatcherStatsMetric(Elasticsearch.Net.WatcherStatsMetric)">
            <summary>Controls what additional stat metrics should be include in the response</summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Nest.WatcherStatsDescriptor.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.BulkRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.BulkRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.BulkRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.DeleteByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.DeleteByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._StoredFields``1(Elasticsearch.Net.DeleteByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._DocvalueFields``1(Elasticsearch.Net.DeleteByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SuggestField``1(Elasticsearch.Net.DeleteByQueryRequestParameters,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._StoredFields``1(Elasticsearch.Net.DocumentExistsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.DocumentExistsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.DocumentExistsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.SourceExistsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.SourceExistsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._StoredFields``1(Elasticsearch.Net.ExplainRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.ExplainRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.ExplainRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.FieldCapabilitiesRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of field names</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._StoredFields``1(Elasticsearch.Net.GetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.GetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.GetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.SourceRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.SourceRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.ClearCacheRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._CompletionFields``1(Elasticsearch.Net.IndicesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._FielddataFields``1(Elasticsearch.Net.IndicesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.IndicesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._StoredFields``1(Elasticsearch.Net.MultiGetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.MultiGetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.MultiGetRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.MultiTermVectorsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._CompletionFields``1(Elasticsearch.Net.NodesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._FielddataFields``1(Elasticsearch.Net.NodesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.NodesStatsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._DocvalueFields``1(Elasticsearch.Net.SearchRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SuggestField``1(Elasticsearch.Net.SearchRequestParameters,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._Fields``1(Elasticsearch.Net.TermVectorsRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceExclude``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SourceInclude``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._StoredFields``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._DocvalueFields``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression{System.Func{``0,System.Object}}})">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Nest.RequestPameterExtensions._SuggestField``1(Elasticsearch.Net.UpdateByQueryRequestParameters,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>Specify which field to use for suggestions</summary>
        </member>
    </members>
</doc>
