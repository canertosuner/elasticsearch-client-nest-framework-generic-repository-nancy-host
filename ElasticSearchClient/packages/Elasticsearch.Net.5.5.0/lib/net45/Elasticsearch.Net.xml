<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Elasticsearch.Net</name>
    </assembly>
    <members>
        <member name="T:Elasticsearch.Net.Audit">
            <summary>
            An audit of a request made
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Audit.Event">
            <summary>
            The type of audit event
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Audit.Started">
            <summary>
            The start date and time of the audit
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Audit.Ended">
            <summary>
            The end date and time of the audit
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Audit.Node">
            <summary>
            The node on which the request was made
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Audit.Path">
            <summary>
            The path of the request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Audit.Exception">
            <summary>
            The exception for the audit, if there was one.
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.ConnectionConfiguration">
            <summary>
            ConnectionConfiguration allows you to control how ElasticLowLevelClient behaves and where/how it connects
            to elasticsearch
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration.#ctor(System.Uri)">
            <summary>
            ConnectionConfiguration allows you to control how ElasticLowLevelClient behaves and where/how it connects
            to elasticsearch
            </summary>
            <param name="uri">The root of the elasticsearch node we want to connect to. Defaults to http://localhost:9200</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration.#ctor(Elasticsearch.Net.IConnectionPool)">
            <summary>
            ConnectionConfiguration allows you to control how ElasticLowLevelClient behaves and where/how it connects
            to elasticsearch
            </summary>
            <param name="connectionPool">A connection pool implementation that'll tell the client what nodes are available</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.DefaultReseedableNodePredicate(Elasticsearch.Net.Node)">
            <summary>
            The default predicate for <see cref="T:Elasticsearch.Net.IConnectionPool"/> implementations that return true for <see cref="P:Elasticsearch.Net.IConnectionPool.SupportsReseeding"/>
            in which case master only nodes are excluded from API calls.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.DefaultSerializer(`0)">
            <summary>
            The default serializer used to serialize documents to and from JSON
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.EnableTcpKeepAlive(System.TimeSpan,System.TimeSpan)">
            <summary>
            Sets the keep-alive option on a TCP connection.
            <para>For Desktop CLR, sets ServicePointManager.SetTcpKeepAlive</para>
            </summary>
            <param name="keepAliveTime">Specifies the timeout with no activity until the first keep-alive packet is sent.</param>
            <param name="keepAliveInterval">Specifies the interval between when successive keep-alive packets are sent if no acknowledgement is received.</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.MaximumRetries(System.Int32)">
            <summary>
            The maximum number of retries for a given request,
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.ConnectionLimit(System.Int32)">
            <summary>
            Limits the number of concurrent connections that can be opened to an endpoint. Defaults to <c>80</c>.
            <para>For Desktop CLR, this setting applies to the DefaultConnectionLimit property on the  ServicePointManager object when creating ServicePoint objects, affecting the default <see cref="T:Elasticsearch.Net.IConnection"/> implementation.</para>
            <para>For Core CLR, this setting applies to the MaxConnectionsPerServer property on the HttpClientHandler instances used by the HttpClient inside the default <see cref="T:Elasticsearch.Net.IConnection"/> implementation</para>
            </summary>
            <param name="connectionLimit">The connection limit, a value lower then 0 will cause the connection limit not to be set at all</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.SniffOnConnectionFault(System.Boolean)">
            <summary>
            Enables resniffing of the cluster when a call fails, if the connection pool supports reseeding. Defaults to <c>true</c>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.SniffOnStartup(System.Boolean)">
            <summary>
            Enables sniffing on first usage of a connection pool if that pool supports reseeding. Defaults to <c>true</c>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.SniffLifeSpan(System.Nullable{System.TimeSpan})">
            <summary>
            Set the duration after which a cluster state is considered stale and a sniff should be performed again.
            An <see cref="T:Elasticsearch.Net.IConnectionPool"/> has to signal it supports reseeding, otherwise sniffing will never happen.
            Defaults to 1 hour.
            Set to null to disable completely. Sniffing will only ever happen on ConnectionPools that return true for SupportsReseeding
            </summary>
            <param name="sniffLifeSpan">The duration a clusterstate is considered fresh, set to null to disable periodic sniffing</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.EnableHttpCompression(System.Boolean)">
            <summary>
            Enables gzip compressed requests and responses.
            <para>IMPORTANT: You need to configure http compression on Elasticsearch to be able to use this</para>
            <para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-http.html</para>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.DisableAutomaticProxyDetection(System.Boolean)">
            <summary>
            Disables the automatic detection of a proxy
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.ThrowExceptions(System.Boolean)">
            <summary>
            Instead of following a c/go like error checking on response.IsValid always throw an exception
            on the client when a call resulted in an exception on either the client or the Elasticsearch server.
            <para>Reasons for such exceptions could be search parser errors, index missing exceptions, etc...</para>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.DisablePing(System.Boolean)">
            <summary>
            When a node is used for the very first time or when it's used for the first time after it has been marked dead
            a ping with a very low timeout is send to the node to make sure that when it's still dead it reports it as fast as possible.
            You can disable these pings globally here if you rather have it fail on the possible slower original request
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.GlobalQueryStringParameters(System.Collections.Specialized.NameValueCollection)">
            <summary>
            A collection of query string parameters that will be sent with every request. Useful in situations where you always need to pass a parameter e.g. an API key.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.GlobalHeaders(System.Collections.Specialized.NameValueCollection)">
            <summary>
            A collection of headers that will be sent with every request. Useful in situations where you always need to pass a header e.g. a custom auth header
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.RequestTimeout(System.TimeSpan)">
            <summary>
            Sets the default timeout in milliseconds for each request to Elasticsearch. Defaults to <c>60</c> seconds.
            <para>NOTE: You can set this to a high value here, and specify a timeout on Elasticsearch's side.</para>
            </summary>
            <param name="timeout">time out in milliseconds</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.PingTimeout(System.TimeSpan)">
            <summary>
            Sets the default ping timeout in milliseconds for ping requests, which are used
            to determine whether a node is alive. Pings should fail as fast as possible.
            </summary>
            <param name="timeout">The ping timeout in milliseconds defaults to <c>1000</c>, or <c>2000</c> if using SSL.</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.DeadTimeout(System.TimeSpan)">
            <summary>
            Sets the default dead timeout factor when a node has been marked dead.
            </summary>
            <remarks>Some connection pools may use a flat timeout whilst others take this factor and increase it exponentially</remarks>
            <param name="timeout"></param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.MaxDeadTimeout(System.TimeSpan)">
            <summary>
            Sets the maximum time a node can be marked dead.
            Different implementations of <see cref="T:Elasticsearch.Net.IConnectionPool"/> may choose a different default.
            </summary>
            <param name="timeout">The timeout in milliseconds</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.MaxRetryTimeout(System.TimeSpan)">
            <summary>
            Limits the total runtime, including retries, separately from <see cref="M:Elasticsearch.Net.ConnectionConfiguration`1.RequestTimeout(System.TimeSpan)"/>
            <para>
            When not specified, defaults to <see cref="M:Elasticsearch.Net.ConnectionConfiguration`1.RequestTimeout(System.TimeSpan)"/>, which itself defaults to <c>60</c> seconds
            </para>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.Proxy(System.Uri,System.String,System.String)">
            <summary>
            If your connection has to go through proxy, use this method to specify the proxy url
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.PrettyJson(System.Boolean)">
            <summary>
            Forces all requests to have ?pretty=true querystring parameter appended, 
            causing Elasticsearch to return formatted JSON.
            Also forces the client to send out formatted JSON. Defaults to <c>false</c>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.DisableDirectStreaming(System.Boolean)">
            <summary>
            Ensures the response bytes are always available on the <see cref="T:Elasticsearch.Net.ElasticsearchResponse`1"/>
            <para>IMPORTANT: Depending on the registered serializer,
            this may cause the response to be buffered in memory first, potentially affecting performance.</para>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.OnRequestCompleted(System.Action{Elasticsearch.Net.IApiCallDetails})">
            <summary>
            Registers an <see cref="T:System.Action`1"/> that is called when a response is received from Elasticsearch.
            This can be useful for implementing custom logging.
            Multiple callbacks can be registered by calling this multiple times
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.OnRequestDataCreated(System.Action{Elasticsearch.Net.RequestData})">
            <summary>
            Registers an <see cref="T:System.Action`1"/> that is called when <see cref="T:Elasticsearch.Net.RequestData"/> is created.
            Multiple callbacks can be registered by calling this multiple times
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.BasicAuthentication(System.String,System.String)">
            <summary>
            Basic Authentication credentials to send with all requests to Elasticsearch
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.EnableHttpPipelining(System.Boolean)">
            <summary>
            Allows for requests to be pipelined. http://en.wikipedia.org/wiki/HTTP_pipelining
            <para>NOTE: HTTP pipelining must also be enabled in Elasticsearch for this to work properly.</para>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.NodePredicate(System.Func{Elasticsearch.Net.Node,System.Boolean})">
            <summary>
            Register a predicate to select which nodes that you want to execute API calls on. Note that sniffing requests omit this predicate and always execute on all nodes.
            When using an <see cref="T:Elasticsearch.Net.IConnectionPool"/> implementation that supports reseeding of nodes, this will default to omitting master only node from regular API calls.
            When using static or single node connection pooling it is assumed the list of node you instantiate the client with should be taken verbatim.
            </summary>
            <param name="predicate">Return true if you want the node to be used for API calls</param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.EnableDebugMode(System.Action{Elasticsearch.Net.IApiCallDetails})">
            <summary>
            Turns on settings that aid in debugging like DisableDirectStreaming() and PrettyJson()
            so that the original request and response JSON can be inspected.
            </summary>
            <param name="onRequestCompleted">
            An optional callback to be performed when the request completes. This will
            not overwrite the global OnRequestCompleted callback that is set directly on
            ConnectionSettings. If no callback is passed, DebugInformation from the response
            will be written to the debug output by default.
            </param>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.ServerCertificateValidationCallback(System.Func{System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean})">
            <summary>
            Register a ServerCertificateValidationCallback, this is called per endpoint until it returns true.
            After this callback returns true that endpoint is validated for the lifetime of the ServiceEndpoint
            for that host.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.ClientCertificates(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary>
            Use the following certificates to authenticate all HTTP requests. You can also set them on individual
            request using <see cref="P:Elasticsearch.Net.RequestConfiguration.ClientCertificates"/>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.ClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary>
            Use the following certificate to authenticate all HTTP requests. You can also set them on individual
            request using <see cref="P:Elasticsearch.Net.RequestConfiguration.ClientCertificates"/>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ConnectionConfiguration`1.ClientCertificate(System.String)">
            <summary>
            Use the following certificate to authenticate all HTTP requests. You can also set them on individual
            request using <see cref="P:Elasticsearch.Net.RequestConfiguration.ClientCertificates"/>
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.BootstrapLock">
            <summary> Provides a semaphoreslim to transport implementations that need to limit access to a resource</summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ConnectionPool">
            <summary> The connection pool to use when talking with elasticsearch </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.Connection">
            <summary> The connection implementation to use when talking with elasticsearch </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.Serializer">
            <summary>The serializer to use to serialize requests and deserialize responses</summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.RequestTimeout">
            <summary>
            The timeout in milliseconds for each request to Elasticsearch
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.PingTimeout">
            <summary>
            The timeout in milliseconds to use for ping requests, which are issued to determine whether a node is alive
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.DeadTimeout">
            <summary>
            The time to put dead nodes out of rotation (this will be multiplied by the number of times they've been dead)
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.MaxDeadTimeout">
            <summary>
            The maximum ammount of time a node is allowed to marked dead
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.MaxRetryTimeout">
            <summary>
            Limits the total runtime including retries separately from <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.RequestTimeout"/>
            <pre>
            When not specified defaults to <see cref="P:Elasticsearch.Net.IConnectionConfigurationValues.RequestTimeout"/> which itself defaults to 60 seconds
            </pre>
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.MaxRetries">
            <summary>
            When a retryable exception occurs or status code is returned this controls the maximum
            amount of times we should retry the call to elasticsearch
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ConnectionLimit">
            <summary>
            Limits the number of concurrent connections that can be opened to an endpoint. Defaults to 80 (see <see cref="F:Elasticsearch.Net.ConnectionConfiguration.DefaultConnectionLimit"/>).
            <para>For Desktop CLR, this setting applies to the DefaultConnectionLimit property on the  ServicePointManager object when creating ServicePoint objects, affecting the default <see cref="T:Elasticsearch.Net.IConnection"/> implementation.</para>
            <para>For Core CLR, this setting applies to the MaxConnectionsPerServer property on the HttpClientHandler instances used by the HttpClient inside the default <see cref="T:Elasticsearch.Net.IConnection"/> implementation</para>
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.DisablePings">
            <summary>
            This signals that we do not want to send initial pings to unknown/previously dead nodes
            and just send the call straightaway
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.EnableHttpCompression">
            <summary>
            Enable gzip compressed requests and responses, do note that you need to configure elasticsearch to set this
            <para>http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/modules-http.html</para>
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ProxyAddress">
            <summary>
            When set will force all connections through this proxy
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ProxyUsername">
            <summary>
            The username for the proxy, when configured
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ProxyPassword">
            <summary>
            The password for the proxy, when configured
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.PrettyJson">
            <summary>
            Forces all requests to have ?pretty=true, causing elasticsearch to return formatted json.
            Also forces the client to send out formatted json. Defaults to false
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.DisableDirectStreaming">
            <summary>
            When set to true will disable (de)serializing directly to the request and response stream and return a byte[]
            copy of the raw request and response on elasticsearch calls. Defaults to  false
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.DisableAutomaticProxyDetection">
            <summary>
            Disabled proxy detection on the webrequest, in some cases this may speed up the first connection
            your appdomain makes, in other cases it will actually increase the time for the first connection.
            No silver bullet! use with care!
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.HttpPipeliningEnabled">
            <summary>
            By default the client enables http pipelining as elasticsearch 2.0 defaults to true as well
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ThrowExceptions">
            <summary>
            Instead of following a c/go like error checking on response.IsValid always throw an exception
            on the client when a call resulted in an exception on either the client or the Elasticsearch server.
            <para>Reasons for such exceptions could be search parser errors, index missing exceptions, etc...</para>
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.SniffsOnStartup">
            <summary>
            Sniff the cluster state immediatly on startup
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.SniffsOnConnectionFault">
            <summary>
            Force a new sniff for the cluster state everytime a connection dies
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.SniffInformationLifeSpan">
            <summary>
            Force a new sniff for the cluster when the cluster state information is older than
            the specified timespan
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.QueryStringParameters">
            <summary>
            Append these query string parameters automatically to every request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.Headers">
            <summary>
            Try to send these headers for every request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.OnRequestCompleted">
            <summary>
            Allows you to register a callback every time a an API call is returned
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.BasicAuthenticationCredentials">
            <summary>
            Basic access authorization credentials to specify with all requests.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.OnRequestDataCreated">
            <summary>
            An action to run when the <see cref="T:Elasticsearch.Net.RequestData"/> for a request has been
            created.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.KeepAliveTime">
            <summary>
            KeepAliveTime - specifies the timeout, in milliseconds, with no
            activity until the first keep-alive packet is sent.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.KeepAliveInterval">
            <summary>
            KeepAliveInterval - specifies the interval, in milliseconds, between
            when successive keep-alive packets are sent if no acknowledgement is
            received.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ServerCertificateValidationCallback">
            <summary>
            Register a ServerCertificateValidationCallback per request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.NodePredicate">
            <summary>
            Register a predicate to select which nodes that you want to execute API calls on. Note that sniffing requests omit this predicate and always execute on all nodes.
            When using an <see cref="T:Elasticsearch.Net.IConnectionPool"/> implementation that supports reseeding of nodes, this will default to omitting master only node from regular API calls.
            When using static or single node connection pooling it is assumed the list of node you instantiate the client with should be taken verbatim.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionConfigurationValues.ClientCertificates">
            <summary>
            Use the following certificates to authenticate all HTTP requests. You can also set them on individual
            request using <see cref="P:Elasticsearch.Net.RequestConfiguration.ClientCertificates"/>
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.RequestTimeout">
            <summary>
            The timeout for this specific request, takes precedence over the global timeout settings
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.PingTimeout">
            <summary>
            The ping timeout for this specific request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.ContentType">
            <summary>
            Force a different Content-Type header on the request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.Accept">
            <summary>
            Force a different Accept header on the request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.MaxRetries">
            <summary>
            This will override whatever is set on the connection configuration or whatever default the connectionpool has.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.ForceNode">
            <summary>
            This will force the operation on the specified node, this will bypass any configured connection pool and will no retry.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.DisableSniff">
            <summary>
            Forces no sniffing to occur on the request no matter what configuration is in place
            globally
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.DisablePing">
            <summary>
            Under no circumstance do a ping before the actual call. If a node was previously dead a small ping with
            low connect timeout will be tried first in normal circumstances
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.DisableDirectStreaming">
            <summary>
            Whether to buffer the request and response bytes for the call
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.AllowedStatusCodes">
            <summary>
            Treat the following statuses (on top of the 200 range) NOT as error.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.BasicAuthenticationCredentials">
            <summary>
            Basic access authorization credentials to specify with this request.
            Overrides any credentials that are set at the global IConnectionSettings level.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.EnableHttpPipelining">
            <summary>
            Whether or not this request should be pipelined. http://en.wikipedia.org/wiki/HTTP_pipelining defaults to true
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.RunAs">
            <summary>
            Submit the request on behalf in the context of a different shield user
            <pre/>https://www.elastic.co/guide/en/shield/current/submitting-requests-for-other-users.html
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestConfiguration.ClientCertificates">
            <summary>
            Use the following client certificates to authenticate this single request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.RequestConfiguration.RunAs">
            <summary>
            Submit the request on behalf in the context of a different user
            https://www.elastic.co/guide/en/shield/current/submitting-requests-for-other-users.html
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RequestConfigurationDescriptor.RunAs(System.String)">
            <summary>
            Submit the request on behalf in the context of a different shield user
            <pre/>https://www.elastic.co/guide/en/shield/current/submitting-requests-for-other-users.html
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RequestConfigurationDescriptor.ClientCertificates(System.Security.Cryptography.X509Certificates.X509CertificateCollection)">
            <summary> Use the following client certificates to authenticate this request to Elasticsearch </summary>
        </member>
        <member name="M:Elasticsearch.Net.RequestConfigurationDescriptor.ClientCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)">
            <summary> Use the following client certificate to authenticate this request to Elasticsearch </summary>
        </member>
        <member name="M:Elasticsearch.Net.RequestConfigurationDescriptor.ClientCertificate(System.String)">
            <summary> Use the following client certificate to authenticate this request to Elasticsearch </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionPool.Nodes">
            <summary>
            Returns a readonly constant view of all the nodes in the cluster, this might involve creating copies of the nodes e.g
            if you are using the sniffing connectionpool. If you do not need an isolated copy of the nodes please read <see cref="M:Elasticsearch.Net.IConnectionPool.CreateView(System.Action{Elasticsearch.Net.AuditEvent,Elasticsearch.Net.Node})"/> to completion
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionPool.MaxRetries">
            <summary>
            Returns the default maximum retries for the connection pool implementation.
            Most implementation default to number of nodes, note that this can be overidden
            in the connection settings
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionPool.SupportsReseeding">
            <summary>
            Signals that this implemenation can accept new nodes
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionPool.UsingSsl">
            <summary>
            Whether or not SSL is being using
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IConnectionPool.SniffedOnStartup">
            <summary>
            Bookkeeps wheter this connectionpool has seen a sniff on startup. its up to to the callee to set this in a threadsafe fashion
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IConnectionPool.CreateView(System.Action{Elasticsearch.Net.AuditEvent,Elasticsearch.Net.Node})">
            <summary>
            Creates a view with changing starting positions that wraps over on each call
            e.g Thread A might get 1,2,3,4,5 and thread B will get 2,3,4,5,1.
            if there are no live nodes yields a different dead node to try once
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IConnectionPool.Reseed(System.Collections.Generic.IEnumerable{Elasticsearch.Net.Node})">
            <summary>
            Update the node list, it's the IConnectionPool's responsibility to do so in a threadsafe fashion
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.IsResurrected">
            <summary> When set this signals the transport that a ping before first usage would be wise</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.HttpEnabled">
            <summary>Whether HTTP is enabled on the node or not</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.HoldsData">
            <summary>Indicates whether this node holds data, defaults to true when unknown/unspecified</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.MasterEligible">
            <summary>Indicates whether this node is master eligible, defaults to true when unknown/unspecified</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.IngestEnabled">
            <summary>Indicates whether this node is allowed to run ingest pipelines, defaults to true when unknown/unspecified</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.Id">
            <summary>The id of the node, defaults to null when unknown/unspecified</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.Name">
            <summary>The name of the node, defaults to null when unknown/unspecified</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.FailedAttempts">
            <summary> The number of failed attempts trying to use this node, resets when a node is marked alive</summary>
        </member>
        <member name="P:Elasticsearch.Net.Node.DeadUntil">
            <summary> When marked dead this reflects the date that the node has to be taken out of rotation till</summary>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.MaxRetries">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.SupportsReseeding">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.SupportsPinging">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.SingleNodeConnectionPool.Reseed(System.Collections.Generic.IEnumerable{Elasticsearch.Net.Node})">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.UsingSsl">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.SniffedOnStartup">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.Nodes">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SingleNodeConnectionPool.LastUpdate">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.SingleNodeConnectionPool.#ctor(System.Uri,Elasticsearch.Net.IDateTimeProvider)">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.SingleNodeConnectionPool.CreateView(System.Action{Elasticsearch.Net.AuditEvent,Elasticsearch.Net.Node})">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SniffingConnectionPool.SupportsReseeding">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.SniffingConnectionPool.SupportsPinging">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.SniffingConnectionPool.#ctor(System.Collections.Generic.IEnumerable{Elasticsearch.Net.Node},System.Func{Elasticsearch.Net.Node,System.Boolean},System.Boolean,Elasticsearch.Net.IDateTimeProvider)">
            <summary>
            Obsolete overload
            </summary>
            <param name="predicate">UNUSED</param>
        </member>
        <member name="P:Elasticsearch.Net.SniffingConnectionPool.Nodes">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.SniffingConnectionPool.Reseed(System.Collections.Generic.IEnumerable{Elasticsearch.Net.Node})">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.SniffingConnectionPool.CreateView(System.Action{Elasticsearch.Net.AuditEvent,Elasticsearch.Net.Node})">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.Nodes">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.MaxRetries">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.SupportsReseeding">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.SupportsPinging">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.StaticConnectionPool.Reseed(System.Collections.Generic.IEnumerable{Elasticsearch.Net.Node})">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.UsingSsl">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.SniffedOnStartup">
            <inheritdoc/>
        </member>
        <member name="P:Elasticsearch.Net.StaticConnectionPool.LastUpdate">
            <inheritdoc/>
        </member>
        <member name="M:Elasticsearch.Net.StaticConnectionPool.CreateView(System.Action{Elasticsearch.Net.AuditEvent,Elasticsearch.Net.Node})">
            <summary>
            Creates a view of all the live nodes with changing starting positions that wraps over on each call
            e.g Thread A might get 1,2,3,4,5 and thread B will get 2,3,4,5,1.
            if there are no live nodes yields a different dead node to try once
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.CertificateValidations">
            <summary>
            A collection of handy baked in server certificate validation callbacks
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CertificateValidations.AllowAll(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            DANGEROUS, never use this in production validates ALL certificates to true.
            </summary>
            <returns>Always true, allowing ALL certificates</returns>
        </member>
        <member name="M:Elasticsearch.Net.CertificateValidations.DenyAll(System.Object,System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)">
            <summary>
            Always false, in effect blocking ALL certificates
            </summary>
            <returns>Always false, always blocking ALL certificates</returns>
        </member>
        <member name="M:Elasticsearch.Net.CertificateValidations.AuthorityPartOfChain(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Cryptography.X509Certificates.X509RevocationMode)">
            <summary>
            Helper to create a certificate validation callback based on the certificate authority certificate that we used to
            generate the nodes certificates with. This callback expects the CA to be part of the chain as intermediate CA.
            </summary>
            <param name="caCertificate">The ca certificate used to generate the nodes certificate </param>
            <param name="trustRoot">Custom CA are never trusted by default unless they are in the machines trusted store, set this to true
            if you've added the CA to the machines trusted store. In which case UntrustedRoot should not be accepted.
            </param>
            <param name="revocationMode">By default we do not check revocation, it is however recommended to check this (either offline or online).</param>
        </member>
        <member name="M:Elasticsearch.Net.CertificateValidations.AuthorityIsRoot(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Cryptography.X509Certificates.X509RevocationMode)">
            <summary>
            Helper to create a certificate validation callback based on the certificate authority certificate that we used to
            generate the nodes certificates with. This callback does NOT expect the CA to be part of the chain presented by the server.
            Including the root certificate in the chain increases the SSL handshake size and Elasticsearch's certgen by default does not include
            the CA in the certificate chain.
            </summary>
            <param name="caCertificate">The ca certificate used to generate the nodes certificate </param>
            <param name="trustRoot">Custom CA are never trusted by default unless they are in the machines trusted store, set this to true
            if you've added the CA to the machines trusted store. In which case UntrustedRoot should not be accepted.
            </param>
            <param name="revocationMode">By default we do not check revocation, it is however recommended to check this (either offline or online).</param>
        </member>
        <member name="M:Elasticsearch.Net.HttpConnection.RegisterApmTaskTimeout(System.IAsyncResult,System.Net.WebRequest,Elasticsearch.Net.RequestData)">
            <summary>
            Registers an APM async task cancellation on the threadpool
            </summary>
            <returns>An unregister action that can be used to remove the waithandle prematurely</returns>
        </member>
        <member name="M:Elasticsearch.Net.InMemoryConnection.#ctor">
            <summary>
            Every request will succeed with this overload, note that it won't actually return mocked responses
            so using this overload might fail if you are using it to test high level bits that need to deserialize the response.
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.IHideObjectMembers">
            <summary>
            Helper interface used to hide the base <see cref="T:System.Object"/>  members from the fluent API to make it much cleaner 
            in Visual Studio intellisense.
            </summary>
            <remarks>Created by Daniel Cazzulino http://www.clariusconsulting.net/blogs/kzu/archive/2008/03/10/58301.aspx</remarks>
        </member>
        <member name="M:Elasticsearch.Net.IHideObjectMembers.Equals(System.Object)">
            <summary>
            Hides the <see cref="M:Elasticsearch.Net.IHideObjectMembers.Equals(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IHideObjectMembers.GetHashCode">
            <summary>
            Hides the <see cref="M:Elasticsearch.Net.IHideObjectMembers.GetHashCode"/> method.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IHideObjectMembers.GetType">
            <summary>
            Hides the <see cref="M:Elasticsearch.Net.IHideObjectMembers.GetType"/> method.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IHideObjectMembers.ToString">
            <summary>
            Hides the <see cref="M:Elasticsearch.Net.IHideObjectMembers.ToString"/> method.
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.IPropertyMapping">
            <summary> This class allows a serializer to report back on a properties behavior </summary>
        </member>
        <member name="P:Elasticsearch.Net.IPropertyMapping.Name">
            <summary> Override the json property name of a type </summary>
        </member>
        <member name="P:Elasticsearch.Net.IPropertyMapping.Ignore">
            <summary>
            Ignore this property completely
            <pre>- When mapping automatically using AutoMap()</pre>
            <pre>- When Indexing this type do not serialize whatever this value hold</pre>
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.PropertyMapping">
            <summary> This class allows a serializer to report back on a properties behavior </summary>
        </member>
        <member name="P:Elasticsearch.Net.PropertyMapping.Name">
            <summary> Override the json property name of a type </summary>
        </member>
        <member name="P:Elasticsearch.Net.PropertyMapping.Ignore">
            <summary>
            Ignore this property completely
            <pre>- When mapping automatically using AutoMap()</pre>
            <pre>- When Indexing this type do not serialize whatever this value hold</pre>
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.FluentRequestParameters`1">
            <summary>
            Used by the raw client to compose querystring parameters in a matter that still exposes some xmldocs
            You can always pass a simple NameValueCollection if you want.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Elasticsearch.Net.IRequestParameters.QueryString">
            <summary>
            The querystring that should be appended to the path of the request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestParameters.DeserializationOverride">
            <summary>
            A method that can be set on the request to take ownership of creating the response object.
            When set this will be called instead of the internal .Deserialize();
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IRequestParameters.RequestConfiguration">
            <summary>
            Configuration for this specific request, i.e disable sniffing, custom timeouts etcetera.
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.BulkRequestParameters">
            <summary>Request parameters descriptor for Bulk
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Type(System.String)">
            <summary>Default document type for items which don&#39;t provide one</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Fields(System.String[])">
            <summary>Default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.SourceExclude(System.String[])">
            <summary>Default list of fields to exclude from the returned _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.SourceInclude(System.String[])">
            <summary>Default list of fields to extract and return from the _source field, can be overridden on each sub-request</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Pipeline(System.String)">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatAliasesRequestParameters">
            <summary>Request parameters descriptor for CatAliases
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAliasesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatAllocationRequestParameters">
            <summary>Request parameters descriptor for CatAllocation
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatAllocationRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatCountRequestParameters">
            <summary>Request parameters descriptor for CatCount
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatCountRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatFielddataRequestParameters">
            <summary>Request parameters descriptor for CatFielddata
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of fields to return in the output</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatFielddataRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatHealthRequestParameters">
            <summary>Request parameters descriptor for CatHealth
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Ts(System.Boolean)">
            <summary>Set to false to disable timestamping</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHealthRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatHelpRequestParameters">
            <summary>Request parameters descriptor for CatHelp
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatHelpRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatIndicesRequestParameters">
            <summary>Request parameters descriptor for CatIndices
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Health(Elasticsearch.Net.Health)">
            <summary>A health status (&quot;green&quot;, &quot;yellow&quot;, or &quot;red&quot; to filter only indices matching the specified health status</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Pri(System.Boolean)">
            <summary>Set to true to return stats only for primary shards</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatIndicesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatMasterRequestParameters">
            <summary>Request parameters descriptor for CatMaster
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatMasterRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatNodeAttributesRequestParameters">
            <summary>Request parameters descriptor for CatNodeattrs
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodeAttributesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatNodesRequestParameters">
            <summary>Request parameters descriptor for CatNodes
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.FullId(System.Boolean)">
            <summary>Return the full node ID instead of the shortened version (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatNodesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatPendingTasksRequestParameters">
            <summary>Request parameters descriptor for CatPendingTasks
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPendingTasksRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatPluginsRequestParameters">
            <summary>Request parameters descriptor for CatPlugins
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatPluginsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatRecoveryRequestParameters">
            <summary>Request parameters descriptor for CatRecovery
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.Bytes(Elasticsearch.Net.Bytes)">
            <summary>The unit in which to display byte values</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRecoveryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatRepositoriesRequestParameters">
            <summary>Request parameters descriptor for CatRepositories
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatRepositoriesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatSegmentsRequestParameters">
            <summary>Request parameters descriptor for CatSegments
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSegmentsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatShardsRequestParameters">
            <summary>Request parameters descriptor for CatShards
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatShardsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatSnapshotsRequestParameters">
            <summary>Request parameters descriptor for CatSnapshots
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Set to true to ignore unavailable snapshots</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatSnapshotsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatTasksRequestParameters">
            <summary>Request parameters descriptor for CatTasks
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Detailed(System.Boolean)">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.ParentNode(System.String)">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.ParentTask(System.Int64)">
            <summary>Return tasks with specified parent task id. Set to -1 to return all.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTasksRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatTemplatesRequestParameters">
            <summary>Request parameters descriptor for CatTemplates
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatTemplatesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CatThreadPoolRequestParameters">
            <summary>Request parameters descriptor for CatThreadPool
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Format(System.String)">
            <summary>a short version of the Accept header, e.g. json, yaml</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Size(Elasticsearch.Net.Size)">
            <summary>The multiplier in which to display values</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.H(System.String[])">
            <summary>Comma-separated list of column names to display</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Help(System.Boolean)">
            <summary>Return help information</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.S(System.String[])">
            <summary>Comma-separated list of column names or column aliases to sort by</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.V(System.Boolean)">
            <summary>Verbose mode. Display column headers</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CatThreadPoolRequestParameters.ThreadPoolPatterns(System.String[])">
            <summary>A comma-separated list of regular-expressions to filter the thread pools in the output</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClearScrollRequestParameters">
            <summary>Request parameters descriptor for ClearScroll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearScrollRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearScrollRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearScrollRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearScrollRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearScrollRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterAllocationExplainRequestParameters">
            <summary>Request parameters descriptor for ClusterAllocationExplain
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.IncludeYesDecisions(System.Boolean)">
            <summary>Return &#39;YES&#39; decisions in explanation (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.IncludeDiskInfo(System.Boolean)">
            <summary>Return information about disk usage and shard sizes (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterAllocationExplainRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterGetSettingsRequestParameters">
            <summary>Request parameters descriptor for ClusterGetSettings
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default clusters setting.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterGetSettingsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterHealthRequestParameters">
            <summary>Request parameters descriptor for ClusterHealth
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.Level(Elasticsearch.Net.Level)">
            <summary>Specify the level of detail for returned information</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.WaitForActiveShards(System.String)">
            <summary>Wait until the specified number of shards is active</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.WaitForNodes(System.String)">
            <summary>Wait until the specified number of nodes is available</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.WaitForEvents(Elasticsearch.Net.WaitForEvents)">
            <summary>Wait until all currently queued events with the given priority are processed</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.WaitForNoRelocatingShards(System.Boolean)">
            <summary>Whether to wait until there are no relocating shards in the cluster</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.WaitForStatus(Elasticsearch.Net.WaitForStatus)">
            <summary>Wait until cluster is in a specific state</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterHealthRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterPendingTasksRequestParameters">
            <summary>Request parameters descriptor for ClusterPendingTasks
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPendingTasksRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterPutSettingsRequestParameters">
            <summary>Request parameters descriptor for ClusterPutSettings
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterPutSettingsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterRerouteRequestParameters">
            <summary>Request parameters descriptor for ClusterReroute
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.DryRun(System.Boolean)">
            <summary>Simulate the operation only and return the resulting state</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.Explain(System.Boolean)">
            <summary>Return an explanation of why the commands can or cannot be executed</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.RetryFailed(System.Boolean)">
            <summary>Retries allocation of shards that are blocked due to too many subsequent allocation failures</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.Metric(System.String[])">
            <summary>Limit the information returned to the specified metrics. Defaults to all but metadata</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterRerouteRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterStateRequestParameters">
            <summary>Request parameters descriptor for ClusterState
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClusterStatsRequestParameters">
            <summary>Request parameters descriptor for ClusterStats
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClusterStatsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CountRequestParameters">
            <summary>Request parameters descriptor for Count
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.MinScore(System.Double)">
            <summary>Include only documents with a specific `_score` value in the result</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CountRequestParameters.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Elasticsearch.Net.PercolateCountRequestParameters">
            <summary>Request parameters descriptor for CountPercolate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.PercolateIndex(System.String)">
            <summary>The index to count percolate the document into. Defaults to index.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.PercolateType(System.String)">
            <summary>The type to count percolate document into. Defaults to type.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateCountRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CreateRequestParameters">
            <summary>Request parameters descriptor for Create
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Timestamp(System.TimeSpan)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Ttl(System.TimeSpan)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Pipeline(System.String)">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteRequestParameters">
            <summary>Request parameters descriptor for Delete
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Parent(System.String)">
            <summary>ID of parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteByQueryRequestParameters">
            <summary>Request parameters descriptor for DeleteByQuery
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.From(System.Int64)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Conflicts(Elasticsearch.Net.Conflicts)">
            <summary>What to do when the delete-by-query hits version conflicts?</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Scroll(System.TimeSpan)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SearchTimeout(System.TimeSpan)">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Size(System.Int64)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.TerminateAfter(System.Int64)">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Timeout(System.TimeSpan)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the delete by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.ScrollSize(System.Int64)">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the delete-by-query is complete.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.RequestsPerSecond(System.Int64)">
            <summary>The throttle for this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Slices(System.Int64)">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.DocvalueFields(System.String[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteByQueryRequestParameters.TrackScores(System.Boolean)">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteScriptRequestParameters">
            <summary>Request parameters descriptor for DeleteScript
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteScriptRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteScriptRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteScriptRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteScriptRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteScriptRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteSearchTemplateRequestParameters">
            <summary>Request parameters descriptor for DeleteTemplate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSearchTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSearchTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSearchTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSearchTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSearchTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DocumentExistsRequestParameters">
            <summary>Request parameters descriptor for Exists
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DocumentExistsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SourceExistsRequestParameters">
            <summary>Request parameters descriptor for ExistsSource
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceExistsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ExplainRequestParameters">
            <summary>Request parameters descriptor for Explain
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcards and prefix queries in the query string query should be analyzed (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Analyzer(System.String)">
            <summary>The analyzer for the query string query</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Df(System.String)">
            <summary>The default field for query string query (default: _all)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExplainRequestParameters.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Elasticsearch.Net.FieldCapabilitiesRequestParameters">
            <summary>Request parameters descriptor for FieldCaps
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of field names</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldCapabilitiesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.FieldStatsRequestParameters">
            <summary>Request parameters descriptor for FieldStats
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.Level(Elasticsearch.Net.Level)">
            <summary>Defines if field stats should be returned on a per index level or on a cluster wide level</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FieldStatsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetRequestParameters">
            <summary>Request parameters descriptor for Get
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetScriptRequestParameters">
            <summary>Request parameters descriptor for GetScript
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetScriptRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetScriptRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetScriptRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetScriptRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetScriptRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SourceRequestParameters">
            <summary>Request parameters descriptor for GetSource
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Parent(System.String)">
            <summary>The ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SourceRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetSearchTemplateRequestParameters">
            <summary>Request parameters descriptor for GetTemplate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSearchTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSearchTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSearchTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSearchTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSearchTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.IndexRequestParameters">
            <summary>Request parameters descriptor for Index
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.OpType(Elasticsearch.Net.OpType)">
            <summary>Explicit operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Parent(System.String)">
            <summary>ID of the parent document</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Timestamp(System.TimeSpan)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Ttl(System.TimeSpan)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Pipeline(System.String)">
            <summary>The pipeline id to preprocess incoming documents with</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.AnalyzeRequestParameters">
            <summary>Request parameters descriptor for IndicesAnalyzeForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Index(System.String)">
            <summary>The name of the index to scope the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.PreferLocal(System.Boolean)">
            <summary>With `true`, specify that a local shard should be used if available, with `false`, use a random shard (default: true)</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Explain(System.Boolean)">
            <summary>With `true`, outputs more advanced details. (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Attributes(System.String[])">
            <summary>A comma-separated list of token attributes to output, this parameter works only with `explain=true`</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Format(Elasticsearch.Net.Format)">
            <summary>Format of the output</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AnalyzeRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClearCacheRequestParameters">
            <summary>Request parameters descriptor for IndicesClearCacheForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.FieldData(System.Boolean)">
            <summary>Clear field data</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of fields to clear when using the `field_data` parameter (default: all)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Query(System.Boolean)">
            <summary>Clear query caches</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Index(System.String[])">
            <summary>A comma-separated list of index name to limit the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Recycler(System.Boolean)">
            <summary>Clear the recycler cache</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.RequestCache(System.Boolean)">
            <summary>Clear request cache</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Request(System.Boolean)">
            <summary>Clear request cache</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCacheRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CloseIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesClose
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CloseIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CreateIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesCreate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.WaitForActiveShards(System.String)">
            <summary>Set the number of active shards to wait for before the operation returns.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.UpdateAllTypes(System.Boolean)">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesDelete
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteAliasRequestParameters">
            <summary>Request parameters descriptor for IndicesDeleteAlias
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteAliasRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteIndexTemplateRequestParameters">
            <summary>Request parameters descriptor for IndicesDeleteTemplateForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteIndexTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.IndexExistsRequestParameters">
            <summary>Request parameters descriptor for IndicesExists
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexExistsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.AliasExistsRequestParameters">
            <summary>Request parameters descriptor for IndicesExistsAliasForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AliasExistsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.IndexTemplateExistsRequestParameters">
            <summary>Request parameters descriptor for IndicesExistsTemplateForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndexTemplateExistsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.TypeExistsRequestParameters">
            <summary>Request parameters descriptor for IndicesExistsType
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TypeExistsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.FlushRequestParameters">
            <summary>Request parameters descriptor for IndicesFlushForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.Force(System.Boolean)">
            <summary>Whether a flush should be forced even if it is not necessarily needed ie. if no changes will be committed to the index. This is useful if transaction log IDs should be incremented even if no uncommitted changes are present. (This setting can be considered as internal)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.WaitIfOngoing(System.Boolean)">
            <summary>If set to true the flush operation will block until the flush can be executed if another flush operation is already executing. The default is true. If set to false the flush will be skipped iff if another flush operation is already running.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.FlushRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SyncedFlushRequestParameters">
            <summary>Request parameters descriptor for IndicesFlushSyncedForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SyncedFlushRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ForceMergeRequestParameters">
            <summary>Request parameters descriptor for IndicesForcemergeForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.Flush(System.Boolean)">
            <summary>Specify whether the index should be flushed after performing the operation (default: true)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.MaxNumSegments(System.Int64)">
            <summary>The number of segments the index should be merged into (default: dynamic)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.OnlyExpungeDeletes(System.Boolean)">
            <summary>Specify whether the operation should only expunge deleted documents</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.WaitForMerge(System.Boolean)">
            <summary>Specify whether the request should block until the merge process is finished (default: true)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ForceMergeRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesGet
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Ignore unavailable indexes (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Ignore if a wildcard expression resolves to no concrete indices (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether wildcard expressions should get expanded to open or closed indices (default: open)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetAliasRequestParameters">
            <summary>Request parameters descriptor for IndicesGetAliasForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetAliasRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetFieldMappingRequestParameters">
            <summary>Request parameters descriptor for IndicesGetFieldMappingForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.IncludeDefaults(System.Boolean)">
            <summary>Whether the default mapping values should be returned as well</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetFieldMappingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetMappingRequestParameters">
            <summary>Request parameters descriptor for IndicesGetMappingForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetMappingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetIndexSettingsRequestParameters">
            <summary>Request parameters descriptor for IndicesGetSettingsForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.IncludeDefaults(System.Boolean)">
            <summary>Whether to return all default setting for each of the indices.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexSettingsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetIndexTemplateRequestParameters">
            <summary>Request parameters descriptor for IndicesGetTemplateForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetIndexTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.UpgradeStatusRequestParameters">
            <summary>Request parameters descriptor for IndicesGetUpgradeForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeStatusRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.OpenIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesOpen
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.OpenIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutAliasRequestParameters">
            <summary>Request parameters descriptor for IndicesPutAlias
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutAliasRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutMappingRequestParameters">
            <summary>Request parameters descriptor for IndicesPutMapping
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.UpdateAllTypes(System.Boolean)">
            <summary>Whether to update the mapping for all fields with the same name across all types or not</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutMappingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.UpdateIndexSettingsRequestParameters">
            <summary>Request parameters descriptor for IndicesPutSettingsForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.PreserveExisting(System.Boolean)">
            <summary>Whether to update existing settings. If set to `true` existing settings on an index remain unchanged, the default is `false`</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateIndexSettingsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutIndexTemplateRequestParameters">
            <summary>Request parameters descriptor for IndicesPutTemplateForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.Create(System.Boolean)">
            <summary>Whether the index template should only be added if new or can also replace an existing one</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutIndexTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.RecoveryStatusRequestParameters">
            <summary>Request parameters descriptor for IndicesRecoveryForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.Detailed(System.Boolean)">
            <summary>Whether to display detailed information about shard recovery</summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.ActiveOnly(System.Boolean)">
            <summary>Display only those recoveries that are currently on-going</summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RecoveryStatusRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.RefreshRequestParameters">
            <summary>Request parameters descriptor for IndicesRefreshForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.Force(System.Boolean)">
            <summary></summary>
        </member>
        <member name="M:Elasticsearch.Net.RefreshRequestParameters.OperationThreading(System.String)">
            <summary></summary>
        </member>
        <member name="T:Elasticsearch.Net.RolloverIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesRolloverForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.DryRun(System.Boolean)">
            <summary>If set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.WaitForActiveShards(System.String)">
            <summary>Set the number of active shards to wait for on the newly created rollover index before the operation returns.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RolloverIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SegmentsRequestParameters">
            <summary>Request parameters descriptor for IndicesSegmentsForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.Verbose(System.Boolean)">
            <summary>Includes detailed memory usage by Lucene.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SegmentsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.IndicesShardStoresRequestParameters">
            <summary>Request parameters descriptor for IndicesShardStoresForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.Status(System.String[])">
            <summary>A comma-separated list of statuses used to filter on shards to get store information for</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesShardStoresRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ShrinkIndexRequestParameters">
            <summary>Request parameters descriptor for IndicesShrink
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.WaitForActiveShards(System.String)">
            <summary>Set the number of active shards to wait for on the shrunken index before the operation returns.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ShrinkIndexRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.IndicesStatsRequestParameters">
            <summary>Request parameters descriptor for IndicesStatsForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.Groups(System.String[])">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.Level(Elasticsearch.Net.Level)">
            <summary>Return stats aggregated at cluster, index or shard level</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.IncludeSegmentFileSizes(System.Boolean)">
            <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.IndicesStatsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.BulkAliasRequestParameters">
            <summary>Request parameters descriptor for IndicesUpdateAliasesForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.Timeout(System.TimeSpan)">
            <summary>Request timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for connection to master</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.BulkAliasRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.UpgradeRequestParameters">
            <summary>Request parameters descriptor for IndicesUpgradeForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Specify whether the request should block until the all segments are upgraded (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.OnlyAncientSegments(System.Boolean)">
            <summary>If true, only ancient (an older Lucene major release) segments will be upgraded</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpgradeRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ValidateQueryRequestParameters">
            <summary>Request parameters descriptor for IndicesValidateQueryForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Explain(System.Boolean)">
            <summary>Return detailed information about the error</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.OperationThreading(System.String)">
            <summary>TODO: ?</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Rewrite(System.Boolean)">
            <summary>Provide a more detailed explanation showing the actual Lucene query that will be executed.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.AllShards(System.Boolean)">
            <summary>Execute validation on all shards instead of one random shard per index</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ValidateQueryRequestParameters.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Elasticsearch.Net.RootNodeInfoRequestParameters">
            <summary>Request parameters descriptor for Info
            <pre>
            https://www.elastic.co/guide/
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RootNodeInfoRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RootNodeInfoRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RootNodeInfoRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RootNodeInfoRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RootNodeInfoRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeletePipelineRequestParameters">
            <summary>Request parameters descriptor for IngestDeletePipeline
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeletePipelineRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetPipelineRequestParameters">
            <summary>Request parameters descriptor for IngestGetPipeline
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetPipelineRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetPipelineRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetPipelineRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetPipelineRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetPipelineRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetPipelineRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutPipelineRequestParameters">
            <summary>Request parameters descriptor for IngestPutPipeline
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutPipelineRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SimulatePipelineRequestParameters">
            <summary>Request parameters descriptor for IngestSimulate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SimulatePipelineRequestParameters.Verbose(System.Boolean)">
            <summary>Verbose mode. Display data output for each processor in executed pipeline</summary>
        </member>
        <member name="M:Elasticsearch.Net.SimulatePipelineRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SimulatePipelineRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SimulatePipelineRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SimulatePipelineRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SimulatePipelineRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.MultiGetRequestParameters">
            <summary>Request parameters descriptor for Mget
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Realtime(System.Boolean)">
            <summary>Specify whether to perform the operation in realtime or search mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Refresh(System.Boolean)">
            <summary>Refresh the shard containing the document before performing the operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiGetRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.MultiPercolateRequestParameters">
            <summary>Request parameters descriptor for Mpercolate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiPercolateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.MultiSearchRequestParameters">
            <summary>Request parameters descriptor for Msearch
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.MaxConcurrentSearches(System.Int64)">
            <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.MultiSearchTemplateRequestParameters">
            <summary>Request parameters descriptor for MsearchTemplate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.MaxConcurrentSearches(System.Int64)">
            <summary>Controls the maximum number of concurrent searches the multi search api will execute</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiSearchTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.MultiTermVectorsRequestParameters">
            <summary>Request parameters descriptor for Mtermvectors
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.TermStatistics(System.Boolean)">
            <summary>Specifies if total term frequency and document frequency should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.FieldStatistics(System.Boolean)">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of fields to return. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Offsets(System.Boolean)">
            <summary>Specifies if term offsets should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Positions(System.Boolean)">
            <summary>Specifies if term positions should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Payloads(System.Boolean)">
            <summary>Specifies if term payloads should be returned. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random) .Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Routing(System.String)">
            <summary>Specific routing value. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Parent(System.String)">
            <summary>Parent id of documents. Applies to all returned documents unless otherwise specified in body &quot;params&quot; or &quot;docs&quot;.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Realtime(System.Boolean)">
            <summary>Specifies if requests are real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.MultiTermVectorsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.NodesHotThreadsRequestParameters">
            <summary>Request parameters descriptor for NodesHotThreadsForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Interval(System.TimeSpan)">
            <summary>The interval for the second sampling of threads</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Snapshots(System.Int64)">
            <summary>Number of samples of thread stacktrace (default: 10)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Threads(System.Int64)">
            <summary>Specify the number of threads to provide information for (default: 3)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.IgnoreIdleThreads(System.Boolean)">
            <summary>Don&#39;t show threads that are in known-idle places, such as waiting on a socket select or pulling from an empty task queue (default: true)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.ThreadType(Elasticsearch.Net.ThreadType)">
            <summary>The type to sample (default: cpu)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesHotThreadsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.NodesInfoRequestParameters">
            <summary>Request parameters descriptor for NodesInfoForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.FlatSettings(System.Boolean)">
            <summary>Return settings in flat format (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesInfoRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.NodesStatsRequestParameters">
            <summary>Request parameters descriptor for NodesStatsForAll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.CompletionFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `suggest` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.FielddataFields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of fields for `fielddata` and `completion` index metric (supports wildcards)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Groups(System.Boolean)">
            <summary>A comma-separated list of search groups for `search` index metric</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Level(Elasticsearch.Net.Level)">
            <summary>Return indices stats aggregated at index, node or shard level</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Types(System.String[])">
            <summary>A comma-separated list of document types for the `indexing` index metric</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.IncludeSegmentFileSizes(System.Boolean)">
            <summary>Whether to report the aggregated disk usage of each one of the Lucene index files (only applies if segment stats are requested)</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.NodesStatsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PercolateRequestParameters">
            <summary>Request parameters descriptor for Percolate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.PercolateIndex(System.String)">
            <summary>The index to percolate the document into. Defaults to index.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.PercolateType(System.String)">
            <summary>The type to percolate document into. Defaults to type.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.PercolateRouting(System.String)">
            <summary>The routing value to use when percolating the existing document.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.PercolatePreference(System.String)">
            <summary>Which shard to prefer when executing the percolate request.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.PercolateFormat(Elasticsearch.Net.PercolateFormat)">
            <summary>Return an array of matching query IDs instead of objects</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PercolateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PingRequestParameters">
            <summary>Request parameters descriptor for Ping
            <pre>
            https://www.elastic.co/guide/
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutScriptRequestParameters">
            <summary>Request parameters descriptor for PutScript
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutScriptRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutScriptRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutScriptRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutScriptRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutScriptRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutSearchTemplateRequestParameters">
            <summary>Request parameters descriptor for PutTemplate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutSearchTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutSearchTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutSearchTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutSearchTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutSearchTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ReindexOnServerRequestParameters">
            <summary>Request parameters descriptor for Reindex
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.Timeout(System.TimeSpan)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the reindex operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the reindex is complete.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.RequestsPerSecond(System.Int64)">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.Slices(System.Int64)">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexOnServerRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ReindexRethrottleRequestParameters">
            <summary>Request parameters descriptor for ReindexRethrottle
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexRethrottleRequestParameters.RequestsPerSecond(System.Int64)">
            <summary>The throttle to set on this request in floating sub-requests per second. -1 means set no throttle.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexRethrottleRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexRethrottleRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexRethrottleRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexRethrottleRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ReindexRethrottleRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.RemoteInfoRequestParameters">
            <summary>Request parameters descriptor for RemoteInfo
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RemoteInfoRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RemoteInfoRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RemoteInfoRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RemoteInfoRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RemoteInfoRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.RenderSearchTemplateRequestParameters">
            <summary>Request parameters descriptor for RenderSearchTemplate
            <pre>
            http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RenderSearchTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RenderSearchTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RenderSearchTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RenderSearchTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RenderSearchTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ScrollRequestParameters">
            <summary>Request parameters descriptor for Scroll
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ScrollRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ScrollRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ScrollRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ScrollRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ScrollRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SearchRequestParameters">
            <summary>Request parameters descriptor for Search
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.DocvalueFields(System.String[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Scroll(System.TimeSpan)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.BatchedReduceSize(System.Int64)">
            <summary>The number of shard results that should be reduced at once on the coordinating node. This value should be used as a protection mechanism to reduce the memory overhead per search request if the potential number of shards in the request can be large.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchRequestParameters.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="T:Elasticsearch.Net.SearchShardsRequestParameters">
            <summary>Request parameters descriptor for SearchShards
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchShardsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SearchTemplateRequestParameters">
            <summary>Request parameters descriptor for SearchTemplate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Scroll(System.TimeSpan)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Profile(System.Boolean)">
            <summary>Specify whether to profile the query execution</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.TypedKeys(System.Boolean)">
            <summary>Specify whether aggregation and suggester names should be prefixed by their respective types in the response</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SearchTemplateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SnapshotRequestParameters">
            <summary>Request parameters descriptor for SnapshotCreate
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CreateRepositoryRequestParameters">
            <summary>Request parameters descriptor for SnapshotCreateRepository
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.Verify(System.Boolean)">
            <summary>Whether to verify the repository after creation</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CreateRepositoryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteSnapshotRequestParameters">
            <summary>Request parameters descriptor for SnapshotDelete
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSnapshotRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSnapshotRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSnapshotRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSnapshotRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSnapshotRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteSnapshotRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteRepositoryRequestParameters">
            <summary>Request parameters descriptor for SnapshotDeleteRepository
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRepositoryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetSnapshotRequestParameters">
            <summary>Request parameters descriptor for SnapshotGet
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.Verbose(System.Boolean)">
            <summary>Whether to show verbose snapshot info or only show the basic info found in the repository index blob</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetSnapshotRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetRepositoryRequestParameters">
            <summary>Request parameters descriptor for SnapshotGetRepository
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRepositoryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.RestoreRequestParameters">
            <summary>Request parameters descriptor for SnapshotRestore
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Should this request wait until the operation has completed before returning</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestoreRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SnapshotStatusRequestParameters">
            <summary>Request parameters descriptor for SnapshotStatus
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether to ignore unavailable snapshots, defaults to false which means a SnapshotMissingException is thrown</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SnapshotStatusRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.VerifyRepositoryRequestParameters">
            <summary>Request parameters descriptor for SnapshotVerifyRepository
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.VerifyRepositoryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.SuggestRequestParameters">
            <summary>Request parameters descriptor for Suggest
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.SuggestRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.CancelTasksRequestParameters">
            <summary>Request parameters descriptor for TasksCancel
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be cancelled. Leave empty to cancel all.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.ParentNode(System.String)">
            <summary>Cancel tasks with specified parent node.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.ParentTask(System.String)">
            <summary>Cancel tasks with specified parent task id (node_id:task_number). Set to -1 to cancel all.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.CancelTasksRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetTaskRequestParameters">
            <summary>Request parameters descriptor for TasksGet
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetTaskRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetTaskRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetTaskRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetTaskRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetTaskRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetTaskRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ListTasksRequestParameters">
            <summary>Request parameters descriptor for TasksList
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.NodeId(System.String[])">
            <summary>A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.Actions(System.String[])">
            <summary>A comma-separated list of actions that should be returned. Leave empty to return all.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.Detailed(System.Boolean)">
            <summary>Return detailed task information (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.ParentNode(System.String)">
            <summary>Return tasks with specified parent node.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.ParentTask(System.String)">
            <summary>Return tasks with specified parent task id (node_id:task_number). Set to -1 to return all.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Wait for the matching tasks to complete (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.GroupBy(Elasticsearch.Net.GroupBy)">
            <summary>Group tasks by nodes or parent/child relationships</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ListTasksRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.TermVectorsRequestParameters">
            <summary>Request parameters descriptor for Termvectors
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.TermStatistics(System.Boolean)">
            <summary>Specifies if total term frequency and document frequency should be returned.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.FieldStatistics(System.Boolean)">
            <summary>Specifies if document count, sum of document frequencies and sum of total term frequencies should be returned.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Fields(System.String[])">
            <summary>A comma-separated list of fields to return.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Offsets(System.Boolean)">
            <summary>Specifies if term offsets should be returned.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Positions(System.Boolean)">
            <summary>Specifies if term positions should be returned.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Payloads(System.Boolean)">
            <summary>Specifies if term payloads should be returned.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random).</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Routing(System.String)">
            <summary>Specific routing value.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Parent(System.String)">
            <summary>Parent id of documents.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Realtime(System.Boolean)">
            <summary>Specifies if request is real-time as opposed to near-real-time (default: true).</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.TermVectorsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.UpdateRequestParameters">
            <summary>Request parameters descriptor for Update
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the update operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Lang(System.String)">
            <summary>The script language (default: painless)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Parent(System.String)">
            <summary>ID of the parent document. Is is only used for routing and when for the upsert request</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` then refresh the effected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` (the default) then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.RetryOnConflict(System.Int64)">
            <summary>Specify how many times should the operation be retried when a conflict occurs (default: 0)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Timestamp(System.TimeSpan)">
            <summary>Explicit timestamp for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Ttl(System.TimeSpan)">
            <summary>Expiration time for the document</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Version(System.Int64)">
            <summary>Explicit version number for concurrency control</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.VersionType(Elasticsearch.Net.VersionType)">
            <summary>Specific version type</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.UpdateByQueryRequestParameters">
            <summary>Request parameters descriptor for UpdateByQuery
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Analyzer(System.String)">
            <summary>The analyzer to use for the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.AnalyzeWildcard(System.Boolean)">
            <summary>Specify whether wildcard and prefix queries should be analyzed (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.DefaultOperator(Elasticsearch.Net.DefaultOperator)">
            <summary>The default operator for query string query (AND or OR)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Df(System.String)">
            <summary>The field to use as default where no field prefix is given in the query string</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.From(System.Int64)">
            <summary>Starting offset (default: 0)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.IgnoreUnavailable(System.Boolean)">
            <summary>Whether specified concrete indices should be ignored when unavailable (missing or closed)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.AllowNoIndices(System.Boolean)">
            <summary>Whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes `_all` string or when no indices have been specified)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Conflicts(Elasticsearch.Net.Conflicts)">
            <summary>What to do when the update by query hits version conflicts?</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.ExpandWildcards(Elasticsearch.Net.ExpandWildcards)">
            <summary>Whether to expand wildcard expression to concrete indices that are open, closed or both.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Lenient(System.Boolean)">
            <summary>Specify whether format-based query failures (such as providing text to a numeric field) should be ignored</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Pipeline(System.String)">
            <summary>Ingest pipeline to set on index requests made by this action. (default: none)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Preference(System.String)">
            <summary>Specify the node or shard the operation should be performed on (default: random)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.QueryOnQueryString(System.String)">
            <summary>Query in the Lucene query string syntax</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Routing(System.String[])">
            <summary>A comma-separated list of specific routing values</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Scroll(System.TimeSpan)">
            <summary>Specify how long a consistent view of the index should be maintained for scrolled search</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SearchType(Elasticsearch.Net.SearchType)">
            <summary>Search operation type</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SearchTimeout(System.TimeSpan)">
            <summary>Explicit timeout for each search request. Defaults to no timeout.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Size(System.Int64)">
            <summary>Number of hits to return (default: 10)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Sort(System.String[])">
            <summary>A comma-separated list of &lt;field&gt;:&lt;direction&gt; pairs</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SourceEnabled(System.String[])">
            <summary>True or false to return the _source field or not, or a list of fields to return</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SourceExclude(System.String[])">
            <summary>A list of fields to exclude from the returned _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SourceInclude(System.String[])">
            <summary>A list of fields to extract and return from the _source field</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.TerminateAfter(System.Int64)">
            <summary>The maximum number of documents to collect for each shard, upon reaching which the query execution will terminate early.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Stats(System.String[])">
            <summary>Specific &#39;tag&#39; of the request for logging and statistical purposes</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Version(System.Boolean)">
            <summary>Specify whether to return document version as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.VersionType(System.Boolean)">
            <summary>Should the document increment the version number (internal) on hit or not (reindex)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.RequestCache(System.Boolean)">
            <summary>Specify if request cache should be used for this request or not, defaults to index level setting</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Refresh(System.Boolean)">
            <summary>Should the effected indexes be refreshed?</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Timeout(System.TimeSpan)">
            <summary>Time each individual bulk request should wait for shards that are unavailable.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.WaitForActiveShards(System.String)">
            <summary>Sets the number of shard copies that must be active before proceeding with the update by query operation. Defaults to 1, meaning the primary shard only. Set to `all` for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.ScrollSize(System.Int64)">
            <summary>Size on the scroll request powering the update_by_query</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.WaitForCompletion(System.Boolean)">
            <summary>Should the request should block until the update by query operation is complete.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.RequestsPerSecond(System.Int64)">
            <summary>The throttle to set on this request in sub-requests per second. -1 means no throttle.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Slices(System.Int64)">
            <summary>The number of slices this task should be divided into. Defaults to 1 meaning the task isn&#39;t sliced into subtasks.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.Explain(System.Boolean)">
            <summary>Specify whether to return detailed information about score computation as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.StoredFields(System.String[])">
            <summary>A comma-separated list of stored fields to return as part of a hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.DocvalueFields(System.String[])">
            <summary>A comma-separated list of fields to return as the docvalue representation of a field for each hit</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.LowercaseExpandedTerms(System.Boolean)">
            <summary>Specify whether query terms should be lowercased</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SuggestField(System.String)">
            <summary>Specify which field to use for suggestions</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SuggestMode(Elasticsearch.Net.SuggestMode)">
            <summary>Specify suggest mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SuggestSize(System.Int64)">
            <summary>How many suggestions to return in response</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.SuggestText(System.String)">
            <summary>The source text for which the suggestions should be returned</summary>
        </member>
        <member name="M:Elasticsearch.Net.UpdateByQueryRequestParameters.TrackScores(System.Boolean)">
            <summary>Whether to calculate and return scores even if they are not used for sorting</summary>
        </member>
        <member name="T:Elasticsearch.Net.GraphExploreRequestParameters">
            <summary>Request parameters descriptor for XpackGraphExplore
            <pre>
            https://www.elastic.co/guide/en/graph/current/explore.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.Routing(System.String)">
            <summary>Specific routing value</summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.Timeout(System.TimeSpan)">
            <summary>Explicit operation timeout</summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GraphExploreRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.XPackInfoRequestParameters">
            <summary>Request parameters descriptor for XpackInfo
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackInfoRequestParameters.Human(System.Boolean)">
            <summary>Presents additional info for humans (feature descriptions and X-Pack tagline)</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackInfoRequestParameters.Categories(System.String[])">
            <summary>Comma-separated list of info categories. Can be any of: build, license, features</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackInfoRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackInfoRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackInfoRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackInfoRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.XPackUsageRequestParameters">
            <summary>Request parameters descriptor for XpackUsage
            <pre>
            Retrieve information about xpack features usage
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackUsageRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Specify timeout for watch write operation</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackUsageRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackUsageRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackUsageRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackUsageRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.XPackUsageRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteLicenseRequestParameters">
            <summary>Request parameters descriptor for XpackLicenseDelete
            <pre>
            https://www.elastic.co/guide/en/shield/current/license-management.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteLicenseRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteLicenseRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteLicenseRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteLicenseRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteLicenseRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetLicenseRequestParameters">
            <summary>Request parameters descriptor for XpackLicenseGet
            <pre>
            https://www.elastic.co/guide/en/shield/current/license-management.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetLicenseRequestParameters.Local(System.Boolean)">
            <summary>Return local information, do not retrieve the state from master node (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetLicenseRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetLicenseRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetLicenseRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetLicenseRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetLicenseRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PostLicenseRequestParameters">
            <summary>Request parameters descriptor for XpackLicensePost
            <pre>
            https://www.elastic.co/guide/en/shield/current/license-management.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PostLicenseRequestParameters.Acknowledge(System.Boolean)">
            <summary>whether the user has acknowledged acknowledge messages (default: false)</summary>
        </member>
        <member name="M:Elasticsearch.Net.PostLicenseRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PostLicenseRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PostLicenseRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PostLicenseRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PostLicenseRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.AuthenticateRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityAuthenticate
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.AuthenticateRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AuthenticateRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AuthenticateRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AuthenticateRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AuthenticateRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ChangePasswordRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityChangePassword
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ChangePasswordRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ChangePasswordRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ChangePasswordRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ChangePasswordRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ChangePasswordRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ChangePasswordRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClearCachedRealmsRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityClearCachedRealms
            <pre>
            https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRealmsRequestParameters.Usernames(System.String[])">
            <summary>Comma-separated list of usernames to clear from the cache</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRealmsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRealmsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRealmsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRealmsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRealmsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ClearCachedRolesRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityClearCachedRoles
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRolesRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRolesRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRolesRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRolesRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ClearCachedRolesRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteRoleRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityDeleteRole
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteRoleMappingRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityDeleteRoleMapping
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleMappingRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleMappingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleMappingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleMappingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleMappingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteRoleMappingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteUserRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityDeleteUser
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteUserRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteUserRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteUserRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteUserRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteUserRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteUserRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DisableUserRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityDisableUser
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DisableUserRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DisableUserRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DisableUserRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DisableUserRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DisableUserRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DisableUserRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.EnableUserRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityEnableUser
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.EnableUserRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.EnableUserRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.EnableUserRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.EnableUserRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.EnableUserRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.EnableUserRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetRoleRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityGetRole
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetRoleMappingRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityGetRoleMapping
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleMappingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleMappingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleMappingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleMappingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetRoleMappingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetUserAccessTokenRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityGetToken
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserAccessTokenRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserAccessTokenRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserAccessTokenRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserAccessTokenRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserAccessTokenRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetUserRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityGetUser
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetUserRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityInvalidateToken
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutRoleRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityPutRole
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutRoleMappingRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityPutRoleMapping
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleMappingRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleMappingRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleMappingRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleMappingRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleMappingRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutRoleMappingRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutUserRequestParameters">
            <summary>Request parameters descriptor for XpackSecurityPutUser
            <pre>
            https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutUserRequestParameters.Refresh(Elasticsearch.Net.Refresh)">
            <summary>If `true` (the default) then refresh the affected shards to make this operation visible to search, if `wait_for` then wait for a refresh to make this operation visible to search, if `false` then do nothing with refreshes.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutUserRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutUserRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutUserRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutUserRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutUserRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.AcknowledgeWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherAckWatch
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.AcknowledgeWatchRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.AcknowledgeWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AcknowledgeWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AcknowledgeWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AcknowledgeWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.AcknowledgeWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ActivateWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherActivateWatch
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ActivateWatchRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.ActivateWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ActivateWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ActivateWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ActivateWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ActivateWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeactivateWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherDeactivateWatch
            <pre>
            https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeactivateWatchRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeactivateWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeactivateWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeactivateWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeactivateWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeactivateWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.DeleteWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherDeleteWatch
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteWatchRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.DeleteWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ExecuteWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherExecuteWatch
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ExecuteWatchRequestParameters.Debug(System.Boolean)">
            <summary>indicates whether the watch should execute in debug mode</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExecuteWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExecuteWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExecuteWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExecuteWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.ExecuteWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.GetWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherGetWatch
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.GetWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.GetWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.PutWatchRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherPutWatch
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.MasterTimeout(System.TimeSpan)">
            <summary>Explicit operation timeout for connection to master node</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.Active(System.Boolean)">
            <summary>Specify whether the watch is in/active by default</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.PutWatchRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.RestartWatcherRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherRestart
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.RestartWatcherRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestartWatcherRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestartWatcherRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestartWatcherRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.RestartWatcherRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.StartWatcherRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherStart
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.StartWatcherRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StartWatcherRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StartWatcherRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StartWatcherRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StartWatcherRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.WatcherStatsRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherStats
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.WatcherStatsRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.WatcherStatsRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.WatcherStatsRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.WatcherStatsRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.WatcherStatsRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.StopWatcherRequestParameters">
            <summary>Request parameters descriptor for XpackWatcherStop
            <pre>
            http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.StopWatcherRequestParameters.Pretty(System.Boolean)">
            <summary>Pretty format the returned JSON response.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StopWatcherRequestParameters.Human(System.Boolean)">
            <summary>Return human readable values for statistics.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StopWatcherRequestParameters.ErrorTrace(System.Boolean)">
            <summary>Include the stack trace of returned errors.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StopWatcherRequestParameters.Source(System.String)">
            <summary>The URL-encoded request definition. Useful for libraries that do not accept a request body for non-POST requests.</summary>
        </member>
        <member name="M:Elasticsearch.Net.StopWatcherRequestParameters.FilterPath(System.String[])">
            <summary>A comma-separated list of filters used to reduce the respone.</summary>
        </member>
        <member name="T:Elasticsearch.Net.ElasticLowLevelClient">
            <summary>
            Low level client that exposes all of elasticsearch API endpoints but leaves you in charge of building request and handling the response
            </summary>
            <summary>
            Raw operations with Elasticsearch
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.#ctor">
            <summary>Instantiate a new low level elasticsearch client to http://localhost:9200</summary>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.#ctor(Elasticsearch.Net.IConnectionConfigurationValues)">
            <summary>Instantiate a new low level elasticsearch client using the specified settings</summary>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.#ctor(Elasticsearch.Net.ITransport{Elasticsearch.Net.IConnectionConfigurationValues})">
            <summary>
            Instantiate a new low level elasticsearch client explicitly specifying a custom transport setup
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Bulk``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a POST on /_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Bulk``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a POST on /{index}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Bulk``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkPut``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a PUT on /_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkPutAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkPut``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a PUT on /{index}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkPutAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkPut``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.BulkPutAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAliases``1(System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters})">
            <summary>Represents a GET on /_cat/aliases
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAliasesAsync``1(System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/aliases
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAliases``1(System.String,System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters})">
            <summary>Represents a GET on /_cat/aliases/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAliasesAsync``1(System.String,System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/aliases/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAllocation``1(System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters})">
            <summary>Represents a GET on /_cat/allocation
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAllocationAsync``1(System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/allocation
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAllocation``1(System.String,System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters})">
            <summary>Represents a GET on /_cat/allocation/{node_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatAllocationAsync``1(System.String,System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/allocation/{node_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatCount``1(System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters})">
            <summary>Represents a GET on /_cat/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatCountAsync``1(System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatCount``1(System.String,System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters})">
            <summary>Represents a GET on /_cat/count/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatCountAsync``1(System.String,System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/count/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatFielddata``1(System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters})">
            <summary>Represents a GET on /_cat/fielddata
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatFielddataAsync``1(System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/fielddata
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatFielddata``1(System.String,System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters})">
            <summary>Represents a GET on /_cat/fielddata/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields to return the fielddata size</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatFielddataAsync``1(System.String,System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/fielddata/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields to return the fielddata size</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatHealth``1(System.Func{Elasticsearch.Net.CatHealthRequestParameters,Elasticsearch.Net.CatHealthRequestParameters})">
            <summary>Represents a GET on /_cat/health
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatHealthAsync``1(System.Func{Elasticsearch.Net.CatHealthRequestParameters,Elasticsearch.Net.CatHealthRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/health
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatHelp``1(System.Func{Elasticsearch.Net.CatHelpRequestParameters,Elasticsearch.Net.CatHelpRequestParameters})">
            <summary>Represents a GET on /_cat
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatHelpAsync``1(System.Func{Elasticsearch.Net.CatHelpRequestParameters,Elasticsearch.Net.CatHelpRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatIndices``1(System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters})">
            <summary>Represents a GET on /_cat/indices
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatIndicesAsync``1(System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/indices
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatIndices``1(System.String,System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters})">
            <summary>Represents a GET on /_cat/indices/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatIndicesAsync``1(System.String,System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/indices/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatMaster``1(System.Func{Elasticsearch.Net.CatMasterRequestParameters,Elasticsearch.Net.CatMasterRequestParameters})">
            <summary>Represents a GET on /_cat/master
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatMasterAsync``1(System.Func{Elasticsearch.Net.CatMasterRequestParameters,Elasticsearch.Net.CatMasterRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/master
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatNodeattrs``1(System.Func{Elasticsearch.Net.CatNodeAttributesRequestParameters,Elasticsearch.Net.CatNodeAttributesRequestParameters})">
            <summary>Represents a GET on /_cat/nodeattrs
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatNodeattrsAsync``1(System.Func{Elasticsearch.Net.CatNodeAttributesRequestParameters,Elasticsearch.Net.CatNodeAttributesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/nodeattrs
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatNodes``1(System.Func{Elasticsearch.Net.CatNodesRequestParameters,Elasticsearch.Net.CatNodesRequestParameters})">
            <summary>Represents a GET on /_cat/nodes
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatNodesAsync``1(System.Func{Elasticsearch.Net.CatNodesRequestParameters,Elasticsearch.Net.CatNodesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/nodes
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatPendingTasks``1(System.Func{Elasticsearch.Net.CatPendingTasksRequestParameters,Elasticsearch.Net.CatPendingTasksRequestParameters})">
            <summary>Represents a GET on /_cat/pending_tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatPendingTasksAsync``1(System.Func{Elasticsearch.Net.CatPendingTasksRequestParameters,Elasticsearch.Net.CatPendingTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/pending_tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatPlugins``1(System.Func{Elasticsearch.Net.CatPluginsRequestParameters,Elasticsearch.Net.CatPluginsRequestParameters})">
            <summary>Represents a GET on /_cat/plugins
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatPluginsAsync``1(System.Func{Elasticsearch.Net.CatPluginsRequestParameters,Elasticsearch.Net.CatPluginsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/plugins
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatRecovery``1(System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters})">
            <summary>Represents a GET on /_cat/recovery
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatRecoveryAsync``1(System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/recovery
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatRecovery``1(System.String,System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters})">
            <summary>Represents a GET on /_cat/recovery/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatRecoveryAsync``1(System.String,System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/recovery/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatRepositories``1(System.Func{Elasticsearch.Net.CatRepositoriesRequestParameters,Elasticsearch.Net.CatRepositoriesRequestParameters})">
            <summary>Represents a GET on /_cat/repositories
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatRepositoriesAsync``1(System.Func{Elasticsearch.Net.CatRepositoriesRequestParameters,Elasticsearch.Net.CatRepositoriesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/repositories
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSegments``1(System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters})">
            <summary>Represents a GET on /_cat/segments
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSegmentsAsync``1(System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/segments
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSegments``1(System.String,System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters})">
            <summary>Represents a GET on /_cat/segments/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSegmentsAsync``1(System.String,System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/segments/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatShards``1(System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters})">
            <summary>Represents a GET on /_cat/shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatShardsAsync``1(System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatShards``1(System.String,System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters})">
            <summary>Represents a GET on /_cat/shards/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatShardsAsync``1(System.String,System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/shards/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSnapshots``1(System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters})">
            <summary>Represents a GET on /_cat/snapshots
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSnapshotsAsync``1(System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/snapshots
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSnapshots``1(System.String,System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters})">
            <summary>Represents a GET on /_cat/snapshots/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="repository">Name of repository from which to fetch the snapshot information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatSnapshotsAsync``1(System.String,System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/snapshots/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="repository">Name of repository from which to fetch the snapshot information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatTasks``1(System.Func{Elasticsearch.Net.CatTasksRequestParameters,Elasticsearch.Net.CatTasksRequestParameters})">
            <summary>Represents a GET on /_cat/tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatTasksAsync``1(System.Func{Elasticsearch.Net.CatTasksRequestParameters,Elasticsearch.Net.CatTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatTemplates``1(System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters})">
            <summary>Represents a GET on /_cat/templates
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatTemplatesAsync``1(System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/templates
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatTemplates``1(System.String,System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters})">
            <summary>Represents a GET on /_cat/templates/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="name">A pattern that returned template names must match</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatTemplatesAsync``1(System.String,System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/templates/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="name">A pattern that returned template names must match</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatThreadPool``1(System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters})">
            <summary>Represents a GET on /_cat/thread_pool
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatThreadPoolAsync``1(System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/thread_pool
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatThreadPool``1(System.String,System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters})">
            <summary>Represents a GET on /_cat/thread_pool/{thread_pool_patterns}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="thread_pool_patterns">A comma-separated list of regular-expressions to filter the thread pools in the output</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CatThreadPoolAsync``1(System.String,System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/thread_pool/{thread_pool_patterns}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="thread_pool_patterns">A comma-separated list of regular-expressions to filter the thread pools in the output</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClearScroll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClearScrollRequestParameters,Elasticsearch.Net.ClearScrollRequestParameters})">
            <summary>Represents a DELETE on /_search/scroll
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">A comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClearScrollAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClearScrollRequestParameters,Elasticsearch.Net.ClearScrollRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_search/scroll
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">A comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterAllocationExplainGet``1(System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters})">
            <summary>Represents a GET on /_cluster/allocation/explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterAllocationExplainGetAsync``1(System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/allocation/explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterAllocationExplain``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters})">
            <summary>Represents a POST on /_cluster/allocation/explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="body">The index, shard, and primary flag to explain. Empty means &#39;explain the first unassigned shard&#39;</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterAllocationExplainAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_cluster/allocation/explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="body">The index, shard, and primary flag to explain. Empty means &#39;explain the first unassigned shard&#39;</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterGetSettings``1(System.Func{Elasticsearch.Net.ClusterGetSettingsRequestParameters,Elasticsearch.Net.ClusterGetSettingsRequestParameters})">
            <summary>Represents a GET on /_cluster/settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterGetSettingsAsync``1(System.Func{Elasticsearch.Net.ClusterGetSettingsRequestParameters,Elasticsearch.Net.ClusterGetSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterHealth``1(System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters})">
            <summary>Represents a GET on /_cluster/health
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterHealthAsync``1(System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/health
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterHealth``1(System.String,System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters})">
            <summary>Represents a GET on /_cluster/health/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterHealthAsync``1(System.String,System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/health/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterPendingTasks``1(System.Func{Elasticsearch.Net.ClusterPendingTasksRequestParameters,Elasticsearch.Net.ClusterPendingTasksRequestParameters})">
            <summary>Represents a GET on /_cluster/pending_tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterPendingTasksAsync``1(System.Func{Elasticsearch.Net.ClusterPendingTasksRequestParameters,Elasticsearch.Net.ClusterPendingTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/pending_tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterPutSettings``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterPutSettingsRequestParameters,Elasticsearch.Net.ClusterPutSettingsRequestParameters})">
            <summary>Represents a PUT on /_cluster/settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterPutSettingsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterPutSettingsRequestParameters,Elasticsearch.Net.ClusterPutSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_cluster/settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterReroute``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterRerouteRequestParameters,Elasticsearch.Net.ClusterRerouteRequestParameters})">
            <summary>Represents a POST on /_cluster/reroute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html </para>
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterRerouteAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterRerouteRequestParameters,Elasticsearch.Net.ClusterRerouteRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_cluster/reroute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html </para>
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterState``1(System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters})">
            <summary>Represents a GET on /_cluster/state
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStateAsync``1(System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/state
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterState``1(System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters})">
            <summary>Represents a GET on /_cluster/state/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStateAsync``1(System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/state/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterState``1(System.String,System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters})">
            <summary>Represents a GET on /_cluster/state/{metric}/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStateAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/state/{metric}/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStats``1(System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters})">
            <summary>Represents a GET on /_cluster/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStatsAsync``1(System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStats``1(System.String,System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters})">
            <summary>Represents a GET on /_cluster/stats/nodes/{node_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ClusterStatsAsync``1(System.String,System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/stats/nodes/{node_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Count``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a POST on /_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Count``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a POST on /{index}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Count``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountGet``1(System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a GET on /_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountGetAsync``1(System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountGet``1(System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a GET on /{index}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountGetAsync``1(System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountGet``1(System.String,System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolateGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolateGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolate``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CountPercolateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Create``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/{id}/_create
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CreateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/{id}/_create
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CreatePost``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_create
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.CreatePostAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_create
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Delete``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DeleteRequestParameters,Elasticsearch.Net.DeleteRequestParameters})">
            <summary>Represents a DELETE on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DeleteRequestParameters,Elasticsearch.Net.DeleteRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteByQuery``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/_delete_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteByQueryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_delete_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteByQuery``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_delete_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteByQueryAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_delete_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteScript``1(System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters})">
            <summary>Represents a DELETE on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteScriptAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteScript``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters})">
            <summary>Represents a DELETE on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteScriptAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteTemplate``1(System.String,System.Func{Elasticsearch.Net.DeleteSearchTemplateRequestParameters,Elasticsearch.Net.DeleteSearchTemplateRequestParameters})">
            <summary>Represents a DELETE on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.DeleteTemplateAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteSearchTemplateRequestParameters,Elasticsearch.Net.DeleteSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Exists``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DocumentExistsRequestParameters,Elasticsearch.Net.DocumentExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ExistsAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DocumentExistsRequestParameters,Elasticsearch.Net.DocumentExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ExistsSource``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceExistsRequestParameters,Elasticsearch.Net.SourceExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/{type}/{id}/_source
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ExistsSourceAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceExistsRequestParameters,Elasticsearch.Net.SourceExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/{type}/{id}/_source
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ExplainGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ExplainGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Explain``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="body">The query definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ExplainAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="body">The query definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCapsGet``1(System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a GET on /_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCapsGetAsync``1(System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCapsGet``1(System.String,System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a GET on /{index}/_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCapsGetAsync``1(System.String,System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCaps``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a POST on /_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCapsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCaps``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a POST on /{index}/_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldCapsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStatsGet``1(System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a GET on /_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStatsGetAsync``1(System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStatsGet``1(System.String,System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a GET on /{index}/_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStatsGetAsync``1(System.String,System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStats``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a POST on /_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStatsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStats``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a POST on /{index}/_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.FieldStatsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Get``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetRequestParameters,Elasticsearch.Net.GetRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetRequestParameters,Elasticsearch.Net.GetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetScript``1(System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters})">
            <summary>Represents a GET on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetScriptAsync``1(System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetScript``1(System.String,System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters})">
            <summary>Represents a GET on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetScriptAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetSource``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceRequestParameters,Elasticsearch.Net.SourceRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_source
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetSourceAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceRequestParameters,Elasticsearch.Net.SourceRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_source
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetTemplate``1(System.String,System.Func{Elasticsearch.Net.GetSearchTemplateRequestParameters,Elasticsearch.Net.GetSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.GetTemplateAsync``1(System.String,System.Func{Elasticsearch.Net.GetSearchTemplateRequestParameters,Elasticsearch.Net.GetSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Index``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a POST on /{index}/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndexAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Index``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndexAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndexPut``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndexPutAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndexPut``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndexPutAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeGetForAll``1(System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a GET on /_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeGetForAllAsync``1(System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeGet``1(System.String,System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a GET on /{index}/_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeGetAsync``1(System.String,System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a POST on /_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyze``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a POST on /{index}/_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesAnalyzeAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheForAll``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a POST on /_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheForAllAsync``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCache``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a POST on /{index}/_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheGetForAll``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a GET on /_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheGetForAllAsync``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheGet``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a GET on /{index}/_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClearCacheGetAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesClose``1(System.String,System.Func{Elasticsearch.Net.CloseIndexRequestParameters,Elasticsearch.Net.CloseIndexRequestParameters})">
            <summary>Represents a POST on /{index}/_close
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to close</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesCloseAsync``1(System.String,System.Func{Elasticsearch.Net.CloseIndexRequestParameters,Elasticsearch.Net.CloseIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_close
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to close</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesCreate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateIndexRequestParameters,Elasticsearch.Net.CreateIndexRequestParameters})">
            <summary>Represents a PUT on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesCreateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateIndexRequestParameters,Elasticsearch.Net.CreateIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesDelete``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexRequestParameters,Elasticsearch.Net.DeleteIndexRequestParameters})">
            <summary>Represents a DELETE on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesDeleteAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexRequestParameters,Elasticsearch.Net.DeleteIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesDeleteAlias``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteAliasRequestParameters,Elasticsearch.Net.DeleteAliasRequestParameters})">
            <summary>Represents a DELETE on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
            <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesDeleteAliasAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteAliasRequestParameters,Elasticsearch.Net.DeleteAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
            <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesDeleteTemplateForAll``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexTemplateRequestParameters,Elasticsearch.Net.DeleteIndexTemplateRequestParameters})">
            <summary>Represents a DELETE on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesDeleteTemplateForAllAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexTemplateRequestParameters,Elasticsearch.Net.DeleteIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExists``1(System.String,System.Func{Elasticsearch.Net.IndexExistsRequestParameters,Elasticsearch.Net.IndexExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAsync``1(System.String,System.Func{Elasticsearch.Net.IndexExistsRequestParameters,Elasticsearch.Net.IndexExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAliasForAll``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters})">
            <summary>Represents a HEAD on /_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAliasForAllAsync``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAlias``1(System.String,System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAliasAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAlias``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/_alias
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsAliasAsync``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/_alias
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsTemplateForAll``1(System.String,System.Func{Elasticsearch.Net.IndexTemplateExistsRequestParameters,Elasticsearch.Net.IndexTemplateExistsRequestParameters})">
            <summary>Represents a HEAD on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsTemplateForAllAsync``1(System.String,System.Func{Elasticsearch.Net.IndexTemplateExistsRequestParameters,Elasticsearch.Net.IndexTemplateExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsType``1(System.String,System.String,System.Func{Elasticsearch.Net.TypeExistsRequestParameters,Elasticsearch.Net.TypeExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesExistsTypeAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.TypeExistsRequestParameters,Elasticsearch.Net.TypeExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushForAll``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a POST on /_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushForAllAsync``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlush``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a POST on /{index}/_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushAsync``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushGetForAll``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a GET on /_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushGetForAllAsync``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushGet``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a GET on /{index}/_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushGetAsync``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedForAll``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a POST on /_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedForAllAsync``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSynced``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a POST on /{index}/_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedAsync``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedGetForAll``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a GET on /_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedGetForAllAsync``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedGet``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a GET on /{index}/_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesFlushSyncedGetAsync``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesForcemergeForAll``1(System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters})">
            <summary>Represents a POST on /_forcemerge
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesForcemergeForAllAsync``1(System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_forcemerge
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesForcemerge``1(System.String,System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters})">
            <summary>Represents a POST on /{index}/_forcemerge
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesForcemergeAsync``1(System.String,System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_forcemerge
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGet``1(System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters})">
            <summary>Represents a GET on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGet``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters})">
            <summary>Represents a GET on /{index}/{feature}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="feature">A comma-separated list of features</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{feature}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="feature">A comma-separated list of features</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAliasForAll``1(System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /_alias
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAliasForAllAsync``1(System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_alias
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAliasForAll``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAliasForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAlias``1(System.String,System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAliasAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAlias``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /{index}/_alias
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetAliasAsync``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_alias
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMappingForAll``1(System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /_mapping/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMappingForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMapping``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMappingAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMappingForAll``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /_mapping/{type}/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMappingForAllAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping/{type}/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMapping``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping/{type}/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetFieldMappingAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping/{type}/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMappingForAll``1(System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMappingForAllAsync``1(System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMapping``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMappingAsync``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMappingForAll``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMappingForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMapping``1(System.String,System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetMappingAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettingsForAll``1(System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettingsForAllAsync``1(System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettings``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /{index}/_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettingsAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettings``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /{index}/_settings/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettingsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_settings/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettingsForAll``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /_settings/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetSettingsForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_settings/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetTemplateForAll``1(System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters})">
            <summary>Represents a GET on /_template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetTemplateForAllAsync``1(System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetTemplateForAll``1(System.String,System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters})">
            <summary>Represents a GET on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetTemplateForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetUpgradeForAll``1(System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters})">
            <summary>Represents a GET on /_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetUpgradeForAllAsync``1(System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetUpgrade``1(System.String,System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters})">
            <summary>Represents a GET on /{index}/_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesGetUpgradeAsync``1(System.String,System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesOpen``1(System.String,System.Func{Elasticsearch.Net.OpenIndexRequestParameters,Elasticsearch.Net.OpenIndexRequestParameters})">
            <summary>Represents a POST on /{index}/_open
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to open</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesOpenAsync``1(System.String,System.Func{Elasticsearch.Net.OpenIndexRequestParameters,Elasticsearch.Net.OpenIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_open
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to open</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutAlias``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters})">
            <summary>Represents a PUT on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutAliasAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutAliasPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters})">
            <summary>Represents a POST on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutAliasPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMapping``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a PUT on /_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingPostForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a POST on /_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutMappingPostForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutSettingsForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters})">
            <summary>Represents a PUT on /_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutSettingsForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutSettings``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters})">
            <summary>Represents a PUT on /{index}/_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutSettingsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutTemplateForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters})">
            <summary>Represents a PUT on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutTemplateForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutTemplatePostForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters})">
            <summary>Represents a POST on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesPutTemplatePostForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRecoveryForAll``1(System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters})">
            <summary>Represents a GET on /_recovery
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRecoveryForAllAsync``1(System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_recovery
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRecovery``1(System.String,System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters})">
            <summary>Represents a GET on /{index}/_recovery
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRecoveryAsync``1(System.String,System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_recovery
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshForAll``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a POST on /_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshForAllAsync``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefresh``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a POST on /{index}/_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshAsync``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshGetForAll``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a GET on /_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshGetForAllAsync``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshGet``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a GET on /{index}/_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRefreshGetAsync``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRolloverForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters})">
            <summary>Represents a POST on /{alias}/_rollover
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRolloverForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{alias}/_rollover
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRolloverForAll``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters})">
            <summary>Represents a POST on /{alias}/_rollover/{new_index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="new_index">The name of the rollover index</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesRolloverForAllAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{alias}/_rollover/{new_index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="new_index">The name of the rollover index</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesSegmentsForAll``1(System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters})">
            <summary>Represents a GET on /_segments
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesSegmentsForAllAsync``1(System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_segments
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesSegments``1(System.String,System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters})">
            <summary>Represents a GET on /{index}/_segments
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesSegmentsAsync``1(System.String,System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_segments
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShardStoresForAll``1(System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters})">
            <summary>Represents a GET on /_shard_stores
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShardStoresForAllAsync``1(System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_shard_stores
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShardStores``1(System.String,System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters})">
            <summary>Represents a GET on /{index}/_shard_stores
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShardStoresAsync``1(System.String,System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_shard_stores
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShrink``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters})">
            <summary>Represents a PUT on /{index}/_shrink/{target}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShrinkAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_shrink/{target}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShrinkPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters})">
            <summary>Represents a POST on /{index}/_shrink/{target}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesShrinkPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_shrink/{target}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStatsForAll``1(System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStatsForAllAsync``1(System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStatsForAll``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /_stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStatsForAllAsync``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStats``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /{index}/_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStatsAsync``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStats``1(System.String,System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /{index}/_stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesStatsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesUpdateAliasesForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkAliasRequestParameters,Elasticsearch.Net.BulkAliasRequestParameters})">
            <summary>Represents a POST on /_aliases
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="body">The definition of `actions` to perform</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesUpdateAliasesForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkAliasRequestParameters,Elasticsearch.Net.BulkAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_aliases
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="body">The definition of `actions` to perform</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesUpgradeForAll``1(System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters})">
            <summary>Represents a POST on /_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesUpgradeForAllAsync``1(System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesUpgrade``1(System.String,System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters})">
            <summary>Represents a POST on /{index}/_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesUpgradeAsync``1(System.String,System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryGetForAll``1(System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a GET on /_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryGetForAllAsync``1(System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryGet``1(System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a GET on /{index}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryGetAsync``1(System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryGet``1(System.String,System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a POST on /_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQuery``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a POST on /{index}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQuery``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IndicesValidateQueryAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Info``1(System.Func{Elasticsearch.Net.RootNodeInfoRequestParameters,Elasticsearch.Net.RootNodeInfoRequestParameters})">
            <summary>Represents a GET on /
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.InfoAsync``1(System.Func{Elasticsearch.Net.RootNodeInfoRequestParameters,Elasticsearch.Net.RootNodeInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestDeletePipeline``1(System.String,System.Func{Elasticsearch.Net.DeletePipelineRequestParameters,Elasticsearch.Net.DeletePipelineRequestParameters})">
            <summary>Represents a DELETE on /_ingest/pipeline/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestDeletePipelineAsync``1(System.String,System.Func{Elasticsearch.Net.DeletePipelineRequestParameters,Elasticsearch.Net.DeletePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_ingest/pipeline/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestGetPipeline``1(System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestGetPipelineAsync``1(System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestGetPipeline``1(System.String,System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Comma separated list of pipeline ids. Wildcards supported</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestGetPipelineAsync``1(System.String,System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Comma separated list of pipeline ids. Wildcards supported</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestPutPipeline``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutPipelineRequestParameters,Elasticsearch.Net.PutPipelineRequestParameters})">
            <summary>Represents a PUT on /_ingest/pipeline/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The ingest definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestPutPipelineAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutPipelineRequestParameters,Elasticsearch.Net.PutPipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_ingest/pipeline/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The ingest definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulateGet``1(System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulateGetAsync``1(System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulateGet``1(System.String,System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulateGetAsync``1(System.String,System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a POST on /_ingest/pipeline/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_ingest/pipeline/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a POST on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.IngestSimulateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetGet``1(System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a GET on /_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetGetAsync``1(System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetGet``1(System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a GET on /{index}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mget``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a POST on /_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mget``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a POST on /{index}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mget``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MgetAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateGet``1(System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a GET on /_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateGetAsync``1(System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateGet``1(System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a GET on /{index}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mpercolate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a POST on /_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mpercolate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a POST on /{index}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mpercolate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MpercolateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchGet``1(System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a GET on /_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchGetAsync``1(System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchGet``1(System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a GET on /{index}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Msearch``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a POST on /_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Msearch``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a POST on /{index}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Msearch``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateGet``1(System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateGetAsync``1(System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateGet``1(System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MsearchTemplateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsGet``1(System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a GET on /_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsGetAsync``1(System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsGet``1(System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mtermvectors``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a POST on /_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mtermvectors``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Mtermvectors``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.MtermvectorsAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesHotThreadsForAll``1(System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters})">
            <summary>Represents a GET on /_cluster/nodes/hotthreads
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesHotThreadsForAllAsync``1(System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/nodes/hotthreads
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesHotThreads``1(System.String,System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters})">
            <summary>Represents a GET on /_cluster/nodes/{node_id}/hotthreads
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesHotThreadsAsync``1(System.String,System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/nodes/{node_id}/hotthreads
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfoForAll``1(System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfoForAllAsync``1(System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfo``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfoAsync``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfoForAll``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfoForAllAsync``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfo``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesInfoAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsForAll``1(System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsForAllAsync``1(System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStats``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsAsync``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsForAll``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsForAllAsync``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStats``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsForAll``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/stats/{metric}/{index_metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsForAllAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/stats/{metric}/{index_metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStats``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}/{index_metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.NodesStatsAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}/{index_metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PercolateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PercolateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PercolateGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PercolateGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Percolate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PercolateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Percolate``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PercolateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Ping``1(System.Func{Elasticsearch.Net.PingRequestParameters,Elasticsearch.Net.PingRequestParameters})">
            <summary>Represents a HEAD on /
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PingAsync``1(System.Func{Elasticsearch.Net.PingRequestParameters,Elasticsearch.Net.PingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScript``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a PUT on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScriptAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScript``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a PUT on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScriptAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScriptPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a POST on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScriptPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScriptPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a POST on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutScriptPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters})">
            <summary>Represents a PUT on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutTemplatePost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.PutTemplatePostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Reindex``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ReindexOnServerRequestParameters,Elasticsearch.Net.ReindexOnServerRequestParameters})">
            <summary>Represents a POST on /_reindex
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL and the prototype for the index request.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ReindexAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ReindexOnServerRequestParameters,Elasticsearch.Net.ReindexOnServerRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_reindex
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL and the prototype for the index request.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ReindexRethrottle``1(System.String,System.Func{Elasticsearch.Net.ReindexRethrottleRequestParameters,Elasticsearch.Net.ReindexRethrottleRequestParameters})">
            <summary>Represents a POST on /_reindex/{task_id}/_rethrottle
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="task_id">The task id to rethrottle</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ReindexRethrottleAsync``1(System.String,System.Func{Elasticsearch.Net.ReindexRethrottleRequestParameters,Elasticsearch.Net.ReindexRethrottleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_reindex/{task_id}/_rethrottle
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="task_id">The task id to rethrottle</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RemoteInfo``1(System.Func{Elasticsearch.Net.RemoteInfoRequestParameters,Elasticsearch.Net.RemoteInfoRequestParameters})">
            <summary>Represents a GET on /_remote/info
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RemoteInfoAsync``1(System.Func{Elasticsearch.Net.RemoteInfoRequestParameters,Elasticsearch.Net.RemoteInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_remote/info
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplateGet``1(System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_render/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplateGetAsync``1(System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_render/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplateGet``1(System.String,System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_render/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplateGetAsync``1(System.String,System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_render/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_render/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_render/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_render/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.RenderSearchTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_render/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ScrollGet``1(System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters})">
            <summary>Represents a GET on /_search/scroll
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ScrollGetAsync``1(System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search/scroll
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Scroll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters})">
            <summary>Represents a POST on /_search/scroll
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.ScrollAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search/scroll
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchGet``1(System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a GET on /_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchGetAsync``1(System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchGet``1(System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a GET on /{index}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchGetAsync``1(System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchGet``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Search``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a POST on /_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Search``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a POST on /{index}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Search``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsGet``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a GET on /_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsGetAsync``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsGet``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a GET on /{index}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsGetAsync``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsGet``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShards``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a POST on /_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsAsync``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShards``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a POST on /{index}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsAsync``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShards``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchShardsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateGet``1(System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a GET on /_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateGetAsync``1(System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateGet``1(System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateGetAsync``1(System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a POST on /_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SearchTemplateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters})">
            <summary>Represents a PUT on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreatePost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreatePostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreateRepository``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters})">
            <summary>Represents a PUT on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreateRepositoryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreateRepositoryPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotCreateRepositoryPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotDelete``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteSnapshotRequestParameters,Elasticsearch.Net.DeleteSnapshotRequestParameters})">
            <summary>Represents a DELETE on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotDeleteAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteSnapshotRequestParameters,Elasticsearch.Net.DeleteSnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotDeleteRepository``1(System.String,System.Func{Elasticsearch.Net.DeleteRepositoryRequestParameters,Elasticsearch.Net.DeleteRepositoryRequestParameters})">
            <summary>Represents a DELETE on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotDeleteRepositoryAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteRepositoryRequestParameters,Elasticsearch.Net.DeleteRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotGet``1(System.String,System.String,System.Func{Elasticsearch.Net.GetSnapshotRequestParameters,Elasticsearch.Net.GetSnapshotRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetSnapshotRequestParameters,Elasticsearch.Net.GetSnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotGetRepository``1(System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters})">
            <summary>Represents a GET on /_snapshot
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotGetRepositoryAsync``1(System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotGetRepository``1(System.String,System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotGetRepositoryAsync``1(System.String,System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotRestore``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RestoreRequestParameters,Elasticsearch.Net.RestoreRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}/_restore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">Details of what to restore</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotRestoreAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RestoreRequestParameters,Elasticsearch.Net.RestoreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}/_restore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">Details of what to restore</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotStatus``1(System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters})">
            <summary>Represents a GET on /_snapshot/_status
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotStatusAsync``1(System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/_status
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotStatus``1(System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}/_status
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotStatusAsync``1(System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}/_status
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotStatus``1(System.String,System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}/_status
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotStatusAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}/_status
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotVerifyRepository``1(System.String,System.Func{Elasticsearch.Net.VerifyRepositoryRequestParameters,Elasticsearch.Net.VerifyRepositoryRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}/_verify
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SnapshotVerifyRepositoryAsync``1(System.String,System.Func{Elasticsearch.Net.VerifyRepositoryRequestParameters,Elasticsearch.Net.VerifyRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}/_verify
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SuggestGet``1(System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a GET on /_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SuggestGetAsync``1(System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SuggestGet``1(System.String,System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a GET on /{index}/_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SuggestGetAsync``1(System.String,System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Suggest``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a POST on /_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SuggestAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Suggest``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a POST on /{index}/_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.SuggestAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksCancel``1(System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters})">
            <summary>Represents a POST on /_tasks/_cancel
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksCancelAsync``1(System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_tasks/_cancel
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksCancel``1(System.String,System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters})">
            <summary>Represents a POST on /_tasks/{task_id}/_cancel
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Cancel the task with specified task id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksCancelAsync``1(System.String,System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_tasks/{task_id}/_cancel
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Cancel the task with specified task id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksGet``1(System.String,System.Func{Elasticsearch.Net.GetTaskRequestParameters,Elasticsearch.Net.GetTaskRequestParameters})">
            <summary>Represents a GET on /_tasks/{task_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Return the task with specified id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksGetAsync``1(System.String,System.Func{Elasticsearch.Net.GetTaskRequestParameters,Elasticsearch.Net.GetTaskRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_tasks/{task_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Return the task with specified id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksList``1(System.Func{Elasticsearch.Net.ListTasksRequestParameters,Elasticsearch.Net.ListTasksRequestParameters})">
            <summary>Represents a GET on /_tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TasksListAsync``1(System.Func{Elasticsearch.Net.ListTasksRequestParameters,Elasticsearch.Net.ListTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TermvectorsGet``1(System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TermvectorsGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TermvectorsGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TermvectorsGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Termvectors``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TermvectorsAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Termvectors``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.TermvectorsAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.Update``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateRequestParameters,Elasticsearch.Net.UpdateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_update
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.UpdateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateRequestParameters,Elasticsearch.Net.UpdateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_update
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.UpdateByQuery``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/_update_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.UpdateByQueryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_update_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.UpdateByQuery``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_update_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.UpdateByQueryAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_update_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExploreGet``1(System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a GET on /{index}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExploreGetAsync``1(System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExploreGet``1(System.String,System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExploreGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExplore``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a POST on /{index}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExploreAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExplore``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackGraphExploreAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackInfo``1(System.Func{Elasticsearch.Net.XPackInfoRequestParameters,Elasticsearch.Net.XPackInfoRequestParameters})">
            <summary>Represents a GET on /_xpack
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackInfoAsync``1(System.Func{Elasticsearch.Net.XPackInfoRequestParameters,Elasticsearch.Net.XPackInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackUsage``1(System.Func{Elasticsearch.Net.XPackUsageRequestParameters,Elasticsearch.Net.XPackUsageRequestParameters})">
            <summary>Represents a GET on /_xpack/usage
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: Retrieve information about xpack features usage </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackUsageAsync``1(System.Func{Elasticsearch.Net.XPackUsageRequestParameters,Elasticsearch.Net.XPackUsageRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/usage
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: Retrieve information about xpack features usage </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackLicenseDelete``1(System.Func{Elasticsearch.Net.DeleteLicenseRequestParameters,Elasticsearch.Net.DeleteLicenseRequestParameters})">
            <summary>Represents a DELETE on /_xpack/license
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackLicenseDeleteAsync``1(System.Func{Elasticsearch.Net.DeleteLicenseRequestParameters,Elasticsearch.Net.DeleteLicenseRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/license
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackLicenseGet``1(System.Func{Elasticsearch.Net.GetLicenseRequestParameters,Elasticsearch.Net.GetLicenseRequestParameters})">
            <summary>Represents a GET on /_xpack/license
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackLicenseGetAsync``1(System.Func{Elasticsearch.Net.GetLicenseRequestParameters,Elasticsearch.Net.GetLicenseRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/license
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackLicensePost``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PostLicenseRequestParameters,Elasticsearch.Net.PostLicenseRequestParameters})">
            <summary>Represents a PUT on /_xpack/license
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="body">licenses to be installed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackLicensePostAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PostLicenseRequestParameters,Elasticsearch.Net.PostLicenseRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/license
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="body">licenses to be installed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityAuthenticate``1(System.Func{Elasticsearch.Net.AuthenticateRequestParameters,Elasticsearch.Net.AuthenticateRequestParameters})">
            <summary>Represents a GET on /_xpack/security/_authenticate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityAuthenticateAsync``1(System.Func{Elasticsearch.Net.AuthenticateRequestParameters,Elasticsearch.Net.AuthenticateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/_authenticate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePassword``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePasswordAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePassword``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePasswordAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePasswordPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePasswordPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePasswordPost``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityChangePasswordPostAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityClearCachedRealms``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRealmsRequestParameters,Elasticsearch.Net.ClearCachedRealmsRequestParameters})">
            <summary>Represents a POST on /_xpack/security/realm/{realms}/_clear_cache
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html </para>
            </summary>
            <param name="realms">Comma-separated list of realms to clear</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityClearCachedRealmsAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRealmsRequestParameters,Elasticsearch.Net.ClearCachedRealmsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/realm/{realms}/_clear_cache
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html </para>
            </summary>
            <param name="realms">Comma-separated list of realms to clear</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityClearCachedRoles``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRolesRequestParameters,Elasticsearch.Net.ClearCachedRolesRequestParameters})">
            <summary>Represents a POST on /_xpack/security/role/{name}/_clear_cache
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityClearCachedRolesAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRolesRequestParameters,Elasticsearch.Net.ClearCachedRolesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/role/{name}/_clear_cache
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDeleteRole``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleRequestParameters,Elasticsearch.Net.DeleteRoleRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDeleteRoleAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleRequestParameters,Elasticsearch.Net.DeleteRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDeleteRoleMapping``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleMappingRequestParameters,Elasticsearch.Net.DeleteRoleMappingRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDeleteRoleMappingAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleMappingRequestParameters,Elasticsearch.Net.DeleteRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDeleteUser``1(System.String,System.Func{Elasticsearch.Net.DeleteUserRequestParameters,Elasticsearch.Net.DeleteUserRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user </para>
            </summary>
            <param name="username">username</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDeleteUserAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteUserRequestParameters,Elasticsearch.Net.DeleteUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user </para>
            </summary>
            <param name="username">username</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDisableUser``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_disable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDisableUserAsync``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_disable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDisableUserPost``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}/_disable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityDisableUserPostAsync``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}/_disable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityEnableUser``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_enable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityEnableUserAsync``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_enable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityEnableUserPost``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}/_enable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityEnableUserPostAsync``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}/_enable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRole``1(System.String,System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRoleAsync``1(System.String,System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRole``1(System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRoleAsync``1(System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRoleMapping``1(System.String,System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="name">Role-Mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRoleMappingAsync``1(System.String,System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="name">Role-Mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRoleMapping``1(System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetRoleMappingAsync``1(System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetToken``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GetUserAccessTokenRequestParameters,Elasticsearch.Net.GetUserAccessTokenRequestParameters})">
            <summary>Represents a POST on /_xpack/security/oauth2/token
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token </para>
            </summary>
            <param name="body">The token request to get</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetTokenAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GetUserAccessTokenRequestParameters,Elasticsearch.Net.GetUserAccessTokenRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/oauth2/token
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token </para>
            </summary>
            <param name="body">The token request to get</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetUser``1(System.String,System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters})">
            <summary>Represents a GET on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="username">A comma-separated list of usernames</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetUserAsync``1(System.String,System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="username">A comma-separated list of usernames</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetUser``1(System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters})">
            <summary>Represents a GET on /_xpack/security/user
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityGetUserAsync``1(System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/user
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityInvalidateToken``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters,Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/oauth2/token
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token </para>
            </summary>
            <param name="body">The token to invalidate</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityInvalidateTokenAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters,Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/oauth2/token
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token </para>
            </summary>
            <param name="body">The token to invalidate</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRole``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRoleAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRolePost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters})">
            <summary>Represents a POST on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRolePostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRoleMapping``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRoleMappingAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRoleMappingPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters})">
            <summary>Represents a POST on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutRoleMappingPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutUser``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutUserAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutUserPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackSecurityPutUserPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatch``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatchAsync``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatch``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatchAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatchPost``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatchPostAsync``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatchPost``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherAckWatchPostAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherActivateWatch``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherActivateWatchAsync``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherActivateWatchPost``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherActivateWatchPostAsync``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherDeactivateWatch``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherDeactivateWatchAsync``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherDeactivateWatchPost``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherDeactivateWatchPostAsync``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherDeleteWatch``1(System.String,System.Func{Elasticsearch.Net.DeleteWatchRequestParameters,Elasticsearch.Net.DeleteWatchRequestParameters})">
            <summary>Represents a DELETE on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherDeleteWatchAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteWatchRequestParameters,Elasticsearch.Net.DeleteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatch``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatch``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatchAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatchPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatchPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatchPost``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherExecuteWatchPostAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherGetWatch``1(System.String,System.Func{Elasticsearch.Net.GetWatchRequestParameters,Elasticsearch.Net.GetWatchRequestParameters})">
            <summary>Represents a GET on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherGetWatchAsync``1(System.String,System.Func{Elasticsearch.Net.GetWatchRequestParameters,Elasticsearch.Net.GetWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherPutWatch``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherPutWatchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherPutWatchPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherPutWatchPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherRestart``1(System.Func{Elasticsearch.Net.RestartWatcherRequestParameters,Elasticsearch.Net.RestartWatcherRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/_restart
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherRestartAsync``1(System.Func{Elasticsearch.Net.RestartWatcherRequestParameters,Elasticsearch.Net.RestartWatcherRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/_restart
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStart``1(System.Func{Elasticsearch.Net.StartWatcherRequestParameters,Elasticsearch.Net.StartWatcherRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/_start
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStartAsync``1(System.Func{Elasticsearch.Net.StartWatcherRequestParameters,Elasticsearch.Net.StartWatcherRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/_start
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStats``1(System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters})">
            <summary>Represents a GET on /_xpack/watcher/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStatsAsync``1(System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/watcher/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStats``1(Elasticsearch.Net.WatcherStatsMetric,System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters})">
            <summary>Represents a GET on /_xpack/watcher/stats/{watcher_stats_metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="watcher_stats_metric">Controls what additional stat metrics should be include in the response</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStatsAsync``1(Elasticsearch.Net.WatcherStatsMetric,System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/watcher/stats/{watcher_stats_metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="watcher_stats_metric">Controls what additional stat metrics should be include in the response</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStop``1(System.Func{Elasticsearch.Net.StopWatcherRequestParameters,Elasticsearch.Net.StopWatcherRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/_stop
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticLowLevelClient.XpackWatcherStopAsync``1(System.Func{Elasticsearch.Net.StopWatcherRequestParameters,Elasticsearch.Net.StopWatcherRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/_stop
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="T:Elasticsearch.Net.IElasticLowLevelClient">
            <summary>
            Raw operations with elasticsearch
            <pre>
            This file is automatically generated from https://github.com/elastic/elasticsearch/tree/5.5/rest-api-spec
            </pre>
            <pre>
            Generated of commit 5.5
            </pre>
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DoRequest``1(Elasticsearch.Net.HttpMethod,System.String,Elasticsearch.Net.PostData{System.Object},Elasticsearch.Net.IRequestParameters)">
            <summary>
            Perform any request you want over the configured IConnection synchronously while taking advantage of the cluster failover.
            </summary>
            <typeparam name="T">The type representing the response JSON</typeparam>
            <param name="method">the HTTP Method to use</param>
            <param name="path">The path of the the url that you would like to hit</param>
            <param name="data">The body of the request, string and byte[] are posted as is other types will be serialized to JSON</param>
            <param name="requestParameters">Optionally configure request specific timeouts, headers</param>
            <returns>An ElasticsearchResponse of T where T represents the JSON response body</returns>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DoRequestAsync``1(Elasticsearch.Net.HttpMethod,System.String,System.Threading.CancellationToken,Elasticsearch.Net.PostData{System.Object},Elasticsearch.Net.IRequestParameters)">
            <summary>
            Perform any request you want over the configured IConnection asynchronously while taking advantage of the cluster failover.
            </summary>
            <typeparam name="T">The type representing the response JSON</typeparam>
            <param name="method">the HTTP Method to use</param>
            <param name="path">The path of the the url that you would like to hit</param>
            <param name="data">The body of the request, string and byte[] are posted as is other types will be serialized to JSON</param>
            <param name="requestParameters">Optionally configure request specific timeouts, headers</param>
            <returns>A task of ElasticsearchResponse of T where T represents the JSON response body</returns>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Bulk``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a POST on /_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Bulk``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a POST on /{index}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Bulk``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkPut``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a PUT on /_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkPutAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkPut``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a PUT on /{index}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkPutAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkPut``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/_bulk
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.BulkPutAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkRequestParameters,Elasticsearch.Net.BulkRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/_bulk
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-bulk.html </para>
            </summary>
            <param name="index">Default index for items which don&#39;t provide one</param>
            <param name="type">Default document type for items which don&#39;t provide one</param>
            <param name="body">The operation definition and data (action-data pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAliases``1(System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters})">
            <summary>Represents a GET on /_cat/aliases
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAliasesAsync``1(System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/aliases
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAliases``1(System.String,System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters})">
            <summary>Represents a GET on /_cat/aliases/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAliasesAsync``1(System.String,System.Func{Elasticsearch.Net.CatAliasesRequestParameters,Elasticsearch.Net.CatAliasesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/aliases/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-alias.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAllocation``1(System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters})">
            <summary>Represents a GET on /_cat/allocation
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAllocationAsync``1(System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/allocation
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAllocation``1(System.String,System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters})">
            <summary>Represents a GET on /_cat/allocation/{node_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatAllocationAsync``1(System.String,System.Func{Elasticsearch.Net.CatAllocationRequestParameters,Elasticsearch.Net.CatAllocationRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/allocation/{node_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-allocation.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatCount``1(System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters})">
            <summary>Represents a GET on /_cat/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatCountAsync``1(System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatCount``1(System.String,System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters})">
            <summary>Represents a GET on /_cat/count/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatCountAsync``1(System.String,System.Func{Elasticsearch.Net.CatCountRequestParameters,Elasticsearch.Net.CatCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/count/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-count.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatFielddata``1(System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters})">
            <summary>Represents a GET on /_cat/fielddata
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatFielddataAsync``1(System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/fielddata
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatFielddata``1(System.String,System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters})">
            <summary>Represents a GET on /_cat/fielddata/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields to return the fielddata size</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatFielddataAsync``1(System.String,System.Func{Elasticsearch.Net.CatFielddataRequestParameters,Elasticsearch.Net.CatFielddataRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/fielddata/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-fielddata.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields to return the fielddata size</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatHealth``1(System.Func{Elasticsearch.Net.CatHealthRequestParameters,Elasticsearch.Net.CatHealthRequestParameters})">
            <summary>Represents a GET on /_cat/health
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatHealthAsync``1(System.Func{Elasticsearch.Net.CatHealthRequestParameters,Elasticsearch.Net.CatHealthRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/health
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatHelp``1(System.Func{Elasticsearch.Net.CatHelpRequestParameters,Elasticsearch.Net.CatHelpRequestParameters})">
            <summary>Represents a GET on /_cat
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatHelpAsync``1(System.Func{Elasticsearch.Net.CatHelpRequestParameters,Elasticsearch.Net.CatHelpRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatIndices``1(System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters})">
            <summary>Represents a GET on /_cat/indices
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatIndicesAsync``1(System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/indices
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatIndices``1(System.String,System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters})">
            <summary>Represents a GET on /_cat/indices/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatIndicesAsync``1(System.String,System.Func{Elasticsearch.Net.CatIndicesRequestParameters,Elasticsearch.Net.CatIndicesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/indices/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-indices.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatMaster``1(System.Func{Elasticsearch.Net.CatMasterRequestParameters,Elasticsearch.Net.CatMasterRequestParameters})">
            <summary>Represents a GET on /_cat/master
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatMasterAsync``1(System.Func{Elasticsearch.Net.CatMasterRequestParameters,Elasticsearch.Net.CatMasterRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/master
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-master.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatNodeattrs``1(System.Func{Elasticsearch.Net.CatNodeAttributesRequestParameters,Elasticsearch.Net.CatNodeAttributesRequestParameters})">
            <summary>Represents a GET on /_cat/nodeattrs
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatNodeattrsAsync``1(System.Func{Elasticsearch.Net.CatNodeAttributesRequestParameters,Elasticsearch.Net.CatNodeAttributesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/nodeattrs
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodeattrs.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatNodes``1(System.Func{Elasticsearch.Net.CatNodesRequestParameters,Elasticsearch.Net.CatNodesRequestParameters})">
            <summary>Represents a GET on /_cat/nodes
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatNodesAsync``1(System.Func{Elasticsearch.Net.CatNodesRequestParameters,Elasticsearch.Net.CatNodesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/nodes
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-nodes.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatPendingTasks``1(System.Func{Elasticsearch.Net.CatPendingTasksRequestParameters,Elasticsearch.Net.CatPendingTasksRequestParameters})">
            <summary>Represents a GET on /_cat/pending_tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatPendingTasksAsync``1(System.Func{Elasticsearch.Net.CatPendingTasksRequestParameters,Elasticsearch.Net.CatPendingTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/pending_tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-pending-tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatPlugins``1(System.Func{Elasticsearch.Net.CatPluginsRequestParameters,Elasticsearch.Net.CatPluginsRequestParameters})">
            <summary>Represents a GET on /_cat/plugins
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatPluginsAsync``1(System.Func{Elasticsearch.Net.CatPluginsRequestParameters,Elasticsearch.Net.CatPluginsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/plugins
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-plugins.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatRecovery``1(System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters})">
            <summary>Represents a GET on /_cat/recovery
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatRecoveryAsync``1(System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/recovery
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatRecovery``1(System.String,System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters})">
            <summary>Represents a GET on /_cat/recovery/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatRecoveryAsync``1(System.String,System.Func{Elasticsearch.Net.CatRecoveryRequestParameters,Elasticsearch.Net.CatRecoveryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/recovery/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatRepositories``1(System.Func{Elasticsearch.Net.CatRepositoriesRequestParameters,Elasticsearch.Net.CatRepositoriesRequestParameters})">
            <summary>Represents a GET on /_cat/repositories
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatRepositoriesAsync``1(System.Func{Elasticsearch.Net.CatRepositoriesRequestParameters,Elasticsearch.Net.CatRepositoriesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/repositories
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-repositories.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSegments``1(System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters})">
            <summary>Represents a GET on /_cat/segments
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSegmentsAsync``1(System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/segments
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSegments``1(System.String,System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters})">
            <summary>Represents a GET on /_cat/segments/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSegmentsAsync``1(System.String,System.Func{Elasticsearch.Net.CatSegmentsRequestParameters,Elasticsearch.Net.CatSegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/segments/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatShards``1(System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters})">
            <summary>Represents a GET on /_cat/shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatShardsAsync``1(System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatShards``1(System.String,System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters})">
            <summary>Represents a GET on /_cat/shards/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatShardsAsync``1(System.String,System.Func{Elasticsearch.Net.CatShardsRequestParameters,Elasticsearch.Net.CatShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/shards/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to limit the returned information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSnapshots``1(System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters})">
            <summary>Represents a GET on /_cat/snapshots
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSnapshotsAsync``1(System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/snapshots
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSnapshots``1(System.String,System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters})">
            <summary>Represents a GET on /_cat/snapshots/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="repository">Name of repository from which to fetch the snapshot information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatSnapshotsAsync``1(System.String,System.Func{Elasticsearch.Net.CatSnapshotsRequestParameters,Elasticsearch.Net.CatSnapshotsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/snapshots/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-snapshots.html </para>
            </summary>
            <param name="repository">Name of repository from which to fetch the snapshot information</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatTasks``1(System.Func{Elasticsearch.Net.CatTasksRequestParameters,Elasticsearch.Net.CatTasksRequestParameters})">
            <summary>Represents a GET on /_cat/tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatTasksAsync``1(System.Func{Elasticsearch.Net.CatTasksRequestParameters,Elasticsearch.Net.CatTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatTemplates``1(System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters})">
            <summary>Represents a GET on /_cat/templates
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatTemplatesAsync``1(System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/templates
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatTemplates``1(System.String,System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters})">
            <summary>Represents a GET on /_cat/templates/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="name">A pattern that returned template names must match</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatTemplatesAsync``1(System.String,System.Func{Elasticsearch.Net.CatTemplatesRequestParameters,Elasticsearch.Net.CatTemplatesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/templates/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-templates.html </para>
            </summary>
            <param name="name">A pattern that returned template names must match</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatThreadPool``1(System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters})">
            <summary>Represents a GET on /_cat/thread_pool
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatThreadPoolAsync``1(System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/thread_pool
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatThreadPool``1(System.String,System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters})">
            <summary>Represents a GET on /_cat/thread_pool/{thread_pool_patterns}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="thread_pool_patterns">A comma-separated list of regular-expressions to filter the thread pools in the output</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CatThreadPoolAsync``1(System.String,System.Func{Elasticsearch.Net.CatThreadPoolRequestParameters,Elasticsearch.Net.CatThreadPoolRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cat/thread_pool/{thread_pool_patterns}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cat-thread-pool.html </para>
            </summary>
            <param name="thread_pool_patterns">A comma-separated list of regular-expressions to filter the thread pools in the output</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClearScroll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClearScrollRequestParameters,Elasticsearch.Net.ClearScrollRequestParameters})">
            <summary>Represents a DELETE on /_search/scroll
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">A comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClearScrollAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClearScrollRequestParameters,Elasticsearch.Net.ClearScrollRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_search/scroll
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">A comma-separated list of scroll IDs to clear if none was specified via the scroll_id parameter</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterAllocationExplainGet``1(System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters})">
            <summary>Represents a GET on /_cluster/allocation/explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterAllocationExplainGetAsync``1(System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/allocation/explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterAllocationExplain``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters})">
            <summary>Represents a POST on /_cluster/allocation/explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="body">The index, shard, and primary flag to explain. Empty means &#39;explain the first unassigned shard&#39;</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterAllocationExplainAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterAllocationExplainRequestParameters,Elasticsearch.Net.ClusterAllocationExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_cluster/allocation/explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-allocation-explain.html </para>
            </summary>
            <param name="body">The index, shard, and primary flag to explain. Empty means &#39;explain the first unassigned shard&#39;</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterGetSettings``1(System.Func{Elasticsearch.Net.ClusterGetSettingsRequestParameters,Elasticsearch.Net.ClusterGetSettingsRequestParameters})">
            <summary>Represents a GET on /_cluster/settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterGetSettingsAsync``1(System.Func{Elasticsearch.Net.ClusterGetSettingsRequestParameters,Elasticsearch.Net.ClusterGetSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterHealth``1(System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters})">
            <summary>Represents a GET on /_cluster/health
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterHealthAsync``1(System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/health
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterHealth``1(System.String,System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters})">
            <summary>Represents a GET on /_cluster/health/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterHealthAsync``1(System.String,System.Func{Elasticsearch.Net.ClusterHealthRequestParameters,Elasticsearch.Net.ClusterHealthRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/health/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-health.html </para>
            </summary>
            <param name="index">Limit the information returned to a specific index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterPendingTasks``1(System.Func{Elasticsearch.Net.ClusterPendingTasksRequestParameters,Elasticsearch.Net.ClusterPendingTasksRequestParameters})">
            <summary>Represents a GET on /_cluster/pending_tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterPendingTasksAsync``1(System.Func{Elasticsearch.Net.ClusterPendingTasksRequestParameters,Elasticsearch.Net.ClusterPendingTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/pending_tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-pending.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterPutSettings``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterPutSettingsRequestParameters,Elasticsearch.Net.ClusterPutSettingsRequestParameters})">
            <summary>Represents a PUT on /_cluster/settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterPutSettingsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterPutSettingsRequestParameters,Elasticsearch.Net.ClusterPutSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_cluster/settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-update-settings.html </para>
            </summary>
            <param name="body">The settings to be updated. Can be either `transient` or `persistent` (survives cluster restart).</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterReroute``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterRerouteRequestParameters,Elasticsearch.Net.ClusterRerouteRequestParameters})">
            <summary>Represents a POST on /_cluster/reroute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html </para>
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterRerouteAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ClusterRerouteRequestParameters,Elasticsearch.Net.ClusterRerouteRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_cluster/reroute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-reroute.html </para>
            </summary>
            <param name="body">The definition of `commands` to perform (`move`, `cancel`, `allocate`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterState``1(System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters})">
            <summary>Represents a GET on /_cluster/state
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStateAsync``1(System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/state
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterState``1(System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters})">
            <summary>Represents a GET on /_cluster/state/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStateAsync``1(System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/state/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterState``1(System.String,System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters})">
            <summary>Represents a GET on /_cluster/state/{metric}/{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStateAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.ClusterStateRequestParameters,Elasticsearch.Net.ClusterStateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/state/{metric}/{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-state.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStats``1(System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters})">
            <summary>Represents a GET on /_cluster/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStatsAsync``1(System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStats``1(System.String,System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters})">
            <summary>Represents a GET on /_cluster/stats/nodes/{node_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ClusterStatsAsync``1(System.String,System.Func{Elasticsearch.Net.ClusterStatsRequestParameters,Elasticsearch.Net.ClusterStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/stats/nodes/{node_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Count``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a POST on /_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Count``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a POST on /{index}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Count``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="body">A query to restrict the results specified with the Query DSL (optional)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountGet``1(System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a GET on /_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountGetAsync``1(System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountGet``1(System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a GET on /{index}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountGetAsync``1(System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountGet``1(System.String,System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.CountRequestParameters,Elasticsearch.Net.CountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-count.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to restrict the results</param>
            <param name="type">A comma-separated list of types to restrict the results</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolateGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolateGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolate``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CountPercolateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateCountRequestParameters,Elasticsearch.Net.PercolateCountRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate/count
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated.</param>
            <param name="type">The type of the document being count percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The count percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Create``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/{id}/_create
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CreateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/{id}/_create
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CreatePost``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_create
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.CreatePostAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRequestParameters,Elasticsearch.Net.CreateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_create
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Delete``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DeleteRequestParameters,Elasticsearch.Net.DeleteRequestParameters})">
            <summary>Represents a DELETE on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DeleteRequestParameters,Elasticsearch.Net.DeleteRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteByQuery``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/_delete_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteByQueryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_delete_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteByQuery``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_delete_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteByQueryAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.DeleteByQueryRequestParameters,Elasticsearch.Net.DeleteByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_delete_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-delete-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteScript``1(System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters})">
            <summary>Represents a DELETE on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteScriptAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteScript``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters})">
            <summary>Represents a DELETE on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteScriptAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteScriptRequestParameters,Elasticsearch.Net.DeleteScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteTemplate``1(System.String,System.Func{Elasticsearch.Net.DeleteSearchTemplateRequestParameters,Elasticsearch.Net.DeleteSearchTemplateRequestParameters})">
            <summary>Represents a DELETE on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.DeleteTemplateAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteSearchTemplateRequestParameters,Elasticsearch.Net.DeleteSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Exists``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DocumentExistsRequestParameters,Elasticsearch.Net.DocumentExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ExistsAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.DocumentExistsRequestParameters,Elasticsearch.Net.DocumentExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ExistsSource``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceExistsRequestParameters,Elasticsearch.Net.SourceExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/{type}/{id}/_source
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ExistsSourceAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceExistsRequestParameters,Elasticsearch.Net.SourceExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/{type}/{id}/_source
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ExplainGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ExplainGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Explain``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_explain
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="body">The query definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ExplainAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExplainRequestParameters,Elasticsearch.Net.ExplainRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_explain
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-explain.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">The document ID</param>
            <param name="body">The query definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCapsGet``1(System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a GET on /_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCapsGetAsync``1(System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCapsGet``1(System.String,System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a GET on /{index}/_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCapsGetAsync``1(System.String,System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCaps``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a POST on /_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCapsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCaps``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters})">
            <summary>Represents a POST on /{index}/_field_caps
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldCapsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldCapabilitiesRequestParameters,Elasticsearch.Net.FieldCapabilitiesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_field_caps
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/search-field-caps.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing an array of field names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStatsGet``1(System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a GET on /_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStatsGetAsync``1(System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStatsGet``1(System.String,System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a GET on /{index}/_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStatsGetAsync``1(System.String,System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStats``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a POST on /_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStatsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStats``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters})">
            <summary>Represents a POST on /{index}/_field_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.FieldStatsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.FieldStatsRequestParameters,Elasticsearch.Net.FieldStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_field_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-field-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Field json objects containing the name and optionally a range to filter out indices result, that have results outside the defined bounds</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Get``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetRequestParameters,Elasticsearch.Net.GetRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetRequestParameters,Elasticsearch.Net.GetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document (use `_all` to fetch the first document matching the ID across all types)</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetScript``1(System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters})">
            <summary>Represents a GET on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetScriptAsync``1(System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetScript``1(System.String,System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters})">
            <summary>Represents a GET on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetScriptAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetScriptRequestParameters,Elasticsearch.Net.GetScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetSource``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceRequestParameters,Elasticsearch.Net.SourceRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_source
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetSourceAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.SourceRequestParameters,Elasticsearch.Net.SourceRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_source
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document; use `_all` to fetch the first document matching the ID across all types</param>
            <param name="id">The document ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetTemplate``1(System.String,System.Func{Elasticsearch.Net.GetSearchTemplateRequestParameters,Elasticsearch.Net.GetSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.GetTemplateAsync``1(System.String,System.Func{Elasticsearch.Net.GetSearchTemplateRequestParameters,Elasticsearch.Net.GetSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Index``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a POST on /{index}/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndexAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Index``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndexAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndexPut``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndexPutAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndexPut``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndexPutAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.IndexRequestParameters,Elasticsearch.Net.IndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-index_.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeGetForAll``1(System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a GET on /_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeGetForAllAsync``1(System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeGet``1(System.String,System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a GET on /{index}/_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeGetAsync``1(System.String,System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a POST on /_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyze``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters})">
            <summary>Represents a POST on /{index}/_analyze
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesAnalyzeAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.AnalyzeRequestParameters,Elasticsearch.Net.AnalyzeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_analyze
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-analyze.html </para>
            </summary>
            <param name="index">The name of the index to scope the operation</param>
            <param name="body">The text on which the analysis should be performed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheForAll``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a POST on /_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheForAllAsync``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCache``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a POST on /{index}/_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheGetForAll``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a GET on /_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheGetForAllAsync``1(System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheGet``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters})">
            <summary>Represents a GET on /{index}/_cache/clear
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClearCacheGetAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCacheRequestParameters,Elasticsearch.Net.ClearCacheRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_cache/clear
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-clearcache.html </para>
            </summary>
            <param name="index">A comma-separated list of index name to limit the operation</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesClose``1(System.String,System.Func{Elasticsearch.Net.CloseIndexRequestParameters,Elasticsearch.Net.CloseIndexRequestParameters})">
            <summary>Represents a POST on /{index}/_close
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to close</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesCloseAsync``1(System.String,System.Func{Elasticsearch.Net.CloseIndexRequestParameters,Elasticsearch.Net.CloseIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_close
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to close</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesCreate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateIndexRequestParameters,Elasticsearch.Net.CreateIndexRequestParameters})">
            <summary>Represents a PUT on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesCreateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateIndexRequestParameters,Elasticsearch.Net.CreateIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-create-index.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">The configuration for the index (`settings` and `mappings`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesDelete``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexRequestParameters,Elasticsearch.Net.DeleteIndexRequestParameters})">
            <summary>Represents a DELETE on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesDeleteAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexRequestParameters,Elasticsearch.Net.DeleteIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-delete-index.html </para>
            </summary>
            <param name="index">A comma-separated list of indices to delete; use `_all` or `*` string to delete all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesDeleteAlias``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteAliasRequestParameters,Elasticsearch.Net.DeleteAliasRequestParameters})">
            <summary>Represents a DELETE on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
            <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesDeleteAliasAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteAliasRequestParameters,Elasticsearch.Net.DeleteAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names (supports wildcards); use `_all` for all indices</param>
            <param name="name">A comma-separated list of aliases to delete (supports wildcards); use `_all` to delete all aliases for the specified indices.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesDeleteTemplateForAll``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexTemplateRequestParameters,Elasticsearch.Net.DeleteIndexTemplateRequestParameters})">
            <summary>Represents a DELETE on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesDeleteTemplateForAllAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteIndexTemplateRequestParameters,Elasticsearch.Net.DeleteIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExists``1(System.String,System.Func{Elasticsearch.Net.IndexExistsRequestParameters,Elasticsearch.Net.IndexExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAsync``1(System.String,System.Func{Elasticsearch.Net.IndexExistsRequestParameters,Elasticsearch.Net.IndexExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAliasForAll``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters})">
            <summary>Represents a HEAD on /_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAliasForAllAsync``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAlias``1(System.String,System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAliasAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAlias``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/_alias
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsAliasAsync``1(System.String,System.Func{Elasticsearch.Net.AliasExistsRequestParameters,Elasticsearch.Net.AliasExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/_alias
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsTemplateForAll``1(System.String,System.Func{Elasticsearch.Net.IndexTemplateExistsRequestParameters,Elasticsearch.Net.IndexTemplateExistsRequestParameters})">
            <summary>Represents a HEAD on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsTemplateForAllAsync``1(System.String,System.Func{Elasticsearch.Net.IndexTemplateExistsRequestParameters,Elasticsearch.Net.IndexTemplateExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsType``1(System.String,System.String,System.Func{Elasticsearch.Net.TypeExistsRequestParameters,Elasticsearch.Net.TypeExistsRequestParameters})">
            <summary>Represents a HEAD on /{index}/_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesExistsTypeAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.TypeExistsRequestParameters,Elasticsearch.Net.TypeExistsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /{index}/_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-types-exists.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use `_all` to check the types across all indices</param>
            <param name="type">A comma-separated list of document types to check</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushForAll``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a POST on /_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushForAllAsync``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlush``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a POST on /{index}/_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushAsync``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushGetForAll``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a GET on /_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushGetForAllAsync``1(System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushGet``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters})">
            <summary>Represents a GET on /{index}/_flush
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushGetAsync``1(System.String,System.Func{Elasticsearch.Net.FlushRequestParameters,Elasticsearch.Net.FlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_flush
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedForAll``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a POST on /_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedForAllAsync``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSynced``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a POST on /{index}/_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedAsync``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedGetForAll``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a GET on /_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedGetForAllAsync``1(System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedGet``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters})">
            <summary>Represents a GET on /{index}/_flush/synced
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesFlushSyncedGetAsync``1(System.String,System.Func{Elasticsearch.Net.SyncedFlushRequestParameters,Elasticsearch.Net.SyncedFlushRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_flush/synced
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-synced-flush.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All for all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesForcemergeForAll``1(System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters})">
            <summary>Represents a POST on /_forcemerge
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesForcemergeForAllAsync``1(System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_forcemerge
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesForcemerge``1(System.String,System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters})">
            <summary>Represents a POST on /{index}/_forcemerge
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesForcemergeAsync``1(System.String,System.Func{Elasticsearch.Net.ForceMergeRequestParameters,Elasticsearch.Net.ForceMergeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_forcemerge
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-forcemerge.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGet``1(System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters})">
            <summary>Represents a GET on /{index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGet``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters})">
            <summary>Represents a GET on /{index}/{feature}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="feature">A comma-separated list of features</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexRequestParameters,Elasticsearch.Net.GetIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{feature}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-index.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="feature">A comma-separated list of features</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAliasForAll``1(System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /_alias
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAliasForAllAsync``1(System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_alias
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAliasForAll``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAliasForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAlias``1(System.String,System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAliasAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="name">A comma-separated list of alias names to return</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAlias``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters})">
            <summary>Represents a GET on /{index}/_alias
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetAliasAsync``1(System.String,System.Func{Elasticsearch.Net.GetAliasRequestParameters,Elasticsearch.Net.GetAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_alias
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to filter aliases</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMappingForAll``1(System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /_mapping/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMappingForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMapping``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMappingAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMappingForAll``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /_mapping/{type}/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMappingForAllAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping/{type}/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMapping``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping/{type}/field/{fields}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetFieldMappingAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.GetFieldMappingRequestParameters,Elasticsearch.Net.GetFieldMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping/{type}/field/{fields}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-field-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="fields">A comma-separated list of fields</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMappingForAll``1(System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMappingForAllAsync``1(System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMapping``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMappingAsync``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMappingForAll``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMappingForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMapping``1(System.String,System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters})">
            <summary>Represents a GET on /{index}/_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetMappingAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetMappingRequestParameters,Elasticsearch.Net.GetMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names</param>
            <param name="type">A comma-separated list of document types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettingsForAll``1(System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettingsForAllAsync``1(System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettings``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /{index}/_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettingsAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettings``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /{index}/_settings/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettingsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_settings/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettingsForAll``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters})">
            <summary>Represents a GET on /_settings/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetSettingsForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexSettingsRequestParameters,Elasticsearch.Net.GetIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_settings/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-get-settings.html </para>
            </summary>
            <param name="name">The name of the settings that should be included</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetTemplateForAll``1(System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters})">
            <summary>Represents a GET on /_template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetTemplateForAllAsync``1(System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetTemplateForAll``1(System.String,System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters})">
            <summary>Represents a GET on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetTemplateForAllAsync``1(System.String,System.Func{Elasticsearch.Net.GetIndexTemplateRequestParameters,Elasticsearch.Net.GetIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The comma separated names of the index templates</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetUpgradeForAll``1(System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters})">
            <summary>Represents a GET on /_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetUpgradeForAllAsync``1(System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetUpgrade``1(System.String,System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters})">
            <summary>Represents a GET on /{index}/_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesGetUpgradeAsync``1(System.String,System.Func{Elasticsearch.Net.UpgradeStatusRequestParameters,Elasticsearch.Net.UpgradeStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesOpen``1(System.String,System.Func{Elasticsearch.Net.OpenIndexRequestParameters,Elasticsearch.Net.OpenIndexRequestParameters})">
            <summary>Represents a POST on /{index}/_open
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to open</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesOpenAsync``1(System.String,System.Func{Elasticsearch.Net.OpenIndexRequestParameters,Elasticsearch.Net.OpenIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_open
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-open-close.html </para>
            </summary>
            <param name="index">A comma separated list of indices to open</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutAlias``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters})">
            <summary>Represents a PUT on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutAliasAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutAliasPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters})">
            <summary>Represents a POST on /{index}/_alias/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutAliasPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutAliasRequestParameters,Elasticsearch.Net.PutAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_alias/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the alias should point to (supports wildcards); use `_all` to perform the operation on all indices.</param>
            <param name="name">The name of the alias to be created or updated</param>
            <param name="body">The settings for the alias, such as `routing` or `filter`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMapping``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a PUT on /{index}/{type}/_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/{type}/_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a PUT on /_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="index">A comma-separated list of index names the mapping should be added to (supports wildcards); use `_all` or omit to add the mapping on all indices.</param>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingPostForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters})">
            <summary>Represents a POST on /_mapping/{type}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutMappingPostForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutMappingRequestParameters,Elasticsearch.Net.PutMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mapping/{type}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-put-mapping.html </para>
            </summary>
            <param name="type">The name of the document type</param>
            <param name="body">The mapping definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutSettingsForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters})">
            <summary>Represents a PUT on /_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutSettingsForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutSettings``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters})">
            <summary>Represents a PUT on /{index}/_settings
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutSettingsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateIndexSettingsRequestParameters,Elasticsearch.Net.UpdateIndexSettingsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_settings
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-update-settings.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The index settings to be updated</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutTemplateForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters})">
            <summary>Represents a PUT on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutTemplateForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutTemplatePostForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters})">
            <summary>Represents a POST on /_template/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesPutTemplatePostForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutIndexTemplateRequestParameters,Elasticsearch.Net.PutIndexTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_template/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-templates.html </para>
            </summary>
            <param name="name">The name of the template</param>
            <param name="body">The template definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRecoveryForAll``1(System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters})">
            <summary>Represents a GET on /_recovery
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRecoveryForAllAsync``1(System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_recovery
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRecovery``1(System.String,System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters})">
            <summary>Represents a GET on /{index}/_recovery
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRecoveryAsync``1(System.String,System.Func{Elasticsearch.Net.RecoveryStatusRequestParameters,Elasticsearch.Net.RecoveryStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_recovery
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-recovery.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshForAll``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a POST on /_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshForAllAsync``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefresh``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a POST on /{index}/_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshAsync``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshGetForAll``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a GET on /_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshGetForAllAsync``1(System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshGet``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters})">
            <summary>Represents a GET on /{index}/_refresh
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRefreshGetAsync``1(System.String,System.Func{Elasticsearch.Net.RefreshRequestParameters,Elasticsearch.Net.RefreshRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_refresh
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-refresh.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRolloverForAll``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters})">
            <summary>Represents a POST on /{alias}/_rollover
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRolloverForAllAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{alias}/_rollover
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRolloverForAll``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters})">
            <summary>Represents a POST on /{alias}/_rollover/{new_index}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="new_index">The name of the rollover index</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesRolloverForAllAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RolloverIndexRequestParameters,Elasticsearch.Net.RolloverIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{alias}/_rollover/{new_index}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-rollover-index.html </para>
            </summary>
            <param name="alias">The name of the alias to rollover</param>
            <param name="new_index">The name of the rollover index</param>
            <param name="body">The conditions that needs to be met for executing rollover</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesSegmentsForAll``1(System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters})">
            <summary>Represents a GET on /_segments
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesSegmentsForAllAsync``1(System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_segments
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesSegments``1(System.String,System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters})">
            <summary>Represents a GET on /{index}/_segments
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesSegmentsAsync``1(System.String,System.Func{Elasticsearch.Net.SegmentsRequestParameters,Elasticsearch.Net.SegmentsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_segments
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-segments.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShardStoresForAll``1(System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters})">
            <summary>Represents a GET on /_shard_stores
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShardStoresForAllAsync``1(System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_shard_stores
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShardStores``1(System.String,System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters})">
            <summary>Represents a GET on /{index}/_shard_stores
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShardStoresAsync``1(System.String,System.Func{Elasticsearch.Net.IndicesShardStoresRequestParameters,Elasticsearch.Net.IndicesShardStoresRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_shard_stores
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shards-stores.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShrink``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters})">
            <summary>Represents a PUT on /{index}/_shrink/{target}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShrinkAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /{index}/_shrink/{target}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShrinkPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters})">
            <summary>Represents a POST on /{index}/_shrink/{target}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesShrinkPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ShrinkIndexRequestParameters,Elasticsearch.Net.ShrinkIndexRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_shrink/{target}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-shrink-index.html </para>
            </summary>
            <param name="index">The name of the source index to shrink</param>
            <param name="target">The name of the target index to shrink into</param>
            <param name="body">The configuration for the target index (`settings` and `aliases`)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStatsForAll``1(System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStatsForAllAsync``1(System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStatsForAll``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /_stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStatsForAllAsync``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStats``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /{index}/_stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStatsAsync``1(System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStats``1(System.String,System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters})">
            <summary>Represents a GET on /{index}/_stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesStatsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.IndicesStatsRequestParameters,Elasticsearch.Net.IndicesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-stats.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="metric">Limit the information returned the specific metrics.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesUpdateAliasesForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkAliasRequestParameters,Elasticsearch.Net.BulkAliasRequestParameters})">
            <summary>Represents a POST on /_aliases
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="body">The definition of `actions` to perform</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesUpdateAliasesForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.BulkAliasRequestParameters,Elasticsearch.Net.BulkAliasRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_aliases
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-aliases.html </para>
            </summary>
            <param name="body">The definition of `actions` to perform</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesUpgradeForAll``1(System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters})">
            <summary>Represents a POST on /_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesUpgradeForAllAsync``1(System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesUpgrade``1(System.String,System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters})">
            <summary>Represents a POST on /{index}/_upgrade
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesUpgradeAsync``1(System.String,System.Func{Elasticsearch.Net.UpgradeRequestParameters,Elasticsearch.Net.UpgradeRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_upgrade
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/indices-upgrade.html </para>
            </summary>
            <param name="index">A comma-separated list of index names; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryGetForAll``1(System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a GET on /_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryGetForAllAsync``1(System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryGet``1(System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a GET on /{index}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryGetAsync``1(System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryGet``1(System.String,System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryForAll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a POST on /_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryForAllAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQuery``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a POST on /{index}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQuery``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_validate/query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IndicesValidateQueryAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ValidateQueryRequestParameters,Elasticsearch.Net.ValidateQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_validate/query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-validate.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to restrict the operation; leave empty to perform the operation on all types</param>
            <param name="body">The query definition specified with the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Info``1(System.Func{Elasticsearch.Net.RootNodeInfoRequestParameters,Elasticsearch.Net.RootNodeInfoRequestParameters})">
            <summary>Represents a GET on /
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.InfoAsync``1(System.Func{Elasticsearch.Net.RootNodeInfoRequestParameters,Elasticsearch.Net.RootNodeInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestDeletePipeline``1(System.String,System.Func{Elasticsearch.Net.DeletePipelineRequestParameters,Elasticsearch.Net.DeletePipelineRequestParameters})">
            <summary>Represents a DELETE on /_ingest/pipeline/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestDeletePipelineAsync``1(System.String,System.Func{Elasticsearch.Net.DeletePipelineRequestParameters,Elasticsearch.Net.DeletePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_ingest/pipeline/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestGetPipeline``1(System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestGetPipelineAsync``1(System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestGetPipeline``1(System.String,System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Comma separated list of pipeline ids. Wildcards supported</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestGetPipelineAsync``1(System.String,System.Func{Elasticsearch.Net.GetPipelineRequestParameters,Elasticsearch.Net.GetPipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Comma separated list of pipeline ids. Wildcards supported</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestPutPipeline``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutPipelineRequestParameters,Elasticsearch.Net.PutPipelineRequestParameters})">
            <summary>Represents a PUT on /_ingest/pipeline/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The ingest definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestPutPipelineAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutPipelineRequestParameters,Elasticsearch.Net.PutPipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_ingest/pipeline/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The ingest definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulateGet``1(System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulateGetAsync``1(System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulateGet``1(System.String,System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a GET on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulateGetAsync``1(System.String,System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a POST on /_ingest/pipeline/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_ingest/pipeline/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters})">
            <summary>Represents a POST on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.IngestSimulateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SimulatePipelineRequestParameters,Elasticsearch.Net.SimulatePipelineRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_ingest/pipeline/{id}/_simulate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/plugins/5.x/ingest.html </para>
            </summary>
            <param name="id">Pipeline ID</param>
            <param name="body">The simulate definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetGet``1(System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a GET on /_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetGetAsync``1(System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetGet``1(System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a GET on /{index}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mget``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a POST on /_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mget``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a POST on /{index}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mget``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mget
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MgetAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiGetRequestParameters,Elasticsearch.Net.MultiGetRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mget
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-get.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="body">Document identifiers; can be either `docs` (containing full document information) or `ids` (when index and type is provided in the URL.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateGet``1(System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a GET on /_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateGetAsync``1(System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateGet``1(System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a GET on /{index}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mpercolate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a POST on /_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mpercolate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a POST on /{index}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mpercolate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mpercolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MpercolateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiPercolateRequestParameters,Elasticsearch.Net.MultiPercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mpercolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being count percolated to use as default</param>
            <param name="type">The type of the document being percolated to use as default.</param>
            <param name="body">The percolate request definitions (header &amp; body pair), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchGet``1(System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a GET on /_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchGetAsync``1(System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchGet``1(System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a GET on /{index}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Msearch``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a POST on /_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Msearch``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a POST on /{index}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Msearch``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_msearch
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchRequestParameters,Elasticsearch.Net.MultiSearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_msearch
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-multi-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateGet``1(System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateGetAsync``1(System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateGet``1(System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_msearch/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MsearchTemplateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiSearchTemplateRequestParameters,Elasticsearch.Net.MultiSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_msearch/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to use as default</param>
            <param name="type">A comma-separated list of document types to use as default</param>
            <param name="body">The request definitions (metadata-search request definition pairs), separated by newlines</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsGet``1(System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a GET on /_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsGetAsync``1(System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsGet``1(System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsGetAsync``1(System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsGet``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mtermvectors``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a POST on /_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mtermvectors``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Mtermvectors``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_mtermvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.MtermvectorsAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.MultiTermVectorsRequestParameters,Elasticsearch.Net.MultiTermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_mtermvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-multi-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define ids, documents, parameters or a list of parameters per document here. You must at least provide a list of document ids. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesHotThreadsForAll``1(System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters})">
            <summary>Represents a GET on /_cluster/nodes/hotthreads
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesHotThreadsForAllAsync``1(System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/nodes/hotthreads
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesHotThreads``1(System.String,System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters})">
            <summary>Represents a GET on /_cluster/nodes/{node_id}/hotthreads
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesHotThreadsAsync``1(System.String,System.Func{Elasticsearch.Net.NodesHotThreadsRequestParameters,Elasticsearch.Net.NodesHotThreadsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_cluster/nodes/{node_id}/hotthreads
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-hot-threads.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfoForAll``1(System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfoForAllAsync``1(System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfo``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfoAsync``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfoForAll``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfoForAllAsync``1(System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfo``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesInfoAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesInfoRequestParameters,Elasticsearch.Net.NodesInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-info.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">A comma-separated list of metrics you wish returned. Leave empty to return all.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsForAll``1(System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsForAllAsync``1(System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStats``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsAsync``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsForAll``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsForAllAsync``1(System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStats``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsForAll``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/stats/{metric}/{index_metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsForAllAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/stats/{metric}/{index_metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStats``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters})">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}/{index_metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.NodesStatsAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.NodesStatsRequestParameters,Elasticsearch.Net.NodesStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_nodes/{node_id}/stats/{metric}/{index_metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/cluster-nodes-stats.html </para>
            </summary>
            <param name="node_id">A comma-separated list of node IDs or names to limit the returned information; use `_local` to return information from the node you&#39;re connecting to, leave empty to get information from all nodes</param>
            <param name="metric">Limit the information returned to the specified metrics</param>
            <param name="index_metric">Limit the information returned for `indices` metric to the specific index metrics. Isn&#39;t used if `indices` (or `all`) metric isn&#39;t specified.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PercolateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PercolateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PercolateGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PercolateGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Percolate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PercolateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Percolate``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PercolateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PercolateRequestParameters,Elasticsearch.Net.PercolateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_percolate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-percolate.html </para>
            </summary>
            <param name="index">The index of the document being percolated.</param>
            <param name="type">The type of the document being percolated.</param>
            <param name="id">Substitute the document in the request body with a document that is known by the specified id. On top of the id, the index and type parameter will be used to retrieve the document from within the cluster.</param>
            <param name="body">The percolator request definition using the percolate DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Ping``1(System.Func{Elasticsearch.Net.PingRequestParameters,Elasticsearch.Net.PingRequestParameters})">
            <summary>Represents a HEAD on /
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PingAsync``1(System.Func{Elasticsearch.Net.PingRequestParameters,Elasticsearch.Net.PingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a HEAD on /
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/ </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScript``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a PUT on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScriptAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScript``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a PUT on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScriptAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScriptPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a POST on /_scripts/{lang}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScriptPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_scripts/{lang}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScriptPost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters})">
            <summary>Represents a POST on /_scripts/{lang}/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutScriptPostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutScriptRequestParameters,Elasticsearch.Net.PutScriptRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_scripts/{lang}/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-scripting.html </para>
            </summary>
            <param name="lang">Script language</param>
            <param name="id">Script ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters})">
            <summary>Represents a PUT on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutTemplatePost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_search/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.PutTemplatePostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutSearchTemplateRequestParameters,Elasticsearch.Net.PutSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">Template ID</param>
            <param name="body">The document</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Reindex``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ReindexOnServerRequestParameters,Elasticsearch.Net.ReindexOnServerRequestParameters})">
            <summary>Represents a POST on /_reindex
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL and the prototype for the index request.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ReindexAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ReindexOnServerRequestParameters,Elasticsearch.Net.ReindexOnServerRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_reindex
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL and the prototype for the index request.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ReindexRethrottle``1(System.String,System.Func{Elasticsearch.Net.ReindexRethrottleRequestParameters,Elasticsearch.Net.ReindexRethrottleRequestParameters})">
            <summary>Represents a POST on /_reindex/{task_id}/_rethrottle
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="task_id">The task id to rethrottle</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ReindexRethrottleAsync``1(System.String,System.Func{Elasticsearch.Net.ReindexRethrottleRequestParameters,Elasticsearch.Net.ReindexRethrottleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_reindex/{task_id}/_rethrottle
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html </para>
            </summary>
            <param name="task_id">The task id to rethrottle</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RemoteInfo``1(System.Func{Elasticsearch.Net.RemoteInfoRequestParameters,Elasticsearch.Net.RemoteInfoRequestParameters})">
            <summary>Represents a GET on /_remote/info
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RemoteInfoAsync``1(System.Func{Elasticsearch.Net.RemoteInfoRequestParameters,Elasticsearch.Net.RemoteInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_remote/info
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/5.5/cluster-remote-info.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplateGet``1(System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_render/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplateGetAsync``1(System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_render/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplateGet``1(System.String,System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a GET on /_render/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplateGetAsync``1(System.String,System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_render/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_render/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_render/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters})">
            <summary>Represents a POST on /_render/template/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.RenderSearchTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RenderSearchTemplateRequestParameters,Elasticsearch.Net.RenderSearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_render/template/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elasticsearch.org/guide/en/elasticsearch/reference/5.x/search-template.html </para>
            </summary>
            <param name="id">The id of the stored search template</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ScrollGet``1(System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters})">
            <summary>Represents a GET on /_search/scroll
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ScrollGetAsync``1(System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search/scroll
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Scroll``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters})">
            <summary>Represents a POST on /_search/scroll
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.ScrollAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ScrollRequestParameters,Elasticsearch.Net.ScrollRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search/scroll
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-request-scroll.html </para>
            </summary>
            <param name="body">The scroll ID if not passed by URL or query parameter.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchGet``1(System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a GET on /_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchGetAsync``1(System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchGet``1(System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a GET on /{index}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchGetAsync``1(System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchGet``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Search``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a POST on /_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Search``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a POST on /{index}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Search``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_search
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchRequestParameters,Elasticsearch.Net.SearchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_search
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-search.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsGet``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a GET on /_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsGetAsync``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsGet``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a GET on /{index}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsGetAsync``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsGet``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShards``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a POST on /_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsAsync``1(System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShards``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a POST on /{index}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsAsync``1(System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShards``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_search_shards
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchShardsAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchShardsRequestParameters,Elasticsearch.Net.SearchShardsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_search_shards
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-shards.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateGet``1(System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a GET on /_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateGetAsync``1(System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateGet``1(System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateGetAsync``1(System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateGet``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplate``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a POST on /_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplate``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_search/template
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SearchTemplateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SearchTemplateRequestParameters,Elasticsearch.Net.SearchTemplateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_search/template
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/search-template.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition template and its params</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreate``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters})">
            <summary>Represents a PUT on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreateAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreatePost``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreatePostAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SnapshotRequestParameters,Elasticsearch.Net.SnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">The snapshot definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreateRepository``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters})">
            <summary>Represents a PUT on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreateRepositoryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreateRepositoryPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotCreateRepositoryPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.CreateRepositoryRequestParameters,Elasticsearch.Net.CreateRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="body">The repository definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotDelete``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteSnapshotRequestParameters,Elasticsearch.Net.DeleteSnapshotRequestParameters})">
            <summary>Represents a DELETE on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotDeleteAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.DeleteSnapshotRequestParameters,Elasticsearch.Net.DeleteSnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotDeleteRepository``1(System.String,System.Func{Elasticsearch.Net.DeleteRepositoryRequestParameters,Elasticsearch.Net.DeleteRepositoryRequestParameters})">
            <summary>Represents a DELETE on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotDeleteRepositoryAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteRepositoryRequestParameters,Elasticsearch.Net.DeleteRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotGet``1(System.String,System.String,System.Func{Elasticsearch.Net.GetSnapshotRequestParameters,Elasticsearch.Net.GetSnapshotRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GetSnapshotRequestParameters,Elasticsearch.Net.GetSnapshotRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotGetRepository``1(System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters})">
            <summary>Represents a GET on /_snapshot
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotGetRepositoryAsync``1(System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotGetRepository``1(System.String,System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotGetRepositoryAsync``1(System.String,System.Func{Elasticsearch.Net.GetRepositoryRequestParameters,Elasticsearch.Net.GetRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A comma-separated list of repository names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotRestore``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RestoreRequestParameters,Elasticsearch.Net.RestoreRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}/_restore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">Details of what to restore</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotRestoreAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.RestoreRequestParameters,Elasticsearch.Net.RestoreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}/{snapshot}/_restore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A snapshot name</param>
            <param name="body">Details of what to restore</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotStatus``1(System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters})">
            <summary>Represents a GET on /_snapshot/_status
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotStatusAsync``1(System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/_status
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotStatus``1(System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}/_status
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotStatusAsync``1(System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}/_status
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotStatus``1(System.String,System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters})">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}/_status
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotStatusAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.SnapshotStatusRequestParameters,Elasticsearch.Net.SnapshotStatusRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_snapshot/{repository}/{snapshot}/_status
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="snapshot">A comma-separated list of snapshot names</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotVerifyRepository``1(System.String,System.Func{Elasticsearch.Net.VerifyRepositoryRequestParameters,Elasticsearch.Net.VerifyRepositoryRequestParameters})">
            <summary>Represents a POST on /_snapshot/{repository}/_verify
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SnapshotVerifyRepositoryAsync``1(System.String,System.Func{Elasticsearch.Net.VerifyRepositoryRequestParameters,Elasticsearch.Net.VerifyRepositoryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_snapshot/{repository}/_verify
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/modules-snapshots.html </para>
            </summary>
            <param name="repository">A repository name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SuggestGet``1(System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a GET on /_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SuggestGetAsync``1(System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SuggestGet``1(System.String,System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a GET on /{index}/_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SuggestGetAsync``1(System.String,System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Suggest``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a POST on /_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SuggestAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Suggest``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters})">
            <summary>Represents a POST on /{index}/_suggest
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.SuggestAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.SuggestRequestParameters,Elasticsearch.Net.SuggestRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_suggest
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/search-suggesters.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to restrict the operation; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The request definition</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksCancel``1(System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters})">
            <summary>Represents a POST on /_tasks/_cancel
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksCancelAsync``1(System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_tasks/_cancel
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksCancel``1(System.String,System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters})">
            <summary>Represents a POST on /_tasks/{task_id}/_cancel
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Cancel the task with specified task id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksCancelAsync``1(System.String,System.Func{Elasticsearch.Net.CancelTasksRequestParameters,Elasticsearch.Net.CancelTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_tasks/{task_id}/_cancel
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Cancel the task with specified task id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksGet``1(System.String,System.Func{Elasticsearch.Net.GetTaskRequestParameters,Elasticsearch.Net.GetTaskRequestParameters})">
            <summary>Represents a GET on /_tasks/{task_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Return the task with specified id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksGetAsync``1(System.String,System.Func{Elasticsearch.Net.GetTaskRequestParameters,Elasticsearch.Net.GetTaskRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_tasks/{task_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="task_id">Return the task with specified id (node_id:task_number)</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksList``1(System.Func{Elasticsearch.Net.ListTasksRequestParameters,Elasticsearch.Net.ListTasksRequestParameters})">
            <summary>Represents a GET on /_tasks
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TasksListAsync``1(System.Func{Elasticsearch.Net.ListTasksRequestParameters,Elasticsearch.Net.ListTasksRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_tasks
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/tasks.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TermvectorsGet``1(System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TermvectorsGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TermvectorsGet``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TermvectorsGetAsync``1(System.String,System.String,System.String,System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Termvectors``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TermvectorsAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Termvectors``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.TermvectorsAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.TermVectorsRequestParameters,Elasticsearch.Net.TermVectorsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_termvectors
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-termvectors.html </para>
            </summary>
            <param name="index">The index in which the document resides.</param>
            <param name="type">The type of the document.</param>
            <param name="id">The id of the document, when not specified a doc param should be supplied.</param>
            <param name="body">Define parameters and or supply a document to get termvectors for. See documentation.</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.Update``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateRequestParameters,Elasticsearch.Net.UpdateRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/{id}/_update
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.UpdateAsync``1(System.String,System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateRequestParameters,Elasticsearch.Net.UpdateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/{id}/_update
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update.html </para>
            </summary>
            <param name="index">The name of the index</param>
            <param name="type">The type of the document</param>
            <param name="id">Document ID</param>
            <param name="body">The request definition using either `script` or partial `doc`</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.UpdateByQuery``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/_update_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.UpdateByQueryAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_update_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.UpdateByQuery``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_update_by_query
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.UpdateByQueryAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.UpdateByQueryRequestParameters,Elasticsearch.Net.UpdateByQueryRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_update_by_query
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-update-by-query.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">The search definition using the Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExploreGet``1(System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a GET on /{index}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExploreGetAsync``1(System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExploreGet``1(System.String,System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a GET on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExploreGetAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExplore``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a POST on /{index}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExploreAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExplore``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters})">
            <summary>Represents a POST on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackGraphExploreAsync``1(System.String,System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GraphExploreRequestParameters,Elasticsearch.Net.GraphExploreRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /{index}/{type}/_xpack/_graph/_explore
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/graph/current/explore.html </para>
            </summary>
            <param name="index">A comma-separated list of index names to search; use the special string `_all` or Indices.All to perform the operation on all indices</param>
            <param name="type">A comma-separated list of document types to search; leave empty to perform the operation on all types</param>
            <param name="body">Graph Query DSL</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackInfo``1(System.Func{Elasticsearch.Net.XPackInfoRequestParameters,Elasticsearch.Net.XPackInfoRequestParameters})">
            <summary>Represents a GET on /_xpack
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackInfoAsync``1(System.Func{Elasticsearch.Net.XPackInfoRequestParameters,Elasticsearch.Net.XPackInfoRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/info-api.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackUsage``1(System.Func{Elasticsearch.Net.XPackUsageRequestParameters,Elasticsearch.Net.XPackUsageRequestParameters})">
            <summary>Represents a GET on /_xpack/usage
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: Retrieve information about xpack features usage </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackUsageAsync``1(System.Func{Elasticsearch.Net.XPackUsageRequestParameters,Elasticsearch.Net.XPackUsageRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/usage
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: Retrieve information about xpack features usage </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackLicenseDelete``1(System.Func{Elasticsearch.Net.DeleteLicenseRequestParameters,Elasticsearch.Net.DeleteLicenseRequestParameters})">
            <summary>Represents a DELETE on /_xpack/license
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackLicenseDeleteAsync``1(System.Func{Elasticsearch.Net.DeleteLicenseRequestParameters,Elasticsearch.Net.DeleteLicenseRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/license
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackLicenseGet``1(System.Func{Elasticsearch.Net.GetLicenseRequestParameters,Elasticsearch.Net.GetLicenseRequestParameters})">
            <summary>Represents a GET on /_xpack/license
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackLicenseGetAsync``1(System.Func{Elasticsearch.Net.GetLicenseRequestParameters,Elasticsearch.Net.GetLicenseRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/license
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackLicensePost``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PostLicenseRequestParameters,Elasticsearch.Net.PostLicenseRequestParameters})">
            <summary>Represents a PUT on /_xpack/license
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="body">licenses to be installed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackLicensePostAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PostLicenseRequestParameters,Elasticsearch.Net.PostLicenseRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/license
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/shield/current/license-management.html </para>
            </summary>
            <param name="body">licenses to be installed</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityAuthenticate``1(System.Func{Elasticsearch.Net.AuthenticateRequestParameters,Elasticsearch.Net.AuthenticateRequestParameters})">
            <summary>Represents a GET on /_xpack/security/_authenticate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityAuthenticateAsync``1(System.Func{Elasticsearch.Net.AuthenticateRequestParameters,Elasticsearch.Net.AuthenticateRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/_authenticate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-authenticate.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePassword``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePasswordAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePassword``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePasswordAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePasswordPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePasswordPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="username">The username of the user to change the password for</param>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePasswordPost``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/_password
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityChangePasswordPostAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ChangePasswordRequestParameters,Elasticsearch.Net.ChangePasswordRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/_password
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-change-password.html </para>
            </summary>
            <param name="body">the new password for the user</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityClearCachedRealms``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRealmsRequestParameters,Elasticsearch.Net.ClearCachedRealmsRequestParameters})">
            <summary>Represents a POST on /_xpack/security/realm/{realms}/_clear_cache
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html </para>
            </summary>
            <param name="realms">Comma-separated list of realms to clear</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityClearCachedRealmsAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRealmsRequestParameters,Elasticsearch.Net.ClearCachedRealmsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/realm/{realms}/_clear_cache
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/current/security-api-clear-cache.html </para>
            </summary>
            <param name="realms">Comma-separated list of realms to clear</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityClearCachedRoles``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRolesRequestParameters,Elasticsearch.Net.ClearCachedRolesRequestParameters})">
            <summary>Represents a POST on /_xpack/security/role/{name}/_clear_cache
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityClearCachedRolesAsync``1(System.String,System.Func{Elasticsearch.Net.ClearCachedRolesRequestParameters,Elasticsearch.Net.ClearCachedRolesRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/role/{name}/_clear_cache
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-clear-role-cache </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDeleteRole``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleRequestParameters,Elasticsearch.Net.DeleteRoleRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDeleteRoleAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleRequestParameters,Elasticsearch.Net.DeleteRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-delete-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDeleteRoleMapping``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleMappingRequestParameters,Elasticsearch.Net.DeleteRoleMappingRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDeleteRoleMappingAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteRoleMappingRequestParameters,Elasticsearch.Net.DeleteRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-delete-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDeleteUser``1(System.String,System.Func{Elasticsearch.Net.DeleteUserRequestParameters,Elasticsearch.Net.DeleteUserRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user </para>
            </summary>
            <param name="username">username</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDeleteUserAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteUserRequestParameters,Elasticsearch.Net.DeleteUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-delete-user </para>
            </summary>
            <param name="username">username</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDisableUser``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_disable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDisableUserAsync``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_disable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDisableUserPost``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}/_disable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityDisableUserPostAsync``1(System.String,System.Func{Elasticsearch.Net.DisableUserRequestParameters,Elasticsearch.Net.DisableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}/_disable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-disable-user.html </para>
            </summary>
            <param name="username">The username of the user to disable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityEnableUser``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_enable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityEnableUserAsync``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}/_enable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityEnableUserPost``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}/_enable
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityEnableUserPostAsync``1(System.String,System.Func{Elasticsearch.Net.EnableUserRequestParameters,Elasticsearch.Net.EnableUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}/_enable
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-enable-user.html </para>
            </summary>
            <param name="username">The username of the user to enable</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRole``1(System.String,System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRoleAsync``1(System.String,System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRole``1(System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRoleAsync``1(System.Func{Elasticsearch.Net.GetRoleRequestParameters,Elasticsearch.Net.GetRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-get-role </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRoleMapping``1(System.String,System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="name">Role-Mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRoleMappingAsync``1(System.String,System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="name">Role-Mapping name</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRoleMapping``1(System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters})">
            <summary>Represents a GET on /_xpack/security/role_mapping
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetRoleMappingAsync``1(System.Func{Elasticsearch.Net.GetRoleMappingRequestParameters,Elasticsearch.Net.GetRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/role_mapping
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-get-role-mapping </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetToken``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GetUserAccessTokenRequestParameters,Elasticsearch.Net.GetUserAccessTokenRequestParameters})">
            <summary>Represents a POST on /_xpack/security/oauth2/token
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token </para>
            </summary>
            <param name="body">The token request to get</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetTokenAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.GetUserAccessTokenRequestParameters,Elasticsearch.Net.GetUserAccessTokenRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/oauth2/token
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-get-token </para>
            </summary>
            <param name="body">The token request to get</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetUser``1(System.String,System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters})">
            <summary>Represents a GET on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="username">A comma-separated list of usernames</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetUserAsync``1(System.String,System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="username">A comma-separated list of usernames</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetUser``1(System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters})">
            <summary>Represents a GET on /_xpack/security/user
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityGetUserAsync``1(System.Func{Elasticsearch.Net.GetUserRequestParameters,Elasticsearch.Net.GetUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/security/user
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-get-user </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityInvalidateToken``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters,Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters})">
            <summary>Represents a DELETE on /_xpack/security/oauth2/token
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token </para>
            </summary>
            <param name="body">The token to invalidate</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityInvalidateTokenAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters,Elasticsearch.Net.InvalidateUserAccessTokenRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/security/oauth2/token
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-tokens.html#security-api-invalidate-token </para>
            </summary>
            <param name="body">The token to invalidate</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRole``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRoleAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRolePost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters})">
            <summary>Represents a POST on /_xpack/security/role/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRolePostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleRequestParameters,Elasticsearch.Net.PutRoleRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/role/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-roles.html#security-api-put-role </para>
            </summary>
            <param name="name">Role name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRoleMapping``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRoleMappingAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRoleMappingPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters})">
            <summary>Represents a POST on /_xpack/security/role_mapping/{name}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutRoleMappingPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutRoleMappingRequestParameters,Elasticsearch.Net.PutRoleMappingRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/role_mapping/{name}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-role-mapping.html#security-api-put-role-mapping </para>
            </summary>
            <param name="name">Role-mapping name</param>
            <param name="body">The role to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutUser``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters})">
            <summary>Represents a PUT on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutUserAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutUserPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters})">
            <summary>Represents a POST on /_xpack/security/user/{username}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackSecurityPutUserPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutUserRequestParameters,Elasticsearch.Net.PutUserRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/security/user/{username}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/x-pack/master/security-api-users.html#security-api-put-user </para>
            </summary>
            <param name="username">The username of the User</param>
            <param name="body">The user to add</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatch``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatchAsync``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatch``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatchAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatchPost``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatchPostAsync``1(System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatchPost``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherAckWatchPostAsync``1(System.String,System.String,System.Func{Elasticsearch.Net.AcknowledgeWatchRequestParameters,Elasticsearch.Net.AcknowledgeWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_ack/{action_id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-ack-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="action_id">A comma-separated list of the action ids to be acked</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherActivateWatch``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherActivateWatchAsync``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherActivateWatchPost``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherActivateWatchPostAsync``1(System.String,System.Func{Elasticsearch.Net.ActivateWatchRequestParameters,Elasticsearch.Net.ActivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_activate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-activate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherDeactivateWatch``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherDeactivateWatchAsync``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherDeactivateWatchPost``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherDeactivateWatchPostAsync``1(System.String,System.Func{Elasticsearch.Net.DeactivateWatchRequestParameters,Elasticsearch.Net.DeactivateWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{watch_id}/_deactivate
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: https://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-deactivate-watch.html </para>
            </summary>
            <param name="watch_id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherDeleteWatch``1(System.String,System.Func{Elasticsearch.Net.DeleteWatchRequestParameters,Elasticsearch.Net.DeleteWatchRequestParameters})">
            <summary>Represents a DELETE on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherDeleteWatchAsync``1(System.String,System.Func{Elasticsearch.Net.DeleteWatchRequestParameters,Elasticsearch.Net.DeleteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a DELETE on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-delete-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatch``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatch``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatchAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatchPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatchPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatchPost``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/_execute
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherExecuteWatchPostAsync``1(Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.ExecuteWatchRequestParameters,Elasticsearch.Net.ExecuteWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/_execute
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-execute-watch.html </para>
            </summary>
            <param name="body">Execution control</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherGetWatch``1(System.String,System.Func{Elasticsearch.Net.GetWatchRequestParameters,Elasticsearch.Net.GetWatchRequestParameters})">
            <summary>Represents a GET on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherGetWatchAsync``1(System.String,System.Func{Elasticsearch.Net.GetWatchRequestParameters,Elasticsearch.Net.GetWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-get-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherPutWatch``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters})">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherPutWatchAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a PUT on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherPutWatchPost``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherPutWatchPostAsync``1(System.String,Elasticsearch.Net.PostData{System.Object},System.Func{Elasticsearch.Net.PutWatchRequestParameters,Elasticsearch.Net.PutWatchRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/watch/{id}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-put-watch.html </para>
            </summary>
            <param name="id">Watch ID</param>
            <param name="body">The watch</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherRestart``1(System.Func{Elasticsearch.Net.RestartWatcherRequestParameters,Elasticsearch.Net.RestartWatcherRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/_restart
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherRestartAsync``1(System.Func{Elasticsearch.Net.RestartWatcherRequestParameters,Elasticsearch.Net.RestartWatcherRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/_restart
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-restart.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStart``1(System.Func{Elasticsearch.Net.StartWatcherRequestParameters,Elasticsearch.Net.StartWatcherRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/_start
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStartAsync``1(System.Func{Elasticsearch.Net.StartWatcherRequestParameters,Elasticsearch.Net.StartWatcherRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/_start
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-start.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStats``1(System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters})">
            <summary>Represents a GET on /_xpack/watcher/stats
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStatsAsync``1(System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/watcher/stats
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStats``1(Elasticsearch.Net.WatcherStatsMetric,System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters})">
            <summary>Represents a GET on /_xpack/watcher/stats/{watcher_stats_metric}
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="watcher_stats_metric">Controls what additional stat metrics should be include in the response</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStatsAsync``1(Elasticsearch.Net.WatcherStatsMetric,System.Func{Elasticsearch.Net.WatcherStatsRequestParameters,Elasticsearch.Net.WatcherStatsRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a GET on /_xpack/watcher/stats/{watcher_stats_metric}
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stats.html </para>
            </summary>
            <param name="watcher_stats_metric">Controls what additional stat metrics should be include in the response</param>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStop``1(System.Func{Elasticsearch.Net.StopWatcherRequestParameters,Elasticsearch.Net.StopWatcherRequestParameters})">
            <summary>Represents a POST on /_xpack/watcher/_stop
            <para></para>Returns: ElasticsearchResponse&lt;T&gt; where the behavior depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="M:Elasticsearch.Net.IElasticLowLevelClient.XpackWatcherStopAsync``1(System.Func{Elasticsearch.Net.StopWatcherRequestParameters,Elasticsearch.Net.StopWatcherRequestParameters},System.Threading.CancellationToken)">
            <summary>Represents a POST on /_xpack/watcher/_stop
            <para></para>Returns: A task of ElasticsearchResponse&lt;T&gt; where the behaviour depends on the type of T:
            <para> - T, an object you own that the elasticsearch response will be deserialized to </para>
            <para> - byte[], no deserialization, but the response stream will be closed </para>
            <para> - Stream, no deserialization, response stream is your responsibility </para>
            <para> - VoidResponse, no deserialization, response stream never read and closed </para>
            <para> - DynamicDictionary, a dynamic aware dictionary that can be safely traversed to any depth </para>
            <para>See also: http://www.elastic.co/guide/en/elasticsearch/reference/current/watcher-api-stop.html </para>
            </summary>
            <param name="requestParameters">A func that allows you to describe the querystring parameters &amp; request specific connection settings.</param>
        </member>
        <member name="T:Elasticsearch.Net.DynamicResponse">
            <summary>
            A dictionary that supports dynamic access.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.DynamicResponse.Empty">
            <summary>
            Returns an empty dynamic dictionary.
            </summary>
            <value>A <see cref="T:Elasticsearch.Net.DynamicResponse"/> instance.</value>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Create(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Creates a dynamic dictionary from an <see cref="T:System.Collections.Generic.IDictionary`2"/> instance.
            </summary>
            <param name="values">An <see cref="T:System.Collections.Generic.IDictionary`2"/> instance, that the dynamic dictionary should be created from.</param>
            <returns>An <see cref="T:Elasticsearch.Net.DynamicResponse"/> instance.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param><param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, the <paramref name="value"/> is "Test".</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <returns>true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a run-time exception is thrown.)</returns>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param><param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result"/>.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains dynamic member names.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.GetEnumerator">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerable`1"/> that contains dynamic member names.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>A <see cref="T:System.Collections.IEnumerator"/> that contains dynamic member names.</returns>
        </member>
        <member name="P:Elasticsearch.Net.DynamicResponse.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:Elasticsearch.Net.ElasticsearchDynamicValue"/> with the specified name.
            </summary>
            <value>A <see cref="T:Elasticsearch.Net.ElasticsearchDynamicValue"/> instance containing a value.</value>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Equals(Elasticsearch.Net.DynamicResponse)">
            <summary>
            Indicates whether the current <see cref="T:Elasticsearch.Net.DynamicResponse"/> is equal to another object of the same type.
            </summary>
            <returns><see langword="true"/> if the current instance is equal to the <paramref name="other"/> parameter; otherwise, <see langword="false"/>.</returns>
            <param name="other">An <see cref="T:Elasticsearch.Net.DynamicResponse"/> instance to compare with this instance.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns><see langword="true"/> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <see langword="false"/>.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String,System#Object}}#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.GetHashCode">
            <summary>
            Returns a hash code for this <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <returns> A hash code for this <see cref="T:Elasticsearch.Net.DynamicResponse"/>, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Add(System.String,System.Object)">
            <summary>
            Adds an element with the provided key and value to the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <param name="key">The object to use as the key of the element to add.</param>
            <param name="value">The object to use as the value of the element to add.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds an item to the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.ContainsKey(System.String)">
            <summary>
            Determines whether the <see cref="T:Elasticsearch.Net.DynamicResponse"/> contains an element with the specified key.
            </summary>
            <returns><see langword="true" /> if the <see cref="T:Elasticsearch.Net.DynamicResponse"/> contains an element with the key; otherwise, <see langword="false" />.
            </returns>
            <param name="key">The key to locate in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</param>
        </member>
        <member name="P:Elasticsearch.Net.DynamicResponse.Keys">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the keys of the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.TryGetValue(System.String,System.Object@)">
            <summary>
            Gets the value associated with the specified key.
            </summary>
            <returns><see langword="true" /> if the <see cref="T:Elasticsearch.Net.DynamicResponse"/> contains an element with the specified key; otherwise, <see langword="false" />.</returns>
            <param name="key">The key whose value to get.</param>
            <param name="value">When this method returns, the value associated with the specified key, if the key is found; otherwise, the default value for the type of the <paramref name="value"/> parameter. This parameter is passed uninitialized.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Clear">
            <summary>
            Removes all items from the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.DynamicResponse.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <returns>The number of elements contained in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether the <see cref="T:Elasticsearch.Net.DynamicResponse"/> contains a specific value.
            </summary>
            <returns><see langword="true" /> if <paramref name="item"/> is found in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>; otherwise, <see langword="false" />.
            </returns>
            <param name="item">The object to locate in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Elasticsearch.Net.DynamicResponse"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the <see cref="T:Elasticsearch.Net.DynamicResponse"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="P:Elasticsearch.Net.DynamicResponse.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:Elasticsearch.Net.DynamicResponse"/> is read-only.
            </summary>
            <returns>Always returns <see langword="false" />.</returns>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Remove(System.String)">
            <summary>
            Removes the element with the specified key from the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <returns><see langword="true" /> if the element is successfully removed; otherwise, <see langword="false" />.</returns>
            <param name="key">The key of the element to remove.</param>
        </member>
        <member name="M:Elasticsearch.Net.DynamicResponse.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <returns><see langword="true" /> if <paramref name="item"/> was successfully removed from the <see cref="T:Elasticsearch.Net.DynamicResponse"/>; otherwise, <see langword="false" />.</returns>
            <param name="item">The object to remove from the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</param>
        </member>
        <member name="P:Elasticsearch.Net.DynamicResponse.Values">
            <summary>
            Gets an <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.ICollection`1"/> containing the values in the <see cref="T:Elasticsearch.Net.DynamicResponse"/>.</returns>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:Elasticsearch.Net.ElasticsearchDynamicValue"/> class.
            </summary>
            <param name="value">The value to store in the instance</param>
        </member>
        <member name="P:Elasticsearch.Net.ElasticsearchDynamicValue.HasValue">
            <summary>
            Gets a value indicating whether this instance has value.
            </summary>
            <value><c>true</c> if this instance has value; otherwise, <c>false</c>.</value>
            <remarks><see langword="null"/> is considered as not being a value.</remarks>
        </member>
        <member name="P:Elasticsearch.Net.ElasticsearchDynamicValue.Value">
            <summary>
            Gets the inner value
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.Default``1(``0)">
            <summary>
            Returns a default value if Value is null
            </summary>
            <typeparam name="T">When no default value is supplied, required to supply the default type</typeparam>
            <param name="defaultValue">Optional parameter for default value, if not given it returns default of type T</param>
            <returns>If value is not null, value is returned, else default value is returned</returns>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.TryParse``1(``0)">
            <summary>
            Attempts to convert the value to type of T, failing to do so will return the defaultValue. 
            </summary>
            <typeparam name="T">When no default value is supplied, required to supply the default type</typeparam>
            <param name="defaultValue">Optional parameter for default value, if not given it returns default of type T</param>
            <returns>If value is not null, value is returned, else default value is returned</returns>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.Equals(Elasticsearch.Net.ElasticsearchDynamicValue)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <returns><c>true</c> if the current object is equal to the <paramref name="compareValue"/> parameter; otherwise, <c>false</c>.
            </returns>
            <param name="compareValue">An <see cref="T:Elasticsearch.Net.ElasticsearchDynamicValue"/> to compare with this instance.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <returns><c>true</c> if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:Elasticsearch.Net.ElasticsearchDynamicValue"/>; otherwise, <c>false</c>.</returns>
            <param name="compareValue">The <see cref="T:System.Object"/> to compare with the current <see cref="T:Elasticsearch.Net.ElasticsearchDynamicValue"/>.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.TryBinaryOperation(System.Dynamic.BinaryOperationBinder,System.Object,System.Object@)">
            <summary>
            Provides implementation for binary operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as addition and multiplication.
            </summary>
            <returns><c>true</c> if the operation is successful; otherwise, <c>false</c>. If this method returns <c>false</c>, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
            <param name="binder">Provides information about the binary operation. The binder.Operation property returns an <see cref="T:System.Linq.Expressions.ExpressionType"/> object. For example, for the sum = first + second statement, where first and second are derived from the DynamicObject class, binder.Operation returns ExpressionType.Add.</param><param name="arg">The right operand for the binary operation. For example, for the sum = first + second statement, where first and second are derived from the DynamicObject class, <paramref name="arg"/> is equal to second.</param><param name="result">The result of the binary operation.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>
            Provides implementation for type conversion operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that convert an object from one type to another.
            </summary>
            <returns><c>true</c> if the operation is successful; otherwise, <c>false</c>. If this method returns <c>false</c>, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)</returns>
            <param name="binder">Provides information about the conversion operation. The binder.Type property provides the type to which the object must be converted. For example, for the statement (String)sampleObject in C# (CType(sampleObject, Type) in Visual Basic), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Type returns the <see cref="T:System.String"/> type. The binder.Explicit property provides information about the kind of conversion that occurs. It returns true for explicit conversion and false for implicit conversion.</param><param name="result">The result of the type conversion operation.</param>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.GetTypeCode">
            <summary>
            Returns the <see cref="T:System.TypeCode"/> for this instance.
            </summary>
            <returns>
            The enumerated constant that is the <see cref="T:System.TypeCode"/> of the class or value type that implements this interface.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToBoolean(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent Boolean value using the specified culture-specific formatting information.
            </summary>
            <returns>
            A Boolean value equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToChar(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent Unicode character using the specified culture-specific formatting information.
            </summary>
            <returns>
            A Unicode character equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToSByte(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 8-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 8-bit signed integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToByte(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 8-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 8-bit unsigned integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToInt16(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 16-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 16-bit signed integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToUInt16(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 16-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 16-bit unsigned integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToInt32(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 32-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 32-bit signed integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToUInt32(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 32-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 32-bit unsigned integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToInt64(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 64-bit signed integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 64-bit signed integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToUInt64(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent 64-bit unsigned integer using the specified culture-specific formatting information.
            </summary>
            <returns>
            An 64-bit unsigned integer equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToSingle(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent single-precision floating-point number using the specified culture-specific formatting information.
            </summary>
            <returns>
            A single-precision floating-point number equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToDouble(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent double-precision floating-point number using the specified culture-specific formatting information.
            </summary>
            <returns>
            A double-precision floating-point number equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToDecimal(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.Decimal"/> number using the specified culture-specific formatting information.
            </summary>
            <returns>
            A <see cref="T:System.Decimal"/> number equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToDateTime(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.DateTime"/> using the specified culture-specific formatting information.
            </summary>
            <returns>
            A <see cref="T:System.DateTime"/> instance equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToString(System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an equivalent <see cref="T:System.String"/> using the specified culture-specific formatting information.
            </summary>
            <returns>
            A <see cref="T:System.String"/> instance equivalent to the value of this instance.
            </returns>
            <param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:Elasticsearch.Net.ElasticsearchDynamicValue.ToType(System.Type,System.IFormatProvider)">
            <summary>
            Converts the value of this instance to an <see cref="T:System.Object"/> of the specified <see cref="T:System.Type"/> that has an equivalent value, using the specified culture-specific formatting information.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> instance of type <paramref name="conversionType"/> whose value is equivalent to the value of this instance.
            </returns>
            <param name="conversionType">The <see cref="T:System.Type"/> to which the value of this instance is converted. </param><param name="provider">An <see cref="T:System.IFormatProvider"/> interface implementation that supplies culture-specific formatting information. </param><filterpriority>2</filterpriority>
        </member>
        <member name="P:Elasticsearch.Net.ElasticsearchResponse`1.RequestBodyInBytes">
            <summary>The raw byte request message body, only set when DisableDirectStreaming() is set on Connection configuration</summary>
        </member>
        <member name="P:Elasticsearch.Net.ElasticsearchResponse`1.ResponseBodyInBytes">
            <summary>The raw byte response message body, only set when DisableDirectStreaming() is set on Connection configuration</summary>
        </member>
        <member name="P:Elasticsearch.Net.ElasticsearchResponse`1.SuccessOrKnownError">
            <summary>
            The response is successful or has a response code between 400-599, the call should not be retried.
            Only on 502,503 and 504 will this return false;
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.Success">
            <summary>
            The response status code is in the 200 range or is in the allowed list of status codes set on the request.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.OriginalException">
            <summary>
            If <see cref="P:Elasticsearch.Net.IApiCallDetails.Success"/> is <c>false</c>, this will hold the original exception.
            This will be the orginating CLR exception in most cases.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.ServerError">
            <summary>
            The error returned by Elasticsearch
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.HttpMethod">
            <summary>
            The HTTP method used by the request
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.Uri">
            <summary>
            The url as requested
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.HttpStatusCode">
            <summary>
            The HTTP status code as returned by Elasticsearch
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.ResponseBodyInBytes">
            <summary>
            The response body bytes.
            <para>NOTE: Only set when disable direct streaming is set for the request</para> 
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.RequestBodyInBytes">
            <summary>
            The request body bytes.
            <para>NOTE: Only set when disable direct streaming is set for the request</para> 
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.AuditTrail">
            <summary>
            An audit trail of requests made to nodes within the cluster
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.DebugInformation">
            <summary>
            A lazy human readable string representation of what happened during this request for both successful and 
            failed requests.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IApiCallDetails.DeprecationWarnings">
             <summary>
            A collection of deprecation warnings returned from Elasticsearch.
            <para>Used to signal that the request uses an API feature that is marked as deprecated</para>
             </summary>
        </member>
        <member name="T:Elasticsearch.Net.IBodyWithApiCallDetails">
            <summary>
            Implementing this interface on your response objects will cause the low level client to
            automatically set <see cref="T:Elasticsearch.Net.IApiCallDetails"/> diagnostic information on the object.
            </summary>
        </member>
        <member name="P:Elasticsearch.Net.IBodyWithApiCallDetails.ApiCall">
            <summary>
            Sets and returns the <see cref="T:Elasticsearch.Net.IApiCallDetails"/> diagnostic information
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ServerError.TryCreate(System.IO.Stream,Elasticsearch.Net.ServerError@)">
            <summary>
            Creating the server error might fail in cases where a proxy returns an http response which is not json at all
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.ServerError.TryCreateAsync(System.IO.Stream,System.Threading.CancellationToken)">
            <summary>
            Creating the server error might fail in cases where a proxy returns an http response which is not json at all
            </summary>
        </member>
        <member name="T:Elasticsearch.Net.JsonArray">
            <summary>
            Represents the json array.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.JsonArray.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Elasticsearch.Net.JsonArray"/> class.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.JsonArray.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Elasticsearch.Net.JsonArray"/> class.
            </summary>
            <param name="capacity">The capacity of the json array.</param>
        </member>
        <member name="M:Elasticsearch.Net.JsonArray.ToString">
            <summary>
            The json representation of the array.
            </summary>
            <returns>The json representation of the array.</returns>
        </member>
        <member name="T:Elasticsearch.Net.JsonObject">
            <summary>
            Represents the json object.
            </summary>
        </member>
        <member name="F:Elasticsearch.Net.JsonObject._members">
            <summary>
            The internal member dictionary.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:Elasticsearch.Net.JsonObject"/>.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.#ctor(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Elasticsearch.Net.JsonObject"/>.
            </summary>
            <param name="comparer">The <see cref="T:System.Collections.Generic.IEqualityComparer`1"/> implementation to use when comparing keys, or null to use the default <see cref="T:System.Collections.Generic.EqualityComparer`1"/> for the type of the key.</param>
        </member>
        <member name="P:Elasticsearch.Net.JsonObject.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:System.Object"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.Add(System.String,System.Object)">
            <summary>
            Adds the specified key.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.ContainsKey(System.String)">
            <summary>
            Determines whether the specified key contains key.
            </summary>
            <param name="key">The key.</param>
            <returns>
                <c>true</c> if the specified key contains key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="P:Elasticsearch.Net.JsonObject.Keys">
            <summary>
            Gets the keys.
            </summary>
            <value>The keys.</value>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.Remove(System.String)">
            <summary>
            Removes the specified key.
            </summary>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TryGetValue(System.String,System.Object@)">
            <summary>
            Tries the get value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="P:Elasticsearch.Net.JsonObject.Values">
            <summary>
            Gets the values.
            </summary>
            <value>The values.</value>
        </member>
        <member name="P:Elasticsearch.Net.JsonObject.Item(System.String)">
            <summary>
            Gets or sets the <see cref="T:System.Object"/> with the specified key.
            </summary>
            <value></value>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Adds the specified item.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.Clear">
            <summary>
            Clears this instance.
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Determines whether [contains] [the specified item].
            </summary>
            <param name="item">The item.</param>
            <returns>
            	<c>true</c> if [contains] [the specified item]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="P:Elasticsearch.Net.JsonObject.Count">
            <summary>
            Gets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:Elasticsearch.Net.JsonObject.IsReadOnly">
            <summary>
            Gets a value indicating whether this instance is read only.
            </summary>
            <value>
            	<c>true</c> if this instance is read only; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})">
            <summary>
            Removes the specified item.
            </summary>
            <param name="item">The item.</param>
            <returns></returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.GetEnumerator">
            <summary>
            Gets the enumerator.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.ToString">
            <summary>
            Returns a json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
            <returns>
            A json <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TryConvert(System.Dynamic.ConvertBinder,System.Object@)">
            <summary>
            Provides implementation for type conversion operations. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that convert an object from one type to another.
            </summary>
            <param name="binder">Provides information about the conversion operation. The binder.Type property provides the type to which the object must be converted. For example, for the statement (String)sampleObject in C# (CType(sampleObject, Type) in Visual Basic), where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Type returns the <see cref="T:System.String"/> type. The binder.Explicit property provides information about the kind of conversion that occurs. It returns true for explicit conversion and false for implicit conversion.</param>
            <param name="result">The result of the type conversion operation.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TryDeleteMember(System.Dynamic.DeleteMemberBinder)">
            <summary>
            Provides the implementation for operations that delete an object member. This method is not intended for use in C# or Visual Basic.
            </summary>
            <param name="binder">Provides information about the deletion.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TryGetIndex(System.Dynamic.GetIndexBinder,System.Object[],System.Object@)">
            <summary>
            Provides the implementation for operations that get a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for indexing operations.
            </summary>
            <param name="binder">Provides information about the operation.</param>
            <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] operation in C# (sampleObject(3) in Visual Basic), where sampleObject is derived from the DynamicObject class, <paramref name="indexes"/> is equal to 3.</param>
            <param name="result">The result of the index operation.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            Provides the implementation for operations that get member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as getting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member on which the dynamic operation is performed. For example, for the Console.WriteLine(sampleObject.SampleProperty) statement, where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="result">The result of the get operation. For example, if the method is called for a property, you can assign the property value to <paramref name="result"/>.</param>
            <returns>
            Alwasy returns true.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TrySetIndex(System.Dynamic.SetIndexBinder,System.Object[],System.Object)">
            <summary>
            Provides the implementation for operations that set a value by index. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations that access objects by a specified index.
            </summary>
            <param name="binder">Provides information about the operation.</param>
            <param name="indexes">The indexes that are used in the operation. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, <paramref name="indexes"/> is equal to 3.</param>
            <param name="value">The value to set to the object that has the specified index. For example, for the sampleObject[3] = 10 operation in C# (sampleObject(3) = 10 in Visual Basic), where sampleObject is derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, <paramref name="value"/> is equal to 10.</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            Provides the implementation for operations that set member values. Classes derived from the <see cref="T:System.Dynamic.DynamicObject"/> class can override this method to specify dynamic behavior for operations such as setting a value for a property.
            </summary>
            <param name="binder">Provides information about the object that called the dynamic operation. The binder.Name property provides the name of the member to which the value is being assigned. For example, for the statement sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, binder.Name returns "SampleProperty". The binder.IgnoreCase property specifies whether the member name is case-sensitive.</param>
            <param name="value">The value to set to the member. For example, for sampleObject.SampleProperty = "Test", where sampleObject is an instance of the class derived from the <see cref="T:System.Dynamic.DynamicObject"/> class, the <paramref name="value"/> is "Test".</param>
            <returns>
            true if the operation is successful; otherwise, false. If this method returns false, the run-time binder of the language determines the behavior. (In most cases, a language-specific run-time exception is thrown.)
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.JsonObject.GetDynamicMemberNames">
            <summary>
            Returns the enumeration of all dynamic member names.
            </summary>
            <returns>
            A sequence that contains dynamic member names.
            </returns>
        </member>
        <member name="T:Elasticsearch.Net.SimpleJson">
             <summary>
             This class encodes and decodes JSON strings.
             Spec. details, see http://www.json.org/
            
             JSON uses Arrays and Objects. These correspond here to the datatypes JsonArray(IList&lt;object>) and JsonObject(IDictionary&lt;string,object>).
             All numbers are parsed to doubles.
             </summary>
        </member>
        <member name="M:Elasticsearch.Net.SimpleJson.DeserializeObject(System.String)">
            <summary>
            Parses the string json into a value
            </summary>
            <param name="json">A JSON string.</param>
            <returns>An IList&lt;object>, a IDictionary&lt;string,object>, a double, a string, null, true, or false</returns>
        </member>
        <member name="M:Elasticsearch.Net.SimpleJson.TryDeserializeObject(System.String,System.Object@)">
            <summary>
            Try parsing the json string into a value.
            </summary>
            <param name="json">
            A JSON string.
            </param>
            <param name="obj">
            The object.
            </param>
            <returns>
            Returns true if successfull otherwise false.
            </returns>
        </member>
        <member name="M:Elasticsearch.Net.SimpleJson.SerializeObject(System.Object,Elasticsearch.Net.IJsonSerializerStrategy)">
            <summary>
            Converts a IDictionary&lt;string,object> / IList&lt;object> object into a JSON string
            </summary>
            <param name="json">A IDictionary&lt;string,object> / IList&lt;object></param>
            <param name="jsonSerializerStrategy">Serializer strategy to use</param>
            <returns>A JSON encoded string, or null if object 'json' is not serializable</returns>
        </member>
        <member name="M:Elasticsearch.Net.SimpleJson.IsNumeric(System.Object)">
            <summary>
            Determines if a given object is numeric in any way
            (can be integer, double, null, etc).
            </summary>
        </member>
        <member name="M:Elasticsearch.Net.Transport`1.#ctor(`0)">
            <summary>
            Transport coordinates the client requests over the connection pool nodes and is in charge of falling over on different nodes
            </summary>
            <param name="configurationValues">The connectionsettings to use for this transport</param>
        </member>
        <member name="M:Elasticsearch.Net.Transport`1.#ctor(`0,Elasticsearch.Net.IRequestPipelineFactory,Elasticsearch.Net.IDateTimeProvider,Elasticsearch.Net.IMemoryStreamFactory)">
            <summary>
            Transport coordinates the client requests over the connection pool nodes and is in charge of falling over on different nodes
            </summary>
            <param name="configurationValues">The connectionsettings to use for this transport</param>
            <param name="pipelineProvider">In charge of create a new pipeline, safe to pass null to use the default</param>
            <param name="dateTimeProvider">The date time proved to use, safe to pass null to use the default</param>
            <param name="memoryStreamFactory">The memory stream provider to use, safe to pass null to use the default</param>
        </member>
        <member name="T:Purify.Purifier">
            <summary>
            The Uri classes in .NET prior to 4.5 and Mono scrub through your Uris and modify them in order to prevent vulnerabilities, for 
            example escaped slashes are unescaped. This scrubbing however prevents Uris that are inline with RFC 3986. Beyond that it prevents 
            using .NET's HTTP clients (HttpClient and WebClient) to talk to APIs that require accessing resources using escaped 
            slashes unless you are using .NET 4.5.
            <pre>
            This static class allows you to purify a Uri instance so that it remains untouched across all .NET runtime versions
            </pre>
            </summary>
        </member>
        <member name="M:Purify.Purifier.Purify(System.Uri)">
            <summary>
            Will purify the <param name="uri"></param> to the unscrubed version.
            <pre>Calling this will be a NOOP on .NET 4.5 and up.</pre>
            </summary>
            <param name="uri">The uri to be purified</param>
            <returns>The purified uri</returns>
        </member>
        <member name="M:Purify.Purifier.IPurifier.Purify(System.Uri)">
            <summary>
            purifies and returns the passed <param name="uri"></param>
            </summary>
        </member>
        <member name="T:Purify.Purifier.UriInfo">
            <summary>
            Class that breaks a Uri into path and query components given its orignal source
            </summary>
        </member>
    </members>
</doc>
